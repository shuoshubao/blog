{
  "js/ES2022": {
    "title": "ES2022",
    "content": "# Top-Level Await 顶级 Await\n\n```js\nconst response = await fetch(url)\n```\n\n# Private instance fields, methods, and accessors\n\n## Private class fields\n\n```js\nclass Test {\n  #firstName = 'test-name'\n}\n\nconst test = new Test()\ntest.firstName\n\n// Output: undefined\n```\n\n## Private class methods\n\n```js\nclass Test {\n  #addTestRunner(testRunner) {\n    this.testRunner = testRunner\n  }\n}\n\nconst test = new Test()\ntest.addTestRunner({ name: 'test' })\n\n// Output: TypeError: test.addTestRunner is not a function\n```\n\n## Private accessors (getters and setters)\n\n```js\nclass Test {\n  get #name() {\n    return 'test-name'\n  }\n}\n\nconst test = new Test()\ntest.name\n\n// Output: undefined\n```\n\n# Static class fields and methods\n\n## Static class fields\n\n```js\nclass Test {\n  static firstName = 'test-static-name'\n}\n\nTest.firstName\n\n// Output: test-static-name\n```\n\n## Static class methods\n\n```js\nclass Test {\n  static greeting() {\n    console.log('Hello this is a greeting from a static method')\n  }\n}\n\nTest.greeting()\n\n// Output: Hello this is a greeting from a static method\n```\n\n# Static class fields and methods\n\n## Static class fields\n\n```js\nclass Test {\n  static firstName = 'test-static-name'\n}\n\nTest.firstName\n\n// Output: test-static-name\n```\n\n## Static class methods\n\n```js\nclass Test {\n  static greeting() {\n    console.log('Hello this is a greeting from a static method')\n  }\n}\n\nTest.greeting()\n\n// Output: Hello this is a greeting from a static method\n```\n\n# Static class initialization blocks\n\n```js\nclass Test {\n    static numbers = [1, 2, 3, 4, 5, 6];\n    static evenNumbers = [];\n    static oddNumbers = [];\n\n    // static class initialization block\n    static {\n        this.numbers.forEach(number => {\n            if (!(number % 2)) {\n                this.evenNumbers.push(number);\n            } else {\n                this.oddNumbers.push(number);\n            }\n        });\n    }\n}\n\nTest.evenNumbers;\n// Output: [2, 4, 6]\n\nTest.oddNumbers;\n// Output: [1, 3, 5]\n```\n\n# Error: .cause\n\n```js\ntry {\n  const users = await getUsers()\n} catch (error) {\n  console.log(error) // Error: The array need a minimum of two elements\n  console.log(error.cause) // TypeError: Failed to fetch\n}\n```\n\n# Array.prototype.at()\n\n```js\nconst fruitsArray = ['banana', 'apple', 'orange', 'kiwi']\nconsole.log(fruitsArray.at(-1))\n// Output: kiwi\n```\n\n# String.prototype.at()\n\n```js\nconst fruit = 'kiwi'\nconsole.log(fruit.at(-1))\n// Output: i\n```\n\n# Object.hasOwn\n\n```js\nif (Object.hasOwn(object, 'foo')) {\n  console.log('has property foo')\n}\n```\n\n# RegExp 新增修饰符 /d\n\n```js\nconst regexExample = /greeting(\\d)/g\n\nconst exampleString = 'greeting1greeting2'\n\nconst result = [...exampleString.matchAll(regexExample)]\n\nconsole.log(result[0])\n```\n\n# Reference\n\n- https://dev.to/brayanarrieta/new-javascript-features-ecmascript-2022-with-examples-4nhg\n"
  },
  "js/ES2021": {
    "title": "ES2021",
    "content": "# String.prototype.replaceAll()\n\n# Promise.any()\n\n使用弱引用对象，该弱引用不会阻止 GC，并且可以在 GC 前使用 WeakRef.prototype.deref ( ) 解除该引用。\n\n# 下划线分隔符 \\_\n\n```js\nconst x = 2_3333_3333\n\n// 233333333\n```\n\n# 逻辑赋值操作符\n\n- ??=\n- &&=\n- ||=\n\n# WeakRefs\n\n# Private Methods\n\n```js\nclass Student {\n  #getAge() {\n    console.log('永远18岁')\n  }\n}\n\nstudent = new Student()\n\nstudent.getAge()\n\n// Error: student.getAge is not a function\n```\n\n# Intl\n\n## Intl.ListFormat\n\n```js\nconst list = ['Apple', 'Orange', 'Banana']\n\nnew Intl.ListFormat('en-GB', { style: 'long', type: 'conjunction' }).format(list)\n// \"Apple, Orange and Banana\"\n\nnew Intl.ListFormat('zh-cn', { style: 'short', type: 'conjunction' }).format(list)\n// 会根据语言来返回相应的格式化操作\n// \"Apple、Orange和Banana\"\n```\n\n## Intl.DateTimeFormat API 中的 dateStyle 和 timeStyle 的配置项\n\n```js\nlet a = new Intl.DateTimeFormat('en', {\n  timeStyle: 'short'\n})\n\nconsole.log('a = ', a.format(Date.now())) // \"13:31\"\n\nlet b = new Intl.DateTimeFormat('en', {\n  dateStyle: 'short'\n})\n\nconsole.log('b = ', b.format(Date.now())) // \"21.03.2012\"\n\n// 可以通过同时传入 timeStyle 和 dateStyle 这两个参数来获取更完整的格式化时间的字符串\nlet c = new Intl.DateTimeFormat('en', {\n  timeStyle: 'medium',\n  dateStyle: 'short'\n})\n\nconsole.log('c = ', c.format(Date.now())) // \"21.03.2012, 13:31\"\n```\n"
  },
  "js/ES2020": {
    "title": "ES2020",
    "content": "# Optional Chaining 可选链式调用\n\n```js\nflower.species?.lily\n\nflowers?.[1]\n\nplantFlowers?.()\n```\n\n# Nullish Coalescing 空值合并\n\n```js\nlet number = 0\nlet myNumber = number ?? 7\n```\n\n# Private Fields 私有字段\n\n```js\nclass Flower {\n  #leaf_color = 'green'\n\n  constructor(name) {\n    this.name = name\n  }\n\n  get_color() {\n    return this.#leaf_color\n  }\n}\n\nconst orchid = new Flower('orchid')\n\nconsole.log(orchid.get_color()) // 输出：green\nconsole.log(orchid.#leaf_color) // 报错：SyntaxError: Private field '#leaf_color' must be declared in an enclosing class\n```\n\n# Static Fields 静态字段\n\n```js\nclass Flower {\n  constructor(type) {\n    this.type = type\n  }\n  static create_flower(type) {\n    return new Flower(type)\n  }\n}\n\nconst rose = Flower.create_flower('rose') // 正常运行\n```\n\n# Promise.allSettled\n\n```js\nPromise.allSettled([promise_1, promise_2]).then(([promise_1_result, promise_2_result]) => {})\n```\n\n# Dynamic Import 动态引入\n\n```js\nimport('./A.js').then(mod => {})\n```\n\n# globalThis 全局对象\n\n```js\n// 浏览器\nwindow == globalThis // true\n\n// node.js\nglobal == globalThis // true\n```\n\n# BigInt\n\n```js\nconst theBiggerNumber = 9007199254740991n\nconst evenBiggerNumber = BigInt(9007199254740991)\n```\n"
  },
  "js/ES2019": {
    "title": "ES2019",
    "content": "# BigInt\n\n```js\nconst a = 123n\ntypeof a // 'bigint'\n```\n\n# String\n\n- String.prototype.trimStart()\n- String.prototype.trimEnd()\n- String.prototype.matchAll()\n\n# Symbol\n\n- Symbol.prototype.description\n\n# Array\n\n- Array.prototype.flat()\n- Array.prototype.flatMap()\n\n# Object\n\n- Object.fromEntries()\n\n# Function\n\n- Function.prototype.toString()\n\n# try-catch\n\n```js\ntry {\n} catch {}\n```\n\n# globalThis\n\n# import()\n"
  },
  "js/ES2018": {
    "title": "ES2018",
    "content": "# asynchronous iterators\n\n```js\nasync function process(array) {\n  for await (let i of array) {\n    doSomething(i)\n  }\n}\n```\n\n# Promise\n\n- Promise.prototype.finally()\n\n# Object\n\n- Rest/Spread\n"
  },
  "js/ES2017": {
    "title": "ES2017",
    "content": "# String\n\n- String.prototype.padStart()\n- String.prototype.padEnd()\n\n# Object\n\n- Object.values()\n- Object.entries()\n- Object.getOwnPropertyDescriptors()\n\n# async\n\n```js\nconst asyncFunc = async function () {\n  await promise\n}\n\nconst asyncFunc = async () => {\n  await promise\n}\n\nasyncFunc().then()\n```\n\n# Funtion\n\n> 允许函数的最后一个参数有尾逗号\n"
  },
  "js/ES2016": {
    "title": "ES2016",
    "content": "- 幂运算符 m \\*\\* n\n- Array.prototype.includes()\n"
  },
  "js/ES2015": {
    "title": "ES2015",
    "content": "# String\n\n- String.raw()\n- String.prototype.includes()\n- String.prototype.startsWith()\n- String.prototype.endsWith()\n- String.prototype.repeat()\n- String.prototype.at()\n- String.prototype.normalize()\n\n# Number\n\n- Number.EPSILON\n- Number.isFinite()\n- Number.isNaN()\n- Number.parseInt()\n- Number.parseFloat()\n- Number.isInteger()\n- Number.isSafeInteger()\n\n# Array\n\n- Array.of()\n- Array.from()\n- Array.prototype.copyWithin(target, start = 0, end = this.length)\n- Array.prototype.find()\n- Array.prototype.findIndex((value, index, arr) => {})\n- Array.prototype.fill()\n- Array.prototype.keys()\n- Array.prototype.values()\n- Array.prototype.entries()\n\n# Math\n\n- Math.trunc()\n- Math.sign()\n- Math.cbrt()\n- Math.clz32()\n- Math.imul()\n- Math.fround()\n- Math.hypot()\n- Math.expm1()\n- Math.log1p()\n- Math.log10()\n- Math.log2()\n- Math.sinh()\n- Math.cosh()\n- Math.tanh()\n- Math.asinh()\n- Math.acosh()\n- Math.atanh()\n\n# Function\n\n- Function.prototype.name\n\n# Object\n\n- obj[method].name\n- Object.is() // +0 != 0, NaN == NaN\n- Object.assign()\n- Object.getOwnPropertyDescriptor()\n- Object.setPrototypeOf()\n- Object.getPrototypeOf()\n- Object.prototype.**proto**\n\n# Symbol\n\n## static method\n\n- Symbol.for()\n- Symbol.keyFor()\n\n# Set [WeakSet]\n\n- new Set()\n- new Set([]) // array or array-like\n\n## property\n\n- Set.prototype.size\n\n## method\n\n- Set.prototype.add(value)\n- Set.prototype.delete(value)\n- Set.prototype.has(value)\n- Set.prototype.clear()\n\n## Iterator\n\n- Set.prototype.keys()\n- Set.prototype.values()\n- Set.prototype.entries()\n- Set.prototype.forEach()\n\n# Map [WeakSet]\n\n## property\n\n- Map.prototype.size\n\n## method\n\n- Map.prototype.get(key)\n- Map.prototype.set(key, value)\n- Map.prototype.has(key)\n- Map.prototype.delete(key)\n- Map.prototype.clear()\n\n## Iterator\n\n- Set.prototype.keys()\n- Set.prototype.values()\n- Set.prototype.entries()\n- Set.prototype.forEach()\n\n# Proxy\n\n## static method\n\n- Proxy.revocable(target, handler)\n\n## method\n\n- Proxy.prototype.get(target, propKey, receiver)\n- Proxy.prototype.set(target, propKey, value, receiver)\n- Proxy.prototype.has(target, propKey)\n- Proxy.prototype.deleteProperty(target, propKey)\n- Proxy.prototype.ownKeys(target)\n- Proxy.prototype.getOwnPropertyDescriptor(target, propKey)\n- Proxy.prototype.defineProperty(target, propKey, propDesc)\n- Proxy.prototype.preventExtensions(target)\n- Proxy.prototype.getPrototypeOf(target)\n- Proxy.prototype.isExtensible(target)\n- Proxy.prototype.setPrototypeOf(target, proto)\n- Proxy.prototype.apply(target, object, args)\n- Proxy.prototype.construct(target, args)\n\n# Reflect\n\n## static method\n\n- Reflect.apply(target, thisArg, args)\n- Reflect.construct(target, args)\n- Reflect.get(target, name, receiver)\n- Reflect.set(target, name, value, receiver)\n- Reflect.defineProperty(target, name, desc)\n- Reflect.deleteProperty(target, name)\n- Reflect.has(target, name)\n- Reflect.ownKeys(target)\n- Reflect.isExtensible(target)\n- Reflect.preventExtensions(target)\n- Reflect.getOwnPropertyDescriptor(target, name)\n- Reflect.getPrototypeOf(target)\n- Reflect.setPrototypeOf(target, prototype)\n\n# Promise\n\n## static method\n\n- Promise.resolve()\n- Promise.rejecr()\n- Promise.all()\n- Promise.race()\n- Promise.try()\n\n## method\n\n- Promise.prototype.then()\n- Promise.prototype.catch()\n- Promise.prototype.finally()\n\n# Generator\n\n- Generator.prototype.throw()\n- Generator.prototype.return()\n\n# ArrayBuffer\n\n## property\n\n- ArrayBuffer.prototype.byteLength\n\n## static method\n\n- ArrayBuffer.isView()\n\n## method\n\n- ArrayBuffer.prototype.slice()\n\n## TypedArray\n\n```js\nnew Int8Array() // 8 位有符号整数，长度 1 个字节\nnew Uint8Array() // 8 位无符号整数，长度 1 个字节\nnew Uint8ClampedArray() // 8 位无符号整数，长度 1 个字节，溢出处理不同\nnew Int16Array() // 16 位有符号整数，长度 2 个字节\nnew Uint16Array() // 16 位无符号整数，长度 2 个字节\nnew Int32Array() // 32 位有符号整数，长度 4 个字节\nnew Uint32Array() // 32 位无符号整数，长度 4 个字节\nnew Float32Array() // 32 位浮点数，长度 4 个字节\nnew Float64Array().BYTES_PER_ELEMENT.of() // 64 位浮点数，长度 8 个字节\n```\n\n### property\n\n- TypedArray.prototype.BYTES_PER_ELEMENT\n- TypedArray.prototype.byteLength\n- TypedArray.prototype.byteOffset\n- TypedArray.prototype.length\n\n### static method\n\n- TypedArray.from()\n\n### method\n\n- TypedArray.prototype.join(separator)\n- TypedArray.prototype.slice(start=0, end=this.length)\n- TypedArray.prototype.sort(comparefn)\n- TypedArray.prototype.reverse()\n- TypedArray.prototype.indexOf(searchElement, fromIndex=0)\n- TypedArray.prototype.lastIndexOf(searchElement, fromIndex?)\n- TypedArray.prototype.findIndex(predicate, thisArg?)\n- TypedArray.prototype.forEach(callbackfn, thisArg?)\n- TypedArray.prototype.map(callbackfn, thisArg?)\n- TypedArray.prototype.filter(callbackfn, thisArg?)\n- TypedArray.prototype.reduce(callbackfn, initialValue?)\n- TypedArray.prototype.reduceRight(callbackfn, initialValue?)\n- TypedArray.prototype.some(callbackfn, thisArg?)\n- TypedArray.prototype.every(callbackfn, thisArg?)\n- TypedArray.prototype.find(predicate, thisArg?)\n- TypedArray.prototype.fill(value, start=0, end=this.length)\n- TypedArray.prototype.entries()\n- TypedArray.prototype.values()\n- TypedArray.prototype.keys()\n- TypedArray.prototype.copyWithin(target, start[, end = this.length])\n- TypedArray.prototype.toString()\n- TypedArray.prototype.toLocaleString(reserved1?, reserved2?)\n- TypedArray.prototype.set()\n- TypedArray.prototype.subarray()\n\n---\n\n---\n\n# 语法糖\n\n## const let\n\n- const\n- let\n\n## template string\n\n```js\n;`hi, ${name}`\n```\n\n## 解构赋值\n\n- String\n- Number\n- Boolean\n- Array\n- 函数参数\n- 对象\n\n```js\nconst {Component} = React\n\nconst {\n    a,\n    b = 1\n} = data;\n\nconst a = ({b: b1, c: {d: d1}}) => {\n    // b1, d1\n};\n\nPromise.all([pro1, pro2])\n    .then([res1, res2] => {\n\n    });\n\nPromise.all([a, b].map(v => pro))\n    .then([res1, res2] => {\n\n    });\n```\n\n## Iterator\n\n- for...of\n- String、Array、array-like、Set、Map、WeakSet、WeakMap\n\n## typeof\n\n- number、string、boolean、undefined、function、object、`symbol`\n\n## 数组 spread ...\n\n```js\npush(...[1, 2, 3])\npush(0, ...[1, 2, 3], 4)\n[0, ...[1, 2], ...[3, 4], 5]\n```\n\n## 函数 rest 参数 ...\n\n```js\na(...args) {\n    // args\n}\n```\n\n## 函数参数默认值\n\n```js\nconst a = (name, sex = 1, data = {}) => {\n  // data\n}\n```\n\n## 箭头函数\n\n```js\nconst a = () => {}\nconst a = (b, c = 1) => {}\n```\n\n## Class\n\n```js\nclass ClassA {\nclass ClassB extends ClassA {\n    // new.target\n    console.log(new.target);\n    // 静态属性\n    static staticProp = 1;\n    // 私有属性\n    #privatePropA=0;\n    // 私有方法\n    #privateMethodA() {\n\n    }\n    // 实例属性\n    stateA = {};\n    // 静态方法\n    static classMethod() {\n\n    }\n    constructor(props) {\n        super(props);\n        // 实例属性\n        this.stateB = {};\n        // 私有属性\n        this.#privatePropA\n        // 绑定this\n        this.methodA = this.methodA.bind(this);\n    }\n    get propA() {}\n    set propA(val) {}\n    // 实例方法\n    methodA() {\n\n    }\n    // 绑定this\n    methodB: () => {\n\n    }\n}\n\nClassB.name\n```\n\n## Decorator\n\n```js\n// 修饰类\n@decorA\nclass A {\n  // 修饰类的方法\n  @decorB\n  mathodB() {}\n}\n\nconst decorA = target => {}\n\n// babel-plugin-transform-decorators\n```\n\n## module\n\n```js\nconst A = 1\nexport { A }\nexport { A as B }\nexport const C = 1\nexport const D = () => {}\nexport default A\nexport { A as default }\nexport default 'hello'\nexport default () => {}\n\nimport _ from 'lodash'\nimport * as lodash from '_'\nimport { each, map } from 'lodash'\nimport _, { each as forEach, map } from 'lodash'\n\nexport { each, map } from '_'\nexport { each, map as _map } from '_'\n\nexport * from '_'\nexport { each as default } from '_'\nexport { default as lodash } from '_'\n\nimport(specifier)\n  .then(module => {})\n  .catch(e => {})\n```\n\n# Referrence\n\n> [http://es6.ruanyifeng.com/](http://es6.ruanyifeng.com)\n>\n> [http://www.ecma-international.org/ecma-262/6.0/](http://www.ecma-international.org/ecma-262/6.0)\n>\n> [http://kangax.github.io/compat-table/es5/](http://kangax.github.io/compat-table/es5)\n>\n> [http://kangax.github.io/compat-table/es6/](http://kangax.github.io/compat-table/es6)\n"
  },
  "js/ES5": {
    "title": "ES5",
    "content": "# String\n\n- String.prototype.trim()\n- 访问字符串的属性\n\n# Array\n\n- Array.isArray()\n- Array.prototype.indexOf()\n- Array.prototype.lastIndexOf()\n- Array.prototype.every()\n- Array.prototype.some()\n- Array.prototype.forEach()\n- Array.prototype.map()\n- Array.prototype.filter()\n- Array.prototype.reduce()\n- Array.prototype.reduceRight()\n\n# Date\n\n- Date.now()\n- Date.prototype.toISOString()\n- Date.prototype.toJSON()\n\n# JSON\n\n- JSON.parse()\n- JSON.stringify()\n\n# Function\n\n- Function.prototype.bind()\n\n# Object\n\n- Object.keys()\n- Object.create()\n- Object.defineProperty()\n- Object.defineProperties()\n- Object.getPrototypeOf()\n- Object.getOwnPropertyNames()\n- Object.getOwnPropertyDescriptor()\n- Object.seal()\n- Object.freeze()\n- Object.preventExtensions()\n- Object.isSealed()\n- Object.isFrozen()\n- Object.isExtensible()\n"
  },
  "js/ES3": {
    "title": "ES3",
    "content": "# Number\n\n## property\n\n- Number.MAX_VALUE\n- Number.MIN_VALUE\n- Number.NaN\n- Number.NEGATIVE_INFINITY\n- Number.POSITIVE_INFINITY\n\n## method\n\n- Number.prototype.toFixed(num)\n- Number.prototype.toExponential(num)\n- Number.prototype.toPrecision(num)\n\n## spec\n\n- Number.prototype\n- Number.constructor\n- Number.prototype.toString()\n- Number.prototype.valueOf()\n\n# String\n\n## property\n\n- String.prototype.length\n\n## method\n\n- String.prototype.charAt(index)\n- String.prototype.charCodeAt(index)\n- String.prototype.toLowerCase()\n- String.prototype.toUpperCase()\n- String.prototype.concat(stringX)\n- String.prototype.indexOf(searchVal, fromIndex)\n- String.prototype.lastIndexOf(searchVal, fromIndex)\n- String.prototype.slice(start, end)\n- String.prototype.substr(start, length)\n- String.prototype.substring(start, end)\n- String.prototype.split(separator[, howmany])\n- String.prototype.replace(regexp | substr, replacement)\n- String.prototype.search(regexp)\n- String.prototype.match(searchval, regexp)\n\n## spec\n\n- String.prototype\n- String.constructor\n- String.prototype.toString()\n- String.prototype.valueOf()\n\n# Array\n\n## property\n\n- Array.prototype.length\n\n## method\n\n- Array.prototype.concat(arrayX)\n- Array.prototype.join()\n- Array.prototype.push(newVal[, ...newValX])\n- Array.prototype.pop()\n- Array.prototype.shift()\n- Array.prototype.unshift(newVal[, ...newValX])\n- Array.prototype.reverse()\n- Array.prototype.sort([sortby])\n- Array.prototype.slice(start, end)\n- Array.prototype.splice(index, howmany[, ...newValX])\n\n## spec\n\n- Array.prototype\n- Array.constructor\n- Array.prototype.toString()\n- Array.prototype.valueOf()\n\n# Math\n\n## property\n\n- Math.PI\n- Math.E\n- Math.LN2\n- Math.LN10\n- Math.LOG2E\n- Math.LOG10E\n- Math.SQRT1_2\n- Math.SQRT2\n\n## method\n\n- Math.abs(x)\n- Math.max(x, y)\n- Math.min(x, y)\n- Math.random()\n- Math.ceil(x)\n- Math.floor(x)\n- Math.round(x)\n- Math.pow(x, y)\n- Math.sqrt(x)\n- Math.exp(x)\n- Math.log(x)\n- Math.sin(x)\n- Math.cos(x)\n- Math.tan(x)\n- Math.asin(x)\n- Math.acos(x)\n- Math.atan(x)\n- Math.atan2(y, x)\n\n## spec\n\n- Math.prototype.valueOf()\n\n# Date\n\n## method\n\n- Date()\n- Date.parse(datestring)\n- Date.prototype.getDay()\n- Date.prototype.getTime() // setTime()\n- Date.prototype.getDate() // setDate()\n- Date.prototype.getMonth() // setMonth()\n- Date.prototype.getFullYear() // setFullYear()\n- Date.prototype.getHours() // setHours()\n- Date.prototype.getMinutes() // setMinutes()\n- Date.prototype.getSeconds() // setSeconds()\n- Date.prototype.getMilliseconds() // setMilliseconds()\n\n## spec\n\n- Date.prototype\n- Date.constructor\n- Date.prototype.toString()\n- Date.prototype.valueOf()\n\n# RegExp\n\n## property\n\n- RegExp.prototype.global\n- RegExp.prototype.ignoreCase\n- RegExp.prototype.multiline\n- RegExp.prototype.lastIndex\n- RegExp.prototype.source\n\n## method\n\n- RegExp.prototype.compile(regexp, modifier)\n- RegExp.prototype.exec(string)\n- RegExp.prototype.test(string)\n\n# Error\n\n## property\n\n- Error.prototype.name\n- Error.prototype.message\n\n## spec\n\n- Error.prototype.toString()\n\n## Derive Error\n\n- SyntaxError\n- ReferenceError\n- RangeError\n- TypeError\n- URIError\n- EvalError\n\n# Function\n\n## property\n\n- Function.prototype.name\n- Function.prototype.length\n\n## method\n\n- Function.prototype.call()\n- Function.prototype.apply()\n- Function.prototype.bind()\n\n## spec\n\n- Function.prototype.constructor\n- Function.prototype.toString()\n\n# Object\n\n## property\n\n- Object.prototype\n- Object.prototype.constructor\n- Object.prototype.**proto**\n\n## method\n\n- Object.prototype.hasOwnProperty()\n- Object.prototype.isPrototypeOf()\n- Object.prototype.propertyIsEnumerable()\n- Object.prototype.toString()\n- Object.prototype.valueOf()\n\n# Global\n\n## property\n\n- undefined\n- NaN\n- Infinity\n\n## function\n\n- eval()\n- Number()\n- String()\n- isFinite()\n- isNaN()\n- parseInt()\n- parseFloat()\n- decodeURIComponent()\n- encodeURIComponent()\n"
  },
  "js/React": {
    "title": "React",
    "content": "# ReactDOM\n\n## ReactDOM.render()\n\n```js\nReactDOM.render(<h1>Hello, world!</h1>, document.getElementById('app'))\n```\n\n## ReactDOM.findDOMNode()\n\n```js\nReactDOM.findDOMNode(this.refs[refName])\n```\n\n# React\n\n## props\n\n- static defaultProps = {}\n- this.props[propsName]\n- this.props.children\n\n## special props\n\n```text\nkey\nref\ndangerouslySetInnerHTML={{__html: ''}}\n{...props}\n```\n\n## state\n\n- this.state = {}\n- this.state[stateName]\n- this.setState({})\n\n> 1. 组件类的第一个字母必须大写\n> 2. 组件类只能包含一个顶层标签\n\n# Component Lifecycle\n\n## Mounting [已插入真实 DOM]\n\n- constructor()\n- componentWillMount()\n- render()\n- componentDidMount()\n\n## Updating [正在被重新渲染]\n\n- componentWillReceiveProps()\n- shouldComponentUpdate()\n- componentWillUpdate(object nextProps, object nextState)\n- render()\n- componentDidUpdate(object prevProps, object prevState)\n\n## Unmounting [已移出真实 DOM]\n\n- componentWillUnmount()\n\n# Other APIs\n\n## Component APIs\n\n- setState()\n- forceUpdate()\n\n## Class Properties\n\n- defaultProps\n- displayName\n- propTypes\n\n## Instance Properties\n\n- props\n- state\n\n```js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types'\n\nexport default class extends React.Component {\n  static defaultProps = {}\n  static propTypes = {\n    visible: propTypes.bool.isRequired\n  }\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n}\n\nReactDOM.render(<App />, document.querySelector('#root'))\n```\n\n# PropTypes\n\n- React.PropTypes.array\n- React.PropTypes.bool\n- React.PropTypes.func\n- React.PropTypes.number\n- React.PropTypes.object\n- React.PropTypes.string\n- React.PropTypes.node\n- React.PropTypes.element\n- React.PropTypes.instanceOf(Message)\n- React.PropTypes.oneOf([])\n- React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number, React.PropTypes.instanceOf(Message) ])\n- React.PropTypes.arrayOf(React.PropTypes.number)\n- React.PropTypes.objectOf(React.PropTypes.number)\n- React.PropTypes.shape({color: React.PropTypes.string, fontSize: React.PropTypes.number })\n- React.PropTypes.func.isRequired\n- React.PropTypes.any.isRequired\n- customProp: (props, propName, componentName) => {}\n\n# Event\n\n> SyntheticEvent 、 nativeEvent\n\n- boolean bubbles\n- boolean cancelable\n- DOMEventTarget currentTarget\n- boolean defaultPrevented\n- number eventPhase\n- boolean isTrusted\n- DOMEvent nativeEvent\n- void preventDefault()\n- boolean isDefaultPrevented()\n- void stopPropagation()\n- boolean isPropagationStopped()\n- DOMEventTarget target\n- number timeStamp\n- string type\n\n| Event Type  | Event names                                                                                                                                                                                                                                                       | Properties                                                                                                                     |\n| ----------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| Mouse       | onClick onContextMenu onDoubleClick onDrag onDragEnd onDragEnter onDragExit onDragLeave onDragOver onDragStart onDrop onMouseDown onMouseEnter onMouseLeave onMouseMove onMouseOut onMouseOver onMouseUp                                                          | altKey button buttons clientX clientY ctrlKey getModifierState(key) metaKey pageX pageY relatedTarget screenX screenY shiftKey |\n| Wheel       | onWheel                                                                                                                                                                                                                                                           | deltaMode deltaX deltaY deltaZ                                                                                                 |\n| Keyboard    | onKeyDown onKeyPress onKeyUp                                                                                                                                                                                                                                      | altKey charCode ctrlKey getModifierState(key) key keyCode locale location metaKey repeat shiftKey which                        |\n| Focus       | onFocus onBlur                                                                                                                                                                                                                                                    | DOMEventTarget relatedTarget                                                                                                   |\n| Form        | onChange onInput onSubmit                                                                                                                                                                                                                                         |                                                                                                                                |\n| Touch       | onTouchCancel onTouchEnd onTouchMove onTouchStart                                                                                                                                                                                                                 | altKey changedTouches ctrlKey getModifierState(key) metaKey shiftKey targetTouches touches                                     |\n| Selection   | onSelect                                                                                                                                                                                                                                                          |                                                                                                                                |\n| Clipboard   | onCopy onCut onPaste                                                                                                                                                                                                                                              | DOMDataTransfer clipboardData                                                                                                  |\n| UI          | onScroll                                                                                                                                                                                                                                                          | detail view                                                                                                                    |\n| Image       | onLoad onError                                                                                                                                                                                                                                                    |                                                                                                                                |\n| Media       | onAbort onCanPlay onCanPlayThrough onDurationChange onEmptied onEncrypted onEnded onError onLoadedData onLoadedMetadata onLoadStart onPause onPlay onPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend onTimeUpdate onVolumeChange onWaiting |                                                                                                                                |\n| Transition  | onTransitionEnd                                                                                                                                                                                                                                                   | propertyName pseudoElement elapsedTime                                                                                         |\n| Animation   | onAnimationStart onAnimationEnd onAnimationIteration                                                                                                                                                                                                              | animationName pseudoElement elapsedTime                                                                                        |\n| Composition | onCompositionEnd onCompositionStart onCompositionUpdate                                                                                                                                                                                                           | string data                                                                                                                    |\n\n# Form event\n\n- event.target.value input、textarea\n- event.target.checked checkbox、radio\n- event.target.selected option\n\n# Top-Level API\n\n## React\n\n- React.Component\n- React.createClass\n- React.createElement\n- React.cloneElement\n- React.createFactory\n- React.isValidElement\n- React.DOM\n- React.PropTypes\n- React.Children\n  - React.Children.map\n  - React.Children.forEach\n  - React.Children.count\n  - React.Children.only\n  - React.Children.toArray\n\n## ReactDOM\n\n- ReactDOM.render\n- ReactDOM.findDOMNode\n- ReactDOM.unmountComponentAtNode\n\n## ReactDOMServer\n\n- ReactDOMServer.renderToString\n- ReactDOMServer.renderToStaticMarkup\n\n## Term\n\n- React Elements\n- Factories\n- React Nodes\n- React Components\n\n# DOM Elements [#](https://facebook.github.io/react/docs/dom-elements.html#all-supported-html-attributes)\n\n## Differences In Attributes\n\n- style\n- className\n- htmlFor\n- onChange\n- dangerouslySetInnerHTML\n- value defaultValue\n- checked defaultChecked\n- selected\n\n## HTML Attributes\n\n- className\n- htmlFor\n- formAction\n- formMethod\n- readOnly\n- autoComplete\n- autoFocus\n- maxLength\n- minLength\n- contentEditable\n- colSpan\n- rowSpan\n- marginHeight\n- marginWidth\n"
  },
  "js/Vue": {
    "title": "Vue",
    "content": "# 全局配置\n\n## Vue.config\n\n- silent\n- optionMergeStrategies\n- devtools\n- errorHandler\n- warnHandler\n- ignoredElements\n- keyCodes\n- performance\n- productionTip\n\n# 全局 API\n\n- Vue.component\n- Vue.nextTick\n- Vue.directive\n- Vue.filter\n- Vue.mixin\n- Vue.extend\n- Vue.set\n- Vue.delete\n- Vue.use\n- Vue.compile\n- Vue.version\n\n# 选项\n\n```js\nnew Vue({\n    // DOM\n    el: '#el',\n    template: '',\n    render: createElement => {},\n    renderError: (createElement, err) => {},\n\n    // 数据\n    props: [],\n    propsData: {},\n    data: {},\n    computed: {\n        extraData: function() {}\n    },\n    methods: {\n        extraData: function() {}\n    },\n    watch: {\n        extraData: function() {}\n    },\n    // 生命周期\n    beforeCreate: () => {},\n    created: () => {},\n    beforeMount: () => {},\n    mounted: () => {},\n    beforeUpdate: () => {},\n    updated: () => {},\n    activated: () => {},\n    deactivated: () => {},\n    beforeDestroy: () => {},\n    destroyed: () => {},\n    // 资源\n    directives: {} // 指令\n    filters: {}, // 过滤器\n    components: {} // 组件\n    // 组合\n    parent\n    mixins\n    extends\n    provide\n    inject\n    // 其他\n    name\n    delimiters\n    functional\n    model\n    inheritAttrs\n    comments: false, // 保留且渲染模板中的 HTML 注释\n})\n```\n\n> 过滤器 `filter` 只能用于两个地方: mustache 插值和 v-bind 表达式\n\n# 实例属性\n\n- .\\$refs\n- .\\$data\n- .\\$props\n- .\\$el\n- .\\$options\n- .\\$root\n- .\\$parent\n- .\\$children\n- .\\$attrs\n- .\\$listeners\n- .\\$slots\n- .\\$scopedSlots\n- .\\$isServer\n\n# 实例方法\n\n## 数据\n\n- .watch()\n- .set()\n- .delete()\n\n## 事件\n\n- .\\$on()\n- .\\$once()\n- .\\$off()\n- .\\$emit()\n\n## 生命周期\n\n- .\\$mount()\n- .\\$forceUpdate()\n- .\\$nextTick()\n- .\\$destroy()\n\n## 指令 directive\n\n- v-text\n- v-html\n- v-show\n- v-if\n- v-else\n- v-else-if\n- v-for\n- v-on -> `@`\n- v-bind => `:`\n- v-model\n- v-once\n- v-pre\n- v-cloak\n\n# 事件\n\n```html\n// 传参\n<button v-on:click=\"hi\">button</button>\n<button @click=\"hi\">button</button>\n<button @click=\"hi('a')\">button</button>\n<button @click=\"hi('a', $event)\">button</button>\n\n> 事件对象: `$event` // 事件修饰符 .stop .prevent .capture .self .once // 按键 .enter .tab .delete .esc .space .up .down\n.left .right // 修饰键 .ctrl .alt .shift .meta // 滑鼠按键修饰符 .left .right .middle\n```\n"
  },
  "js/Vue-vnode": {
    "title": "Vue-vnode",
    "content": "```js\n{\n    // 和`v-bind:class`一样的 API\n    'class': {\n        foo: true,\n        bar: false\n    },\n    // 和`v-bind:style`一样的 API\n    style: {\n        color: 'red',\n        fontSize: '14px'\n    },\n    // 正常的 HTML 特性\n    attrs: {\n        id: 'foo'\n    },\n    // 组件 props\n    props: {\n        myProp: 'bar'\n    },\n    // DOM 属性\n    domProps: {\n        innerHTML: 'baz'\n    },\n    // 事件监听器基于 `on`\n    // 所以不再支持如 `v-on:keyup.enter` 修饰器\n    // 需要手动匹配 keyCode\n    on: {\n        click: this.clickHandler\n    },\n    // 仅对于组件，用于监听原生事件，而不是组件内部使用\n    // `vm.$emit` 触发的事件\n    nativeOn:\n    {\n        click: this.nativeClickHandler\n    },\n    // 自定义指令 注意，你无法对 `binding` 中的 `oldValue`\n    // 赋值，因为 Vue 已经自动为你进行了同步\n    directives: [\n    {\n        name: 'my-custom-directive',\n        value: '2',\n        expression: '1 + 1',\n        arg: 'foo',\n        modifiers:\n        {\n            bar: true\n        }\n    }],\n    // Scoped slots in the form of\n    // { name: props => VNode | Array<VNode> }\n    scopedSlots: {\n        default: props => createElement('span', props.text)\n    },\n    // 如果组件是其他组件的子组件，需为插槽指定名称\n    slot: 'name-of-slot',\n    // 其他特殊顶层属性\n    key: 'myKey',\n    ref: 'myRef'\n}\n```\n"
  },
  "js/Redux": {
    "title": "Redux",
    "content": "# Redux\n\n- var store = Redux.createStore(function(state, action))\n- store.getState()\n- store.subscribe(function())\n- store.dispatch({type: 'TYPE_NAME'})\n"
  },
  "js/React-Native": {
    "title": "React Native",
    "content": "# Getting Started\n\n> brew install node\n>\n> brew install watchman\n>\n> \\$ npm install -g react-native-cli\n>\n> react-native init AwesomeProject\n>\n> cd AwesomeProject\n>\n> react-native run-ios\n\n# Hello world\n\n```js\nimport React, { Component } from 'react'\nimport { AppRegistry, Text } from 'react-native'\n\nclass Hello extends Component {\n  render() {\n    return <Text>Hello world!</Text>\n  }\n}\n\nAppRegistry.registerComponent('AwesomeProject', () => Hello)\n```\n\n# Component\n\n## react-native\n\n- AppRegistry\n- StyleSheet\n\n# base\n\n- View\n- ListView\n- ScrollView\n- Navigator\n- Text\n- Image\n- TextInput\n- TouchableHighlight\n\n- Animated\n- LayoutAnimation\n- TouchableOpacity\n"
  },
  "js/Angular": {
    "title": "Angular",
    "content": "# 指令 ng-\n\n- ng-app\n- ng-model\n- ng-eventType\n- ng-controller\n\n> 指令都写在 html 标签中\n\n# 服务 \\$\n\n- \\$rootScope\n- \\$scope\n\n```js\n$scope.$watch(str, function(newVal, oldVal) {} [, ifWatchAll])\n$scope.$watch(function(){})\n```\n\n- \\$timeout\n- \\$interval\n  - \\$interval.cancel()\n- \\$filter\n\n> 依赖注入：需要什么服务，就在形参列表中添加服务名, 服务都写在函数中\n\n- \\$timeout(function() {});\n- \\$interval(function() {});\n- \\$filter('filterName')(arg1, arg2, arg3);\n\n# 过滤器 filter\n\n- currency\n- number\n- date\n- json\n- limitTo\n- filter\n- orderBy\n- lowercase/uppercase\n\n> 写在 \\{ filter : arg1 : arg2 : arg3 \\} 中\n\n> \\| 称为 `管道`\n\n> `:` 后面是`参数`，多个参数用多个 `:`\n\n# 模块化\n\n- angular.module()\n- controller()\n- run()\n- filter()\n\n```js\nvar mod1 = angular.module('appName', [需要依赖的模块数组])\nmod1.controller('Aaa', ['$scope', '$rootScope', function ($scope, $rootScope) {}])\nmod1.run(['$rootScope', function ($rootScope) {}])\nmod1.filter('filterName', function () {\n  return function (str) {\n    return str\n  }\n})\n```\n\n# 工具方法\n\n- angular.module()\n- angular.bind()\n- angular.copy()\n- angular.extend()\n- angular.isNumber()\n- angular.isString()\n- angular.isUndefined()\n- angular.isDefined()\n- angular.isObject()\n- angular.isDate()\n- angular.isArray()\n- angular.isFunction()\n- angular.isElement()\n- angular.version\n- angular.equeals()\n- angular.forEach()\n- angular.element()\n- angular.identity()\n- angular.noop()\n- angular.lowercase()\n- angular.uppercase()\n- angular.bootstrap()\n- angular.injector()\n\n> angular.element() 底下有一堆的 DOM 操作函数，类似于 jQuery\n\n# jqLite\n\n- angular.element()\n- prop()\n- attr() \\* Does not support functions as parameters\n- css() \\* Only retrieves inline-styles, does not call getComputedStyle()\n- hasClass()\n- addClass()\n- removeClass()\n- toggleClass()\n- clone()\n- after()\n- append()\n- prepend()\n- detach()\n- empty()\n- remove()\n- wrap()\n- replaceWith()\n- on() : Does not support namespaces, selectors or eventData\n- one() : Does not support namespaces or selectors\n- off() : Does not support namespaces or selectors\n- bind() : Does not support namespaces, selectors or eventData\n- unbind() : Does not support namespaces\n- triggerHandler() \\* Passes a dummy event object to handlers.\n- find() \\* Limited to lookups by tag name\n- eq()\n- children() \\* Does not support selectors\n- parent() \\* Does not support selectors\n- next() \\* Does not support selectors\n- ready()\n- contents()\n- data()\n- removeData()\n- val()\n- text()\n- html()\n- removeAttr()\n\n# 迭代指令\n\n- \\$index\n- \\$first\n- \\$middle\n- \\$last\n- \\$even\n- \\$odd\n- ng-repeat-start\n- ng-repeat-end\n\n# 事件指令\n\n- ng-click/dblclick\n- ng-mousedown/up\n- ng-mouseenter/leave\n- ng-mousemove/over/out\n- ng-keydown/up/press\n- ng-focus/blur\n- ng-submit\n- ng-selected\n- ng-change\n- ng-copy\n- ng-cut\n- ng-paste\n\n> `ng-change` 必须和 `ng-model` 同时存在\n\n# input 指令\n\n- ng-disabled\n- ng-readonly\n- ng-checked\n- ng-value\n\n- ng-bind\n- ng-bind-template\n- ng-bind-html\n- ng-cloak\n- ng-non-bindable\n\n# 属性指令\n\n- ng-class\n- ng-style\n- ng-href\n- ng-src\n- ng-attr-(suffix)\n\n> 注：表达式必须在 `{}` 中，其他的指令必须是在字符串中\n\n# 样式指令\n\n- ng-show\n- ng-hide\n- ng-if\n- ng-swtich\n  - on\n  - default\n  - when\n- ng-open\n\n# DOM 指令\n\n- ng-init\n- ng-include\n- ng-model\n  - ng-model-option\n  - updateOn\n- ng-controller\n  - as\n\n> `ng-model-option` 的值 \\{\\} 中\n\n# 标签指令\n\n- \\<a\\>\n- \\<select\\>\n  - ng-options\n  - for in\n- \\<textarea\\>\n- \\<input\\>\n- \\<form\\>\n\n# 表单验证\n\n- \\$valid\n- \\$invalid\n- \\$pristine\n- \\$dirty\n- \\$error\n- ng-minlength\n- ng-maxkength\n- ng-pattern\n\n```html\nng-valid ng-invalid ng-pristine ng-dirty\n```\n\n> 1. novalidate\n> 2. `name` 的方式进行查找\n> 3. 配合 `ng-model`\n\n# 自定义指令\n\ndirective (angular.module)\n\n```js\nmod.directive('directiveName', function () {\n  return {\n    restrict: 'AECM',\n    replace: false | true,\n    transclude: false | true,\n    template: 'str',\n    templateUrl: 'url',\n    scope: false | true | {},\n    controller: ['$scope', function ($scope) {}],\n    link: function (scope, element, attr, reController) {}\n  }\n})\n```\n\n- restrict\n\n  - A: attribute\n  - E: element\n  - C: class\n  - M: comment\n\n- transclude\n\n> 配合 `ng-transclude`\n\n- template / templateUrl : 模板\n- scope\n  - false\n  - true : 独立作用域\n  - {} : 隔离作用域 ： 传入数据\n    - 绑定策略\n    - @ : 绑定空字符串\n    - = : 绑定变量\n    - & : 绑定函数\n- controller : 定义共享属性和方法\n- link : DOM 操作\n\n# \\$http 服务\n\n- method : GET / POST / JSONP\n- url : ''\n- params: json\n- data : string / json\n- headers : object\n- transformRequest : fn\n- transformResponse : fn\n- cache : boolean / Cache object\n- timeout : number\n- widthCredentials : boolean\n\n# \\$location 服务\n\n- absUrl()\n- path()\n- hash()\n- search()\n- replace()\n- host\n- port()\n- protocol()\n\n# \\$anchorScroll 服务\n\n- \\$anchorScroll()\n\n# \\$cacheFactory 服务\n\n```js\nvar cache = $cacheFactory(name[, { capacity: num }])\n```\n\n- info()\n  - id\n  - size\n  - [capacity]\n- put(name, value)\n- get(name)\n- remove()\n\n# \\$log 服务\n\n- log()\n- info()\n- warn()\n- error()\n\n# \\$interpolate 服务\n\n# \\$q 服务\n\n- defer()\n- resolve()\n- reject()\n- notify()\n- then()\n- promise\n\n> promise 的实现\n\n# 供应商\n\n> 服务的相关初始配置操作\n\n- config()\n  - provider\n  - \\$interpolateProvider\n    - startSymbol()\n    - endSymbol()\n  - \\$logProvider\n    - debugEnabled()\n  - \\$anchorScrollProvider\n    - disableAutoScrolling()\n\n# factory 自定义服务\n\n```js\nmod.factory('serviceName', [\n  '',\n  '',\n  function () {\n    return {}\n  }\n])\n```\n\n> 不能进行初始化配置，即没有供应商\n\n# provider 自定义服务\n\n```js\nmod.provider('serviceName', [\n  function () {\n    return {\n      $get: function () {}\n    }\n  }\n])\n```\n\n> \\$get\n>\n> 可以使用供应商\n\n# constant / value\n\n> 都是定义常量，但 constant 可以使用 config, 且不用加 Provider 后缀\n"
  },
  "js/Base64": {
    "title": "base64",
    "content": "# Browser\n\n```js\n// 编码\nconst encodedData = btoa('shuoshubao') // 'c2h1b3NodWJhbw=='\n\n// 解码\nconst decodedData = atob(encodedData) // 'shuoshubao'\n```\n\n# Nodejs\n\n`btoa` 和 `atob` 也可以直接在 nodejs 中使用.\n\n- Stability: 3 - Legacy. Use Buffer.from(data, 'base64') instead.\n- Stability: 3 - Legacy. Use buf.toString('base64') instead.\n\n[nodejs atob](https://nodejs.org/api/globals.html#atobdata)\n\n```js\n// 编码\nconst encodedData = Buffer.from('shuoshubao').toString('base64') // 'c2h1b3NodWJhbw=='\n\n// 解码\nconst decodedData = Buffer.from(encodedData, 'base64').toString() // 'shuoshubao'\n```\n\n# Unicode 字符串\n\n## encodeURIComponent\n\n```js\n// 编码\nconst encodedData = btoa(encodeURIComponent('硕鼠宝')) // 'JUU3JUExJTk1JUU5JUJDJUEwJUU1JUFFJTlE'\n\n// 解码\nconst decodeURIComponent(atob(encodedData)) // '硕鼠宝'\n```\n\n## Uint16Array\n\n```js\nconst encode = string => {\n  const codeUnits = new Uint16Array(string.length)\n  for (let i = 0; i < codeUnits.length; i++) {\n    codeUnits[i] = string.charCodeAt(i)\n  }\n  const charCodes = new Uint8Array(codeUnits.buffer)\n  let result = ''\n  for (let i = 0; i < charCodes.byteLength; i++) {\n    result += String.fromCharCode(charCodes[i])\n  }\n  return result\n}\n```\n\n```js\nconst decode = binary => {\n  const bytes = new Uint8Array(binary.length)\n  for (let i = 0; i < bytes.length; i++) {\n    bytes[i] = binary.charCodeAt(i)\n  }\n  const charCodes = new Uint16Array(bytes.buffer)\n  let result = ''\n  for (let i = 0; i < charCodes.length; i++) {\n    result += String.fromCharCode(charCodes[i])\n  }\n  return result\n}\n```\n\n# Packages\n\n- js-base64\n- base64-js\n- base-64\n- crypto-js\n\n# Reference\n\n[MDN atob](https://developer.mozilla.org/zh-CN/docs/Web/API/atob)\n[MDN btoa](https://developer.mozilla.org/zh-CN/docs/Web/API/btoa)\n"
  },
  "js/prefers-color-scheme": {
    "title": "暗黑模式",
    "content": "# css\n\n```css\n@media (prefers-color-scheme: dark) {\n  html {\n    background: #000;\n  }\n}\n\n@media (prefers-color-scheme: light) {\n  html {\n    background: #fff;\n  }\n}\n```\n\n# js\n\n```js\nexport const isDark = () => {\n  const { matchMedia } = window\n  return matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nexport const addListenerPrefersColorScheme = callback => {\n  const { matchMedia } = window\n  matchMedia('(prefers-color-scheme: dark)').addListener(mediaQueryList => {\n    callback(mediaQueryList.matches)\n  })\n  matchMedia('(prefers-color-scheme: light)').addListener(mediaQueryList => {\n    callback(!mediaQueryList.matches)\n  })\n}\n```\n\n# Reference\n\n- [MDN matchMedia](https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia)\n"
  },
  "js/Strict-Mode": {
    "title": "严格模式",
    "content": "1. 严格模式下无法再意外创建全局变量 (Uncaught ReferenceError: xxx is not defined)\n2. 严格模式会使引起静默失败(silently fail, 注:不报错也没有任何效果)的赋值操抛出异常\n3. 在严格模式下, 试图删除不可删除的属性时会抛出异常(之前这种操作不会产生任何效果) (Uncaught TypeError: Cannot delete property 'xxx' of function Object())\n4. 在 Gecko 版本 34 之前，严格模式要求一个对象内的所有属性名在对象内必须唯一 (ES6 中已修复)\n5. 严格模式要求函数的参数名唯一 (Uncaught SyntaxError: Duplicate parameter name not allowed in this context)\n6. 严格模式禁止八进制数字语法 (Uncaught SyntaxError: Octal literals are not allowed in strict mode.)\n7. ES6 中的严格模式禁止设置 primitive 值的属性 (String Number Boolean Symbol)\n\n8. 严格模式禁用 with\n9. 严格模式下的 eval 不再为上层范围(surrounding scope,注:包围 eval 代码块的范围)引入新变量\n10. 严格模式禁止删除声明变量 (Uncaught SyntaxError: Delete of an unqualified identifier in strict mode.)\n\n11. eval 和 arguments 不能通过程序语法被绑定(be bound)或赋值 (Uncaught SyntaxError: Unexpected eval or arguments in strict mode)\n12. 严格模式下，参数的值不会随 arguments 对象的值的改变而变化\n13. 不再支持 arguments.callee (Uncaught TypeError: 'caller', 'callee', and 'arguments' properties may not be accessed on strict mode functions or the arguments objects for calls to them)\n\n14. 在严格模式下通过 this 传递给一个函数的值不会被强制转换为一个对象 (call apply bind, 没传 this 则为 undefined)\n15. 在严格模式中再也不能通过广泛实现的 ECMAScript 扩展“游走于”JavaScript 的栈中\n16. 严格模式下的 arguments 不会再提供访问与调用这个函数相关的变量的途径\n\n17. 在严格模式中一部分字符变成了保留的关键字: let, public, static, yield, implements, interface, package, private, protected\n18. 严格模式禁止了不在脚本或者函数层面上的函数声明\n\n# Referrence\n\n> [https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Strict_mode](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Strict_mode)\n>\n> [https://www.ecma-international.org/ecma-262/5.1/#sec-10.1.1](https://www.ecma-international.org/ecma-262/5.1/#sec-10.1.1)\n>\n> [https://www.ecma-international.org/ecma-262/6.0/#sec-strict-mode-code](https://www.ecma-international.org/ecma-262/6.0/#sec-strict-mode-code)\n"
  },
  "js/Reduce": {
    "title": "Reduce的应用",
    "content": "> 虽然你去百度上搜索 `reduce`, 发现只给了一个求和这一个 demo, 但别以为 reduce 的作用就止于求和\n\n# Number\n\n## 求和\n\n```js\nconst sum = arr => arr.reduce((prev, cur) => prev + cur)\n```\n\n## 极值\n\n```js\nconst min = arr => arr.reduce((prev, cur) => Math.min(prev, cur))\nconst max = arr => arr.reduce((prev, cur) => Math.max(prev, cur))\n```\n\n## 阶乘\n\n```js\nconst factorial = N => Array.from(Array(N), (v, i) => i + 1).reduce((prev, cur) => prev * cur)\n\nfactorial(5) // 120\n```\n\n# Array\n\n```js\n// 需求\n// 数据源\nconst data = [\n  '1000001001',\n  '1000001002',\n  '1000001003',\n  '2000001009',\n  '2000001008',\n]\n// 需要得到\n{\n  '10000': ['1000001001', '1000001002', '1000001003'],\n  '20000': ['200001009', '200001008']\n}\n\nconst convertArrayToJson = arr => arr.reduce((prev, cur) => {\n  const short = cur.slice(0, 6)\n  const temp = prev[short]\n  if(temp) {\n    prev[short].push(cur)\n  }else {\n    prev[short] = [cur]\n  }\n  return prev\n}, {})\n\nconst ret = convertArrayToJson(data)\n```\n\n```js\nconst data = {\n  a: {\n    b: {\n      c: 1,\n      d: 2\n    }\n  }\n}\n\nconst keys = 'a.b.d'\n\nconst ret = keys.split('.').reduce((prev, cur) => prev[cur], data)\n\nconsole.log(ret) // 2\n```\n\n# Object\n\n## filter 筛选对象\n\n```js\nconst filter = (json, attrs) =>\n  attrs.reduce((prev, cur) => {\n    prev[cur] = json[cur]\n    return prev\n  }, {})\n\nconst data = {\n  name: 'shuoshubao',\n  age: 25,\n  sex: 1\n}\n\nconst filterData = filter(data, ['name', 'age'])\n// {name: 'shuoshubao', age: 25}\n```\n\n## omit 过滤对象\n\n```js\nconst omit = (json, attrs) =>\n  Object.keys(data)\n    .filter(v => !attrs.includes(v))\n    .reduce((prev, cur) => {\n      prev[cur] = json[cur]\n      return prev\n    }, {})\n\nconst data = {\n  name: 'shuoshubao',\n  age: 25,\n  sex: 1\n}\n\nconst omitData = omit(data, ['name', 'age'])\n// {sex: 1}\n```\n"
  },
  "js/RegExp": {
    "title": "RegExp",
    "content": "# 语法\n\n```js\nvar patt = new RegExp(pattern, modifiers)\nvar patt = /pattern/defiimors\n```\n\n| 修饰符 | 描述       |\n| ------ | ---------- |\n| i      | 忽略大小写 |\n| g      | 全局匹配   |\n| m      | 多行匹配   |\n\n| 方括号                         | 描述                     |\n| ------------------------------ | ------------------------ |\n| [abc]                          | 任意一个括号内字符       |\n| [^abc]                         | 任何一个不在括号内的字符 |\n| [0-9]                          | 0-9 的数字               |\n| [a-z]                          | a-z                      |\n| [A-Z]                          | A-Z                      |\n| [A-z]                          | A-z                      |\n| (red &#124; blue &#124; green) | 任何一项                 |\n\n| 元字符 | 描述                        |\n| ------ | --------------------------- |\n| .      | 单个字符(除了换行符 结束符) |\n| \\w     | 单词字符                    |\n| \\W     | 非单词字符                  |\n| \\d     | 数字                        |\n| \\D     | 非数字                      |\n| \\s     | 空白符                      |\n| \\S     | 非空白符                    |\n| \\b     | 单词边界                    |\n| \\B     | 非单词边界                  |\n| \\0     | NULL                        |\n| \\n     | 换行符                      |\n| \\f     | 换页符                      |\n| \\r     | 回车符                      |\n| \\t     | 制表符                      |\n| \\v     | 垂直制表符                  |\n\n| 量词     | 描述         |\n| -------- | ------------ |\n| n+       | [1, +∞)      |\n| n\\*      | [0, +∞)      |\n| n?       | 0 或 1       |\n| n\\{x\\}   | x            |\n| n\\{x,y\\} | [x, y]       |\n| n\\{x,\\}  | [x, +∞)      |\n| n\\$      | 以 n 结尾    |\n| ^n       | 以 n 开头    |\n| ?=n      | 其后紧接 n   |\n| ?!n      | 其后没紧接 n |\n\n| 原型             | 方法                                                  |\n| ---------------- | ----------------------------------------------------- |\n| RegExp.prototype | .test() <br> .exec() <br> .compile()                  |\n| String.prototype | .replace() <br> .split() <br> .search() <br> .match() |\n"
  },
  "js/Code": {
    "title": "JS代码片段",
    "content": "# 日期格式化\n\n## Date.prototype.toISOString\n\n```js\nvar dt = new Date()\ndt.toISOString().slice(0, -5).replace(/[T]/g, ' ')\n```\n\n## RegExp\n\n```js\nvar dt = new Date()\nvar date = [\n  [dt.getFullYear(), dt.getMonth() + 1, dt.getDate()].join('-'),\n  [dt.getHours(), dt.getMinutes(), dt.getSeconds()].join(':')\n]\n  .join(' ')\n  .replace(/(?=\\b\\d\\b)/g, '0')\n```\n\n## Date\n\n```js\nfunction pad(s) {\n  return ('0' + s).slice(-2)\n}\nvar dt = new Date()\nvar date = dt.getFullYear() + '-' + pad(dt.getMonth() + 1) + '-' + pad(dt.getDate())\ndate += ' '\ndate += pad(dt.getHours()) + ':' + pad(dt.getMinutes()) + ':' + pad(dt.getSeconds())\n```\n\n## 生成数组\n\n```js\nArray.from(Array(N), (v, i) => i)\n```\n\n```js\nArray.apply(null, { length: N }).map(Function.call, Number)\n```\n\n## 获取数组的最后一位\n\n```js\narr.slice(-1)[0]\n```\n"
  },
  "js/Canvas": {
    "title": "Canvas",
    "content": "# 初始化\n\n```js\nconst canvasDomEle = document.querySelector('#myCanvas')\nconst ctx = canvasDomEle.getContext('2d')\n```\n\n# 颜色、样式和阴影\n\n## 属性\n\n- fillStyle // 设置或返回用于填充绘画的颜色、渐变或模式\n- strokeStyle // 设置或返回用于笔触的颜色、渐变或模式\n- shadowColor // 设置或返回用于阴影的颜色\n- shadowBlur // 设置或返回用于阴影的模糊级别\n- shadowOffsetX // 设置或返回阴影与形状的水平距离\n- shadowOffsetY // 设置或返回阴影与形状的垂直距离\n\n```js\nctx.fillStyle = color | gradient | pattern\nctx.strokeStyle = color | gradient | pattern\nctx.shadowColor = color\nctx.shadowBlur = number\nctx.shadowOffsetX = number\nctx.shadowOffsetY = number\n```\n\n## 方法\n\n- createLinearGradient() // 创建线性渐变（用在画布内容上）\n- createRadialGradient() // 创建放射状/环形的渐变（用在画布内容上）\n- addColorStop() // 规定渐变对象中的颜色和停止位置\n- createPattern() // 在指定的方向上重复指定的元素\n\n```js\nconst gradient = ctx.createLinearGradient(x0, y0, x1, y1)\nconst gradient = ctx.createRadialGradient(x0, y0, r0, x1, y1, r1)\n\ngradient.addColorStop(stop, color) // stop: [0, 1]\n\nconst pattern = ctx.createPattern(imgDom, 'repeat | repeat-x | repeat-y | no-repeat')\n```\n\n# 线条样式\n\n## 属性\n\n- lineCap // 设置或返回线条的结束端点样式\n- lineJoin // 设置或返回两条线相交时，所创建的拐角类型\n- lineWidth // 设置或返回当前的线条宽度\n- miterLimit // 设置或返回最大斜接长度\n\n```js\nctx.lineCap = 'butt | round | square'\nctx.lineJoin = 'miter | bevel | round' // 斜切 | 锥角 | 圆角\nctx.lineWidth = number\nctx.miterLimit = number // ctx.lineJoin = 'miter'\n```\n\n# 矩形\n\n## 方法\n\n- rect() // 创建矩形\n- fillRect() // 绘制被填充的矩形\n- strokeRect() // 绘制矩形（无填充）\n- clearRect() // 在给定的矩形内清除指定的像素\n\n```js\nctx.rect(x, y, width, height)\nctx.fillRect(x, y, width, height)\nctx.strokeRect(x, y, width, height)\nctx.clearRect(x, y, width, height)\n```\n\n# 路径\n\n## 方法\n\n- beginPath() // 起始一条路径，或重置当前路径\n- lineTo() // 添加一个新点，然后在画布中创建从该点到最后指定点的线条\n- moveTo() // 把路径移动到画布中的指定点，不创建线条\n- closePath() // 创建从当前点回到起始点的路径\n\n- fill() // 填充当前绘图（路径）\n- stroke() // 绘制已定义的路径\n\n- clip() // 从原始画布剪切任意形状和尺寸的区域\n\n- quadraticCurveTo() // 创建二次贝塞尔曲线\n- bezierCurveTo() // 创建三次贝塞尔曲线\n- arc() // 创建弧/曲线（用于创建圆形或部分圆）\n- arcTo() // 创建两切线之间的弧/曲线\n- isPointInPath() // 如果指定的点位于当前路径中，则返回 true，否则返回 false\n\n```js\nctx.beginPath()\nctx.lineTo(x, y)\nctx.moveTo(x, y)\nctx.closePath()\n\nctx.fill()\nctx.stroke()\n\nctx.clip()\n\nctx.quadraticCurveTo(cpx, cpy, x, y)\nctx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y)\n\nctx.arc(x, y, r, startAngle, endAngle, counterclockwise) // counterclockwise=true 逆时针\nctx.arcTo(x1, y1, x2, y2, r)\nctx.isPointInPath(x, y)\n```\n\n# 转换\n\n## 方法\n\n- scale() // 缩放当前绘图至更大或更小\n- rotate() // 旋转当前绘图\n- translate() // 重新映射画布上的 (0,0) 位置\n- transform() // 替换绘图的当前转换矩阵\n- setTransform() // 将当前转换重置为单位矩阵然后运行 transform()\n\n```js\nctx.scale(scaleWidth, scaleHeight)\nctx.rotate(angle)\nctx.transform(a, b, c, d, e, f) // x缩放 | x倾斜 | y缩放 | y倾斜 | x平移 | y平移\nctx.setTransform(a, b, c, d, e, f) // x缩放 | x倾斜 | y缩放 | y倾斜 | x平移 | y平移\n```\n\n# 文本\n\n## 属性\n\n- font // 设置或返回文本内容的当前字体属性\n- textAlign // 设置或返回文本内容的当前对齐方式\n- textBaseline // 设置或返回在绘制文本时使用的当前文本基线\n\n```js\nctx.font = 'font-style font-variant font-weight font-size/line-height font-family'\nctx.textAlign = 'center | end | left | right | start'\nctx.textBaseline = 'alphabetic | top | hanging | middle | ideographic | bottom'\n```\n\n## 方法\n\n- fillText() // 在画布上绘制被填充的文本\n- strokeText() // 在画布上绘制文本（无填充）\n- measureText() // 返回包含指定文本宽度的对象\n\n```js\nctx.fillText(text, x, y, maxWidth)\nctx.strokeText(text, x, y, maxWidth)\nconst measureTextWidth = ctx.measureText(text).width\n\nTextMetrics {\n    width [num]\n}\n```\n\n# 图像绘制\n\n## 方法\n\n- drawImage(imgDom, sx, sy, swidth, sheight, x, y, width, height) // 向画布上绘制图像、画布或视频\n\n```js\ndrawImage(imgDom, x, y)\ndrawImage(imgDom, x, y, width, height)\ndrawImage(imgDom, sx, sy, swidth, sheight, x, y, width, height)\n```\n\n# 像素操作 ImageData\n\n## 属性\n\n- width/height // 返回 ImageData 对象的宽度/高度\n- data // 返回一个对象，其包含指定的 ImageData 对象的图像数据\n\n```js\nImageData {\n    width [int]\n    height [int]\n    data [Uint8ClampedArray]\n}\n```\n\n## 方法\n\n- createImageData() // 创建新的、空白的 ImageData 对象\n- getImageData() // 返回 ImageData 对象，该对象为画布上指定的矩形复制像素数据\n- putImageData() // 把图像数据（从指定的 ImageData 对象）放回画布上\n\n```js\nconst imgData = ctx.createImageData(width, height)\nconst imgData = ctx.createImageData(imgData0)\n\nconst imgData = ctx.getImageData(x, y, width, height)\n\nctx.putImageData(imgData, x, y, dirtyX, dirtyY, dirtyWidth, dirtyHeight)\n```\n\n# 其他\n\n- getContext()\n- toDataURL()\n- save()\n- restore()\n- createEvent()\n\n```js\ncanvasDomEle.getContext('2d')\ncanvasDomEle.toDataURL()\n```\n\n# Reference\n\n- [http://www.runoob.com/tags/ref-canvas.html](http://www.runoob.com/tags/ref-canvas.html)\n"
  },
  "js/Ajax": {
    "title": "Ajax",
    "content": "# XMLHttpRequest\n\n```js\nvar xhr = new XMLHttpRequest()\nxhr.open(method, url, asyn)\nxhr.onreadystatechange = () => {}\nxhr.send()\n```\n\n## XMLHttpRequest.prototype\n\n- .readyState\n- .response\n- .responseText\n- .responseType\n- .responseURL\n- .responseXML\n- .status\n- .statusText\n- .timeout\n- .withCredentials\n- .responseText\n- .onabort\n- .onerror\n- .onload\n- .onloadend\n- .onloadstart\n- .onprogress\n- .ontimeout\n- .onreadystatechange\n- .upload\n- .open()\n- .send()\n\n## XMLHttpRequestUpload.prototype\n\n- onabort\n- onerror\n- onload\n- onloadend\n- onloadstart\n- onprogress\n- ontimeout\n"
  },
  "js/Fetch": {
    "title": "Fetch",
    "content": "# Fetch\n\n## base\n\n```js\nfetch(url)\nfetch(request)\nfetch(url, request)\n```\n\n```js\n// GET\nfetch('a/b')\nfetch('a/b?a=b&c=d')\nfetch('a/b?${qs.stringify({a: b, c: d})}')\nfetch('a/b?${qs.stringify({a: b, c: d})}', {\n  headers: {}\n})\n\n// POST\nfetch('a/b', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  },\n  body: qs.stringify({ a: b, c: d })\n})\n```\n\n## stream 数据流\n\n> 数据流只能读取一次，一旦读取，数据流就空了。再次读取就不会得到结果。\n\n# Reference\n\n- [Body](#js/Body)\n- [Headers](#js/Headers)\n- [Request](#js/Request)\n- [Response](#js/Response)\n- [https://developer.mozilla.org/en-US/docs/Web/API/Fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch)\n"
  },
  "js/Body": {
    "title": "Body",
    "content": "> The Body mixin of the Fetch API represents the body of the response/request, allowing you to declare what its content type is and how it should be handled.\n\n# Properties\n\n- bodyUsed (Read only)\n\n# Methods\n\n- arrayBuffer()\n- blob()\n- formData()\n- json()\n- text()\n\n# Reference\n\n- [https://developer.mozilla.org/en-US/docs/Web/API/Body](https://developer.mozilla.org/en-US/docs/Web/API/Body)\n"
  },
  "js/Headers": {
    "title": "Headers",
    "content": "# Syntax\n\n```js\nvar headers = new Headers(init)\n```\n\n# Method\n\n- get(name)\n- set(name, value)\n- append(name, value)\n- delete(name)\n- has(name)\n- keys()\n- values()\n- entries()\n\n# Reference\n\n- [https://developer.mozilla.org/en-US/docs/Web/API/Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers)\n"
  },
  "js/Request": {
    "title": "Request",
    "content": "# Syntax\n\n```js\nvar request = new Request(url, option)\n```\n\n## option\n\n- method\n- body\n- headers\n- mode\n- cache\n- redirect\n- referrer\n- integrity\n- credentials\n\n# Property\n\n- url\n- method\n- headers\n- mode\n- cache\n- context\n- bodyUsed\n- referrer\n- credentials\n- referrerPolicy\n\n# Method\n\n[Body](#js/Body)\n\n# Reference\n\n- [https://developer.mozilla.org/en-US/docs/Web/API/Request](https://developer.mozilla.org/en-US/docs/Web/API/Request)\n"
  },
  "js/Response": {
    "title": "Response",
    "content": "# Syntax\n\n```js\nvar response = new Response(body, init)\n```\n\n## Parameters\n\n### body\n\n- Blob\n- BufferSource\n- FormData\n- ReadableStream\n- URLSearchParams\n- USVString\n\n### init\n\n```js\n{\n  status, statusText, headers\n}\n```\n\n# Properties\n\n- bodyUsed\n- headers\n- ok\n- redirected\n- status\n- statusText\n- type\n- url\n\n# Method\n\n- redirect(url, status)\n- error()\n- clone()\n- [Body](#js/Body)\n\n# Reference\n\n- [https://developer.mozilla.org/en-US/docs/Web/API/Response](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n"
  },
  "js/Promise": {
    "title": "Promise",
    "content": "# status\n\n- pending\n- resolved | fulfilled\n- rejected\n\n# Promise.prototype\n\n- .then()\n- .catch()\n"
  },
  "js/Event": {
    "title": "Event",
    "content": "# beforeunload\n\n```js\nwindow.onbeforeunload = function () {\n  return '真的要关闭么？别后悔！'\n}\n```\n\n> 只有当事件处理函数返回一个字符串的时候，才会生效\n\n# visibility\n\n```js\ndocument.addEventListener(\n  'visibilitychange',\n  function () {\n    // dosomethings\n  },\n  false\n)\n```\n\n#### 相关属性\n\n- document.hidden : 返回一个布尔值，表示当前是否被隐藏。\n- document.visibilityState\n  - visibile : 可见\n  - hidden : 不可见\n  - prerender : 正在渲染中，不可见\n\n# fullscreenchange\n\n```js\ndocument.addEventListener(\n  'fullscreenchange',\n  function (event) {\n    if (document.fullscreenElement) {\n      console.log('进入全屏')\n    } else {\n      console.log('退出全屏')\n    }\n  },\n  false\n)\n```\n\n# fullscreenerror\n"
  },
  "js/Error": {
    "title": "Error",
    "content": "# 语法\n\n```js\nnew Error([message])\n```\n\n# 构造函数\n\n- Error\n- SyntaxError\n- ReferenceError\n- RangeError\n- TypeError\n- URIError\n- EvalError\n\n# 属性\n\n- Error.prototype.message // 当不传时, 为 undefined\n- Error.prototype.name // 非标准; 构造函数的名称 'Error', 'SyntaxError', 'ReferenceError' ...\n- Error.prototype.stack // 非标准; 错误的堆栈\n\n# 方法\n\n- Error.prototype.toString()\n\n# 自定义错误\n\n```js\nfunction UserError(message) {\n  this.message = message || '默认信息'\n  this.name = 'UserError'\n}\n\nUserError.prototype.toString = function () {\n  return this.name + ': \"' + this.message + '\"'\n}\n\nthrow new UserError('出错了！')\n```\n\n# Referrence\n\n> [http://javascript.ruanyifeng.com/grammar/error.html](http://javascript.ruanyifeng.com/grammar/error.html) > [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error]https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\n"
  },
  "js/KeyWord": {
    "title": "关键字",
    "content": "# 关键字\n\nvar typeof\n\nnew this void return function instanceof\n\nif else\n\nfor break continue\n\ndo while\n\nin delete\n\nswitch case default\n\ntry catch finally throw\n\nwith\n"
  },
  "js/ReservedWord": {
    "title": "保留字",
    "content": "# 保留字\n\nconst boolean volatile\n\nbyte char int short long float double enum\n\nimport extends implements transient export super static public private protected class abstract interface final\n\ngoto native package synchronized throws\n"
  },
  "js/JQ": {
    "title": "JQ API",
    "content": "# 选择器\n\n- -\n- .class\n- ele\n- \\#id\n- ,\n- >\n- -\n- ~\n\n# 属性\n\n- attr()\n- removeAttr()\n- prop()\n- removeProp()\n\n# 文本\n\n- text()\n- html()\n- val()\n\n# css\n\n- css()\n- addClass()\n- removeClass()\n- toggleClass()\n- hasClass()\n\n# 尺寸\n\n- width()、height()\n- outerWidth()、innerWidth()、outerHeight()、innerHeught()\n\n# 位置\n\n- offset()\n- offsetParent()\n- position()\n- scrollLeft()、scrollTop()\n\n# 数据\n\n- data()\n- removeData()\n- hasData()\n\n# 操作\n\n- append()、appendTo()\n- prepend()、prependTo()\n- after()、insertAfter()\n- before()、insertBefore()\n- remove()、empty()\n\n# 过滤\n\n- eq()、first()、last()\n- slice()、not()\n- filter()、map()\n- add()\n- has()\n- end()\n- each()\n\n# 层级\n\n- siblings()、next()、prev()\n- parent()、parents()、closest()\n- children()、find()\n\n# 事件\n\n- ready()\n- scroll()\n- resize()\n- click()\n- dbclick()\n- contextmenu()\n- hover()\n- mouseover()、mousemove()、mouseup()、mouseenter()、mouseleave()\n- focus()、blur()\n- change()\n- select()\n- submit()\n- keydown()、keypress()、keyup()\n\n# 事件绑定\n\n- on()\n- one()\n- off()\n- trigger()\n\n# 事件对象\n\n- pageX、pageY、timeStamp\n- target、data\n- type、which\n- preventDefault()\n- stopPropagation()\n\n# 效果\n\n- show()\n- hide()\n- toggle()\n- animation()、delay()、stop()\n- fadeIn()、fadeOut()、fadeTo()、fadeToggle()\n- slideDown()、slideUp()、slideToggle()\n\n# ajax\n\n- \\$.ajax()\n- \\$.get()\n- \\$.getJson()\n- \\$.getScript()\n- \\$.post()\n- \\$.load()\n\n# 工具\n\n- \\$.each()\n- \\$.map()\n- \\$.extend()\n- \\$.globalEval()\n- \\$.grep()\n- \\$.inArray()\n- \\$.isArray()\n- \\$.isEmptyObject()\n- \\$.isFunction()\n- \\$.Numeric()\n- \\$.isPlainObject()\n- \\$.isWindow()\n- \\$.makeArray()\n- \\$.merge()\n- \\$.noop()\n- \\$.now()\n- \\$.parseHTML()\n- \\$.parseJSON()\n- \\$.proxy()\n- \\$.trim()\n- \\$.type()\n- \\$.unique()\n\n# dom\n\n- length\n- get()\n- index()\n- toArray()\n"
  },
  "js/DOM": {
    "title": "DOM",
    "content": "# Node\n\n- document.documentElement\n- document.head\n- document.body\n\n## 节点\n\n- Document\n- DocumentType\n- Element\n- Attribute\n- Text\n- DocumentFragment\n\n## 属性\n\n- nodeName\n- nodeType\n\n- ownerDocument\n- baseURI\n\n- childNodes\n- firstNode\n- lastChild\n- nextSibling\n- previousSibling\n- parentNode\n- parentElement\n\n- textContent\n- nodeValue\n\n## 方法\n\n- appendChild()\n- hasChildNodes()\n- insertBefore()\n- removeChild()\n- replaceChild()\n- cloneNode()\n- contains()\n- compareDocumentPosition()\n- isEqualNode()\n\n- normalize()\n\n# NodeList\n\n- Node.childNodes\n- document.querySelectorAll()\n- document.getElementsByTagName()\n\n## 属性\n\n- length\n- 数字索引\n\n## 方法\n\n- item(i)\n\n> item(i) 等价于 NodeList[i]\n\n# HTMLCollection\n\n- docuement.anchors\n- document.images\n- document.links\n- document.scripts\n- docuement.forms\n- document.embeds\n\n## 属性\n\n- length\n- 数字索引\n\n## 方法\n\n- item(i)\n- namedItem(name / id)\n\n> item(i) 等价于 NodeList[i]\n>\n> namedItem(name / id) 等价于 NodeList[name / id]\n\n# ParentNode, ChildNode\n\n- children\n- firstElementChild\n- lastElementChild\n- childElementCount\n- remove()\n- before()\n- after()\n- replaceWith()\n\n# Element\n\n## 属性\n\n- attributes\n- id\n- tagName\n- innerHTML\n- children\n- firstElementChild\n- lastElementChild\n- childElementCount\n- nextElementSibling\n- previousElementSibling\n- className\n- classList\n  - add()\n  - remove()\n  - contains()\n  - toggle()\n  - item()\n  - toString()\n- clientHeight\n- clientLeft\n- clientTop\n- clientWidth\n- scrollHeight\n- scrollWidth\n- scrollLeft\n- scrollTop\n\n- dataset\n- style\n\n- offsetParent\n- offsetTop\n- offsetLeft\n- tabindex\n\n## 方法\n\n- 选择器\n  - querySelector()\n  - querySelectorAll()\n  - getElementsByTagName()\n  - getElementsByClassName()\n- 节点\n  - remove()\n  - before()\n  - after()\n  - replaceWith()\n  - closest()\n  - matches()\n- 属性\n  - hasAttribute()\n  - getAttribute()\n  - setAttribute()\n  - removeAttribute()\n- scrollIntoView()\n- focus()\n- elementFromPoint()\n\n# table 元素\n\n## 属性\n\n- caption\n- tHead\n- tBodies\n- tFoot\n- rows\n- rows.cells\n\n## 方法\n\n- createCaption\n- deleteCaption\n- createTHead\n- deleteTHead\n- insertRow\n- deleteRow\n- insertCell\n- deleteCell\n\n# EventTarget\n\n## 部署\n\n- window 对象\n- document 节点\n- Element 节点\n- XMLHttpRequest\n\n## 方法\n\n- addEventListener()\n- removeEventListener()\n- dispatchEvent()\n"
  },
  "js/Storage": {
    "title": "Storage",
    "content": "# 分类\n\n## sessionStorage、localStorage\n\n## 方法\n\n- getItem()\n- setItem()\n- removeItem()\n- clear()\n\n## 事件\n\n```js\nwindow.addEventListener(\n  'storage',\n  function (ev) {\n    // key : 修改或删除的key值，如果调用clear(),key为null\n    // newvalue : 新设置的值，如果调用removeStorage(),key为null\n    // oldvalue : 调用改变前的value值\n    // storageArea : 当前的storage对象\n    // url : 触发该脚本变化的文档的url\n  },\n  false\n)\n```\n"
  },
  "js/Fullscreenchange": {
    "title": "Fullscreenchange",
    "content": "> 注意：以下全屏属性和方法以及事件，都需要加上前缀~\n\n# 方法\n\n- requestFullscreen()\n- exitFullscreen()\n\n> document 和 element 部署了 requestFullscreen()\n>\n> document 部署了 requestFullscreen()\n\n# 属性\n\n- document.fullscreenElement 返回正处于全屏状态的 Element 节点,如果没有则返回 null\n- document.fullscreenEnableds 返回一个布尔值,表示当前文档是否可以切换到全屏状态\n\n# 事件\n\n- fullscreenchange\n\n```js\ndocument.addEventListener(\n  'fullscreenchange',\n  function (event) {\n    if (document.fullscreenElement) {\n      console.log('进入全屏')\n    } else {\n      console.log('退出全屏')\n    }\n  },\n  false\n)\n```\n\n> 浏览器进入或离开全屏时触发\n\n- fullscreenerror\n\n```js\ndocument.addEventListener(\n  'fullscreenerror',\n  function (event) {\n    // dosomethings\n  },\n  false\n)\n```\n\n> 浏览器无法进入全屏时触发，可能是技术原因，也可能是用户拒绝\n\n# 全屏状态的 CSS\n\n```css\n:-webkit-full-screen {\n  // properties\n}\n:full-screen {\n  // properties\n}\n```\n"
  },
  "js/Notification": {
    "title": "Notification",
    "content": "# 检测\n\n> window.Notification\n\n# 权限\n\n> Notification.permission\n\n- default\n- denied\n- granted\n\n# 询问\n\n> Notification.requestPermission(function(status) { // status: default、denied、granted })\n\n# 实例\n\n> new Notification(title, {})\n\n```js\n// 属性\nvar n = new Notification(title, {\n  body: '',\n  icon: '',\n  tag: '',\n  lang: '',\n  dir: '' // auto, ltr, rtl\n})\n\n// 事件\nn.onshow\nn.onclose\nn.onerror\nn.onclick\n```\n\n# Demo\n\n```js\nif (window.Notification && Notification.permission !== 'denied') {\n  Notification.requestPermission(function (status) {\n    // 请求权限\n    if (status === 'granted') {\n      var n = new Notification('标题', {\n        body: '我是主体',\n        icon: 'https://assets-cdn.github.com/favicon.ico'\n      })\n    }\n  })\n}\n```\n"
  },
  "js/Tinify.js": {
    "title": "Tinify.js",
    "content": "# Tinify.js\n\n```js\nconst fs = require('fs')\nconst glob = require('glob')\nconst chalk = require('chalk')\nconst tinify = require('tinify')\n\ntinify.key = 'KckuU929qtv_nPK_czL6HKfcAJO9FCKm'\n\nlet files = glob.sync('img/**/*.{png,jpg,jpeg}')\n\nconst timeInfo = `tinify 共处理${files.length}个文件, 共耗时`\nconsole.time(timeInfo)\nconst tinifyImg = src =>\n  new Promise((resolve, reject) => {\n    tinify.fromFile(src).toFile(src, err => {\n      if (err) {\n        reject(err)\n      } else {\n        console.log(`成功压缩 ${chalk.blue(src)}`)\n        resolve()\n      }\n    })\n  })\n\nPromise.all(files.map(v => tinifyImg(v)))\n  .then(() => console.timeEnd(timeInfo))\n  .catch(e => {\n    console.log(e)\n  })\n```\n\n# Referrence\n\n> https://www.npmjs.com/package/tinify\n>\n> https://tinypng.com/developers/reference/nodejs\n"
  },
  "js/Prettier.js": {
    "title": "Prettier.js",
    "content": "# Prettier.js\n\n```js\nimport fs from 'fs'\nimport glob from 'glob'\nimport chalk from 'chalk'\nimport prettier from 'prettier'\n\nlet fileList = glob.sync('src/**/*.js')\n\nconst prettierOptions = {\n  useTabs: false,\n  tabWidth: 4,\n  printWidth: 1000,\n  singleQuote: true, // 单引号\n  semi: true, // 分号\n  trailingComma: 'none', // 尾逗号\n  bracketSpacing: false, // true: { foo: bar }; false: {foo: bar}\n  jsxBracketSameLine: false, // 将 > 放在同一行\n  parser: 'babylon', // 'babylon' | 'flow' | 'json' | 'typescript' | 'postcss' | 'json' | 'graphql' | 'markdown'\n  insertPragma: false, // 在顶部插入注释 /** @format */\n  arrowParens: 'avoid' // 'avoid': x => x; 'always': (x) => x\n}\n\nconst timeInfo = `prettier 共处理${fileList.length}个文件, 共耗时`\nconsole.time(timeInfo)\nconst prettierFile = src =>\n  new Promise((resolve, reject) => {\n    fs.readFile(src, (err, buffer) => {\n      if (err) {\n        reject(err)\n      } else {\n        const str = buffer.toString()\n        try {\n          const str2 = prettier.format(str, prettierOptions)\n          fs.writeFileSync(src, str2)\n          console.log(src)\n          resolve(src)\n        } catch (e) {\n          reject([e, src])\n        }\n      }\n    })\n  })\n\nPromise.all(fileList.map(v => prettierFile(v)))\n  .then(() => console.timeEnd(timeInfo))\n  .catch(([e, src]) => {\n    console.log(`${chalk.red('请检查文件: ')}${chalk.blue(src)}`)\n    console.log(e)\n  })\n```\n\n# Referrence\n\n> https://www.npmjs.com/package/prettier\n"
  },
  "js/js-beautify": {
    "title": "js-beautify",
    "content": "# Useage\n\n### install\n\n```sh\nnpm i -D js-beautify\n```\n\n### use\n\n```js\nconst beautify = require('js-beautify')\n\nconst { html: beautify_html, css: beautify_css, js: beautify_js } = require('js-beautify')\n\nbeautify_js('code...', jsbeautifyrc)\n```\n\n# Config\n\n> CLI Options\n\n```json\n{\n  \"indent_size\": 4,\n  \"indent_char\": \" \",\n  \"indent_with_tabs\": false,\n  \"eol\": \"\\n\",\n  \"end_with_newline\": false,\n  \"indent_level\": 0,\n  \"preserve_newlines\": true,\n  \"max_preserve_newlines\": 10,\n  \"space_in_paren\": false,\n  \"space_in_empty_paren\": false,\n  \"jslint_happy\": false,\n  \"space_after_anon_function\": false,\n  \"brace_style\": \"collapse\",\n  \"unindent_chained_methods\": false,\n  \"break_chained_methods\": false,\n  \"keep_array_indentation\": false,\n  \"unescape_strings\": false,\n  \"wrap_line_length\": 0,\n  \"e4x\": false,\n  \"comma_first\": false,\n  \"operator_position\": \"before-newline\"\n}\n```\n\n> .jsbeautifyrc\n\n# Referrence\n\n- http://jsbeautifier.org/\n- https://github.com/beautify-web/js-beautify\n- https://www.npmjs.com/package/js-beautify\n"
  },
  "js/Console": {
    "title": "Console",
    "content": "> Object.keys(console)\n\n# Chrome\n\n- debug\n- error\n- info\n- log\n- warn\n- dir\n- dirxml\n- table\n- trace\n- group\n- groupCollapsed\n- groupEnd\n- clear\n- count\n- assert\n- markTimeline\n- profile\n- profileEnd\n- timeline\n- timelineEnd\n- time\n- timeEnd\n- timeStamp\n- memory\n\n# NodeJs\n\n- log\n- info\n- warn\n- error\n- dir\n- time\n- timeEnd\n- trace\n- assert\n"
  },
  "js/History": {
    "title": "Javascript的历史",
    "content": "# 诞生背景\n\n## 1994 - 萌芽\n\n网景公司（Netscape）发布了 `Netscape Navigator` 浏览器 0.9 版。这是历史上第一个比较成熟的网络浏览器。但是，这个版本的浏览器只能用来浏览，不具备与访问者互动的能力。网景公司急需一种网页脚本语言，使得浏览器可以与网页互动。\n\n## 1995 - 诞生\n\nJavaScript 之父 `Brendan Eich` 为 `Netscape Navigator 2.0` 开发名为 `LiveScript` 的脚本语言, 就在 Netscape Navigator 2.0 即将正式发布前，Netscape 将其更名为 JavaScript。\n\n## 1997 - 标准\n\n在 `ECMA` 的协调下, TC39 为 JavaScript 确定统一标准: `ECMAScript`, 标准编号为 `ECMA-262`。\n\n> ECMA: 欧洲计算机制造商协会\n>\n> TC39: 技术委员会 39。 (委员会成员是所有主要浏览器厂商)\n\n# 版本\n\n- 1998-06 ECMAScript 2.0 发布\n- 1999-12 ECMAScript 3.0 发布\n- 2007-10 ECMAScript 4.0 草案 (废弃)\n- 2007-10 ECMAScript 3.1 发布\n- 2009-12 ECMAScript 5.0 发布 (由 3.1 更名)\n- 2011-06 ECMAscript 5.1 发布 (成为 ISO 国际标准)\n- 2015-06 ECMAScript 6 发布 (ECMAScript 2015)\n- 2016-06 ECMAScript 7 发布 (ECMAScript 2016)\n- 2017-06 ECMAScript 8 发布 (ECMAScript 2017)\n- ...\n\n# 浏览器端大事件\n\n- 2002 年 发布 `Firefox`\n- 2003 年 发布 `Safari`\n- 2007 年 `WebKit` 开源 (现发展为 `Blink`)\n- 2008 年 发布 `Chrome` + `V8`\n\n# 前端大事件\n\n- 2004 年 Google 发布 `Gmail`\n- 2005 年 Google 发布 `Google Maps`, 引发 `Ajax` 崛起\n- 2006 年 `jQuery` 横空出世, 开始了长达 10 余年的统治时期...\n- 2010 年 RequireJS 诞生, 标志着 JavaScript 进入 `模块化开发` 时代\n\n> `Ajax` 的兴起, 使得 JavaScript 开始受到大众关注, 促成 `Web 2.0 时代` 的来临。也促成了 `前端` 这个职位。 // 1999 年 IE5 部署`XMLHttpRequest`接口, 向 IE 致敬~\n\n# NodeJs 大事件\n\n- 2009 年 Node.js 项目诞生\n- 2014 年 诞生 Node.js 分支: `io.js`, 同年又合并了~\n- NWJS (node-webkit)\n- Electron (Github 客户端, Atom, VSCode, 大象...)\n- 数据库 mysql mongodb 等都出了 nodejs 版\n- babel\n- Express.js\n- Koa.js\n- Socket.io\n- Egg.js\n\n> 高大上的 `全栈` 概念崛起...\n\n## 包管理器\n\n- bower\n- npm\n- yarn\n\n## Nodejs 构建工具\n\n### 早期\n\n- grunt\n- gulp\n\n### 现代\n\n- fis\n- browserify\n- webpack\n- rollup\n- parcel\n\n# 浏览器端框架\n\n## 早期\n\n- Prototype\n- Dojo\n- Mootools\n- YUI\n- Extjs\n- **jQuery**\n\n> 以解决`浏览器兼容性`为卖点, 封装常用方法为辅\n\n## 中期\n\n- Knockout.js\n- Ember.js\n- Backbone.js\n\n> mvc 时代, 模板引擎 + 数据驱动\n\n## UI 框架时代\n\n- Bootstrap (2011 年开源, 常年在 GitHub Star 数排第二名)\n- UiKit\n- Foundation\n- Semantic-UI\n\n## 现代\n\n- 2012 年 `Angular.js` 发布, **SPA** 崛起\n- 2013 年 `React.js` 发布 // react-native, flux, immutable.js redux\n- 2014 年 `Vue.js` 发布 // weex vuex\n- Ant-Design\n- Element-UI\n\n> 组件化 + 数据驱动\n>\n> `全家桶` 概念兴起, cli + router + flux\n\n## 未来\n\n- PWA\n- Assembly\n- Service Worker\n\n# JavaScript 的超集\n\n- TypeScript 2012 年 微软\n- CoffeeScript 2009 年 Jeremy Ashkenas\n\n# 总结\n\n- 了解历史, 认识到很多知识已经不是 `新技术` 了; 可以掌握前端技术的发展\n- underscore.js, lodash.js lazy.js 等 js 库的出现, 是因为原生 js 的不够用, 所以应该掌握 es3 es5 es6 的所有 api 以及其他知识点\n- 危机意识, 紧跟技术发展, 提高自身\n\n# 参考资料\n\n- [ECMA-262](http://www.ecma-international.org/default.htm)\n- [TC39 流程文档](https://tc39.github.io/process-document) [中文版](http://www.zcfy.cc/article/the-tc39-process-for-ecmascript-features-1515.html)\n- [Javascript 维基百科](https://zh.wikipedia.org/wiki/JavaScript)\n"
  },
  "node/overview": {
    "title": "overview",
    "content": "# Core Module\n\n- global\n- fs\n- events\n- modules\n- console\n- error\n- assert\n- debugger\n- path\n- url\n- querystring\n- http\n- https\n- dns\n- domain\n- net\n- os\n- crypto\n- child_process\n- cluster\n- readline\n- repl\n- stream\n- string_decoder\n- tls\n- tty\n- dgram\n- v8\n- vm\n- zlib\n\n# Constructor\n\n- Buffer\n"
  },
  "node/fs": {
    "title": "fs",
    "content": "# 读取文件\n\n```js\nfs.readFile(path, options, callback)\nfs.readFileSync(path, options)\n```\n\n# 写入文件\n\n```js\nfs.writeFile(path, data, options, callback)\nfs.writeFileSync(path, data, options)\n```\n\n# 创建目录\n\n```js\nfs.mkdir(path, options, callback)\nfs.mkdirSync(path, options)\n```\n\n# 读取目录\n\n```js\nfs.readdir(path, options, callback)\nfs.readdirSync(path, options)\n```\n\n# 查看文件/目录信息\n\n```js\nfs.stat(path, options, =, {, bigint:, false, }, callback);\nfs.statSync(path, options, =, {, bigint:, false, });\n\nfs.lstat(path, options, =, {, bigint:, false, }, callback);\nfs.lstatSync(path, options, =, {, bigint:, false, });\n```\n\n# 检查文件/目录是否存在\n\n```js\nfs.exists(path, callback)\nfs.existsSync(path)\n```\n\n# 获取文件的绝对路径\n\n```js\nfs.realpath(p, options, callback)\nfs.realpathSync(p, options)\n```\n\n# 修改文件时间\n\n```js\nfs.utimes(path, atime, mtime, callback)\nfs.utimesSync(path, atime, mtime)\n```\n\n# 修改文件/目录的读取权限\n\n```js\nfs.chmod(path, mode, callback)\nfs.chmodSync(path, mode)\n```\n\n# 移动/重命名文件\n\n```js\nfs.rename(oldPath, newPath, callback)\nfs.renameSync(oldPath, newPath)\n```\n\n# 创建和删除硬连接\n\n```js\nfs.link(existingPath, newPath, callback)\nfs.linkSync(existingPath, newPath)\n```\n\n# 截断文件\n\n```js\nfs.truncate(path, len, callback)\nfs.truncateSync(path, len)\n```\n\n# 删除空目录\n\n```js\nfs.rmdir(path, options, callback)\nfs.rmdirSync(path, options)\n```\n\n# 监视文件/目录\n\n```js\nfs.watchFile(filename, options, listener)\nfs.unwatchFile(filename, listener)\n```\n\n# Reference\n\n- [https://nodejs.org/api/fs.html](https://nodejs.org/api/fs.html)\n"
  },
  "node/path": {
    "title": "path",
    "content": "# api\n\n```js\npath.resolve(...args)\npath.join(...args)\npath.relative(from, to)\npath.isAbsolute(path)\npath.basename(path, ext)\npath.dirname(path)\npath.extname(path)\npath.format()\npath.parse(path)\npath.normalize(path)\n```\n\n```js\npathObject: {\n    root: string,\n    dir: string,\n    base: string,\n    name: string,\n    ext: string,\n}\n```\n\n# Reference\n\n- [https://nodejs.org/api/fs.html](https://nodejs.org/api/fs.html)\n"
  },
  "node/url": {
    "title": "url",
    "content": "# api\n\n- url.format(urlObject)\n- url.parse(urlString[, parseQueryString[, slashesDenoteHost]])\n- url.resolve(from, to)\n\n# urlObject\n\n- urlObject.href\n- urlObject.protocol\n- urlObject.slashes\n- urlObject.host\n- urlObject.auth\n- urlObject.hostname\n- urlObject.port\n- urlObject.pathname\n- urlObject.search\n- urlObject.path\n- urlObject.query\n- urlObject.hash\n\n# Reference\n\n- [https://nodejs.org/api/url.html](https://nodejs.org/api/url.html)\n"
  },
  "node/os": {
    "title": "os",
    "content": "```js\nconst os = require('os')\n```\n\n- os.EOL\n- os.arch()\n- os.constants\n- os.cpus()\n- os.endianness()\n- os.freemem()\n- os.homedir()\n- os.hostname()\n- os.loadavg()\n- os.networkInterfaces()\n- os.platform()\n- os.release()\n- os.tmpdir()\n- os.totalmem()\n- os.type()\n- os.uptime()\n- os.userInfo([options])\n"
  },
  "node/querystring": {
    "title": "querystring",
    "content": "> const querystring = require('querystring')\n\n- querystring.escape(str)\n- querystring.unescape(str)\n- querystring.parse(str[, sep[, eq[, options]]])\n- querystring.stringify(obj[, sep[, eq[, options]]])\n"
  },
  "node/global": {
    "title": "global",
    "content": "# Global\n\n- Buffer\n- \\_\\_dirname\n- \\_\\_filename\n- setInterval(callback, delay[, ...args])\n- clearInterval(intervalObject)\n- setTimeout(callback, delay[, ...args])\n- clearTimeout(timeoutObject)\n- setImmediate(callback[, ...args])\n- clearImmediate(immediateObject)\n- console\n- exports\n- module\n- process\n- global\n- require()\n- require.cache\n- require.resolve()\n"
  },
  "node/buffer": {
    "title": "buffer",
    "content": "# Buffer\n\n## 已废弃\n\n- new Buffer(size)\n- new Buffer(string[, encoding])\n- new Buffer(buffer)\n- new Buffer(array)\n- new Buffer(arrayBuffer[, byteOffset [, length]])\n\n## new\n\n- Buffer.alloc(size[, fill[, encoding]])\n\n```text\nsize <Integer>\nfill <Integer> | <String> | <Buffer>; default: 0\nencoding <String>; default: 'utf-8'\n```\n\n- Buffer.allocUnsafe(size)\n- Buffer.allocUnsafeSlow(size)\n- Buffer.byteLength(string[, encoding])\n- Buffer.compare(buf1, buf2)\n"
  },
  "node/stream": {
    "title": "stream",
    "content": "- 使用 ReadStream 对象 读取文件\n\n```js\nconst file = fs.createReadStream(path, [options])\n\nconst file = fs.createReadStream('./testFile.txt')\nfile.on('open', fd => {})\nfile.on('data', data => {})\nfile.on('end', () => {})\nfile.on('error', err => {})\nfile.pause()\nfile.resume()\n```\n\n- 使用 WriteStream 对象 写入文件\n\n```js\nconst writable = fs.createWriteStream(path, [options])\n\nwritable.write(chunk, [encoding], [callback])\nwritable.end([chunk], [encoding], [callback])\n```\n"
  },
  "node/readline": {
    "title": "readline",
    "content": "```js\nconst readline = require('readline')\n```\n\n- readline.Interface\n\n  - rl.on('close', ())\n  - rl.on('line', (input))\n  - rl.on('line', (input))\n  - rl.on('pause', ())\n  - rl.on('resume', ())\n  - rl.on('SIGCONT', ())\n  - rl.on('SIGTSTP', ())\n  - rl.close()\n  - rl.pause()\n  - rl.prompt([preserveCursor])\n  - rl.question(query, callback)\n  - rl.write(data[, key])\n\n- readline.clearLine(stream, dir)\n- readline.clearScreenDown(stream)\n- readline.createInterface(options)\n- readline.cursorTo(stream, x, y)\n- readline.moveCursor(stream, dx, dy)\n- readline.emitKeypressEvents(stream[, interface])\n"
  },
  "node/console": {
    "title": "Console",
    "content": "- new Console(stdout[, stderr])\n- console.log([data][, ...args])\n- console.info([data][, ...args])\n- console.warn([data][, ...args])\n- console.error([data][, ...args])\n- console.time(label)\n- console.timeEnd(label)\n- console.dir(obj[, options])\n- console.assert(value[, message][, ...args])\n- console.trace(message[, ...args])\n"
  },
  "node/packages-awesome": {
    "title": "npm package 收藏夹",
    "content": "# request\n\n- node-fetch\n- axios\n- request\n- whatwg-fetch\n- isomorphic-fetch\n- bluebird\n- fetch-jsonp\n- superagent\n- download\n- methods\n- statuses\n- content-type\n- etag\n- morgan\n- http-proxy\n- http-proxy-middleware\n- http-proxy-agent\n\n# promise\n\n- async\n- neo-async\n- pify\n- promisify\n- promise\n- q\n- co\n\n# AST\n\n- acorn\n- espree\n- esprima\n- babylon\n- estraverse\n\n# nodejs\n\n- nodemon\n- forever (nodejs 的守护进程, nohup)\n- pm2\n- n\n- debug\n- memory-fs\n- graceful-fs\n- path-dirname\n- is-dotfile\n- path-type\n- jsonfile\n- load-json-file\n- write-json-file\n- formidable (form data 解析器, 文件上传)\n- uuid\n- nanoid\n- winston\n- package (读取 package.json 数据)\n- config\n- escope\n\n# Source\n\n- source-map\n- source-map-js\n- convert-source-map\n- recast\n- source-map-explorer\n\n# 原生模块辅助\n\n- fs-extra (fs 模块的封装)\n- chokidar (fs.watch 的封装)\n- execa (child_process 替代品)\n- rimraf (rm -rf)\n- mkdirp (mkdir -p)\n- touch (touch)\n- del\n- yazl (zip)\n- yauzl (unzip)\n\n# Glob\n\n- glob\n- parse-glob\n- glob-base\n- globby\n- glob-parent\n- fast-glob\n- glob-stream\n- minimatch\n- anymatch\n- micromatch\n- picomatch\n\n# 工具\n\n- lodash\n- classnames\n- qs、querystring、querystringify (querystring 解析器)\n- url-parse\n- blueimp-md5\n- crypto-js\n- base64-js\n- base64-url\n- semver (版本号校验)\n- qrcode (生成二维码)\n- copy-to-clipboard\n- prettier (代码格式化)\n- file-type\n- http-server\n- serve\n- portfinder\n- ms (时间戳与时间格式相互转换)\n- filesize (将数字转化为 B Kb)\n- dotenv\n\n# Highlight\n\n- highlight.js\n- prismjs\n\n# 图像处理\n\n- gm (GraphicsMagick + ImageMagick)\n- sharp\n- pngquant (图片压缩)\n- imagemin\n- image-size\n- tinify (Tinypng)\n- upng-js\n\n# 命令行 cli\n\n- commander\n- minimist\n- yargs\n- yargs-parser\n- arg\n- inquirer\n- inquirer-fuzzy-path\n- inquirer-path\n- prompt\n- progress\n- ora\n- gauge\n- cli-spinners\n- listr\n- log-update\n- elegant-spinner\n- chalk\n- boxen\n- opn (调用系统应用打开指定文件, 还可以监听程序的退出)\n- open\n- opener\n- download\n- node-notifier\n- colors\n- table\n- cliui\n- text-table\n- cli-table2\n- child-process-promise\n- sirv\n- ws\n\n# @babel\n\n- core-js\n- @babel/core\n- @babel/preset-env\n- @babel/runtime\n- @babel/highlight\n- @babel/polyfill\n- @babel/helper-module-imports\n- @babel/plugin-proposal-export-default-from\n- @babel/plugin-proposal-export-namespace-from\n- @babel/plugin-syntax-export-namespace-from\n- @babel/plugin-syntax-jsx\n- @babel/plugin-transform-runtime\n\n# webpack\n\n- webpack\n- webpack-cli\n- webpack-dev-server\n- webpack-chain\n- webpack-merge\n- html-webpack-plugin\n- css-minimizer-webpack-plugin\n- node-polyfill-webpack-plugin\n- webpack-manifest-plugin\n- copy-webpack-plugin\n- webpack-bundle-analyzer\n\n# Rollup\n\n- rollup\n- @rollup/plugin-babel\n- @rollup/plugin-terser\n- @rollup/plugin-json\n- @rollup/plugin-commonjs\n- @rollup/plugin-node-resolve\n- @rollup/plugin-replace\n- @rollup/plugin-alias\n\n# Markdown\n\n- markdown-it\n- marked\n- remark\n- remark-parse\n- remark-gfm\n- remark-mdx\n- markdown-table\n- [@mdx-js/mdx](https://mdxjs.com/)\n- gray-matter\n- micromark\n\n# html\n\n- html-tags\n- parse5\n- cheerio (nodejs 端的 jq)\n- entities\n- he\n- html-entities\n- htmlparser\n- htmlparser2\n- jsdom\n- domify\n- is-dom\n- domutils\n- dompurify\n- domhandler\n- dom-helpers\n- polished\n- domelementtype\n- dom-serializer\n- html-minifier\n- ejs\n\n# CSS\n\n- css\n- cssom\n- cssnano\n- csso\n- css-tree\n- cssstyle\n- csstype\n- sass\n- less\n- stylus\n- autoprefixer\n- postcss\n- styled-jsx\n- css-unit-converter\n- css-what\n- css-select\n- nth-check\n- polished https://polished.js.org/\n- tailwindcss\n- normalize.css\n- sanitize.css\n\n# Math\n\n- decimal.js\n- mathjs\n- bignumber.js\n- big.js\n\n# 编辑器\n\n- monaco-editor\n- codemirror\n- slate.js\n\n# Validator\n\n- json5\n- joi\n- ajv\n- ajv-keywords\n- ajv-errors\n- async-validator\n- schema-utils\n- json-stringify-safe\n- fast-json-stringify\n- fast-json-parse\n- json-parse-better-errors\n\n# git\n\n- husky\n- pre-commit\n- lint-staged\n- commitizen\n- standard-version\n- cz-conventional-changelog\n\n# Eslint\n\n- eslint\n- babel-eslint\n- eslint-config-airbnb-base\n- eslint-loader\n- eslint-plugin-html\n- eslint-plugin-import\n- eslint-plugin-vue\n\n# Stylelint\n\n- stylelint\n- stylelint-config-prettier\n- stylelint-config-rational-order\n- stylelint-config-recommended\n- stylelint-config-standard\n- stylelint-formatters-html\n- stylelint-order\n- stylelint-prettier\n\n# Test\n\n- ava\n- uvu\n- jest\n- mocha\n- karma\n- chai\n- puppeteer\n- puttier\n\n# Chrome\n\n- puppeteer\n- phantomjs\n\n# 数据库\n\n- mongodb\n- mongoose\n- sqlite3\n\n# 第三方服务\n\n- aws-sdk (亚马逊云)\n- qiniu (七牛)\n- upyun (又拍云)\n"
  },
  "node/packages-top": {
    "title": "npm package top200",
    "content": "# index.js\n\n```js\nconst fs = require('fs')\nconst cheerio = require('cheerio')\nconst superagent = require('superagent')\n\nconst task = offset => {\n  return new Promise((resolve, reject) => {\n    superagent\n      .get('https://www.npmjs.com/browse/depended')\n      .query({ offset })\n      .end((e, res) => {\n        if (e) {\n          reject(e)\n        } else {\n          const $ = cheerio.load(res.res.text)\n          const ret = $('.columnar li')\n            .map(function (i, v) {\n              const name = $(this).find('.name').text()\n              const description = $(this).find('.description').text()\n              const time = $(this).find('[data-date]').data('date').slice(0, 10)\n              return {\n                name,\n                description,\n                time\n              }\n            })\n            .get()\n          resolve(ret)\n        }\n      })\n  })\n}\n\nPromise.all(Array.from(Array(5), (v, i) => i).map(v => task(36 * v))).then(rs => {\n  let ret = rs\n    .reduce((prev, cur) => {\n      prev = prev.concat(cur)\n      return prev\n    }, [])\n    .slice(0, 200)\n    .map((v, i) =>\n      Object.assign(\n        {\n          rank: i + 1\n        },\n        v\n      )\n    )\n  fs.writeFileSync(\n    'data.json',\n    JSON.stringify(\n      {\n        errno: 0,\n        errMsg: '',\n        data: ret\n      },\n      null,\n      2\n    )\n  )\n})\n```\n\n# data.json\n\n```json\n{\n  \"errno\": 0,\n  \"errMsg\": \"\",\n  \"data\": [\n    {\n      \"rank\": 1,\n      \"name\": \"lodash\",\n      \"description\": \"Lodash modular utilities.\",\n      \"time\": \"2016-12-31\"\n    },\n    {\n      \"rank\": 2,\n      \"name\": \"request\",\n      \"description\": \"Simplified HTTP request client.\",\n      \"time\": \"2017-03-09\"\n    },\n    {\n      \"rank\": 3,\n      \"name\": \"async\",\n      \"description\": \"Higher-order functions and common patterns for asynchronous code\",\n      \"time\": \"2017-06-25\"\n    },\n    {\n      \"rank\": 4,\n      \"name\": \"chalk\",\n      \"description\": \"Terminal string styling done right. Much color\",\n      \"time\": \"2017-06-30\"\n    },\n    {\n      \"rank\": 5,\n      \"name\": \"express\",\n      \"description\": \"Fast, unopinionated, minimalist web framework\",\n      \"time\": \"2017-05-17\"\n    },\n    {\n      \"rank\": 6,\n      \"name\": \"bluebird\",\n      \"description\": \"Full featured Promises/A+ implementation with exceptionally good performance\",\n      \"time\": \"2017-03-03\"\n    },\n    {\n      \"rank\": 7,\n      \"name\": \"commander\",\n      \"description\": \"the complete solution for node.js command-line programs\",\n      \"time\": \"2017-07-03\"\n    },\n    {\n      \"rank\": 8,\n      \"name\": \"underscore\",\n      \"description\": \"JavaScript's functional programming helper library.\",\n      \"time\": \"2015-04-02\"\n    },\n    {\n      \"rank\": 9,\n      \"name\": \"debug\",\n      \"description\": \"small debugging utility\",\n      \"time\": \"2017-05-18\"\n    },\n    {\n      \"rank\": 10,\n      \"name\": \"moment\",\n      \"description\": \"Parse, validate, manipulate, and display dates\",\n      \"time\": \"2017-03-21\"\n    },\n    {\n      \"rank\": 11,\n      \"name\": \"react\",\n      \"description\": \"React is a JavaScript library for building user interfaces.\",\n      \"time\": \"2017-06-15\"\n    },\n    {\n      \"rank\": 12,\n      \"name\": \"mkdirp\",\n      \"description\": \"Recursively mkdir, like `mkdir -p`\",\n      \"time\": \"2015-05-14\"\n    },\n    {\n      \"rank\": 13,\n      \"name\": \"colors\",\n      \"description\": \"get colors in your node.js console\",\n      \"time\": \"2015-06-17\"\n    },\n    {\n      \"rank\": 14,\n      \"name\": \"react-dom\",\n      \"description\": \"React package for working with the DOM.\",\n      \"time\": \"2017-06-15\"\n    },\n    {\n      \"rank\": 15,\n      \"name\": \"fs-extra\",\n      \"description\": \"fs-extra contains methods that aren't included in the vanilla Node.js fs package. Such as mkdir -p, cp -r, and rm -rf.\",\n      \"time\": \"2017-07-14\"\n    },\n    {\n      \"rank\": 16,\n      \"name\": \"glob\",\n      \"description\": \"a little globber\",\n      \"time\": \"2017-05-19\"\n    },\n    {\n      \"rank\": 17,\n      \"name\": \"through2\",\n      \"description\": \"A tiny wrapper around Node streams2 Transform to avoid explicit subclassing noise\",\n      \"time\": \"2016-11-28\"\n    },\n    {\n      \"rank\": 18,\n      \"name\": \"q\",\n      \"description\": \"A library for promises (CommonJS/Promises/A,B,D)\",\n      \"time\": \"2017-03-22\"\n    },\n    {\n      \"rank\": 19,\n      \"name\": \"body-parser\",\n      \"description\": \"Node.js body parsing middleware\",\n      \"time\": \"2017-05-18\"\n    },\n    {\n      \"rank\": 20,\n      \"name\": \"minimist\",\n      \"description\": \"parse argument options\",\n      \"time\": \"2015-08-24\"\n    },\n    {\n      \"rank\": 21,\n      \"name\": \"babel-runtime\",\n      \"description\": \"babel selfContained runtime\",\n      \"time\": \"2017-02-14\"\n    },\n    {\n      \"rank\": 22,\n      \"name\": \"yeoman-generator\",\n      \"description\": \"Rails-inspired generator system that provides scaffolding for your apps\",\n      \"time\": \"2017-03-05\"\n    },\n    {\n      \"rank\": 23,\n      \"name\": \"jquery\",\n      \"description\": \"JavaScript library for DOM operations\",\n      \"time\": \"2017-03-20\"\n    },\n    {\n      \"rank\": 24,\n      \"name\": \"gulp-util\",\n      \"description\": \"Utility functions for gulp plugins\",\n      \"time\": \"2016-12-26\"\n    },\n    {\n      \"rank\": 25,\n      \"name\": \"yargs\",\n      \"description\": \"yargs the modern, pirate-themed, successor to optimist.\",\n      \"time\": \"2017-06-12\"\n    },\n    {\n      \"rank\": 26,\n      \"name\": \"classnames\",\n      \"description\": \"A simple utility for conditionally joining classNames together\",\n      \"time\": \"2016-05-02\"\n    },\n    {\n      \"rank\": 27,\n      \"name\": \"cheerio\",\n      \"description\": \"Tiny, fast, and elegant implementation of core jQuery designed specifically for the server\",\n      \"time\": \"2017-07-02\"\n    },\n    {\n      \"rank\": 28,\n      \"name\": \"coffee-script\",\n      \"description\": \"Unfancy JavaScript\",\n      \"time\": \"2017-05-15\"\n    },\n    {\n      \"rank\": 29,\n      \"name\": \"uuid\",\n      \"description\": \"RFC4122 (v1, v4, and v5) UUIDs\",\n      \"time\": \"2017-06-16\"\n    },\n    {\n      \"rank\": 30,\n      \"name\": \"babel-core\",\n      \"description\": \"Babel compiler core.\",\n      \"time\": \"2017-06-08\"\n    },\n    {\n      \"rank\": 31,\n      \"name\": \"gulp\",\n      \"description\": \"The streaming build system\",\n      \"time\": \"2016-02-08\"\n    },\n    {\n      \"rank\": 32,\n      \"name\": \"winston\",\n      \"description\": \"A multi-transport async logging library for Node.js\",\n      \"time\": \"2017-01-20\"\n    },\n    {\n      \"rank\": 33,\n      \"name\": \"babel-preset-es2015\",\n      \"description\": \"Babel preset for all es2015 plugins.\",\n      \"time\": \"2017-04-07\"\n    },\n    {\n      \"rank\": 34,\n      \"name\": \"webpack\",\n      \"description\": \"Packs CommonJs/AMD modules for the browser. Allows to split your codebase into multiple bundles, which can be loaded on demand. Support loaders to preprocess files, i.e. json, jsx, es7, css, less, ... and your custom stuff.\",\n      \"time\": \"2017-07-15\"\n    },\n    {\n      \"rank\": 35,\n      \"name\": \"semver\",\n      \"description\": \"The semantic version parser used by npm.\",\n      \"time\": \"2016-07-14\"\n    },\n    {\n      \"rank\": 36,\n      \"name\": \"object-assign\",\n      \"description\": \"ES2015 `Object.assign()` ponyfill\",\n      \"time\": \"2017-01-16\"\n    },\n    {\n      \"rank\": 37,\n      \"name\": \"aws-sdk\",\n      \"description\": \"AWS SDK for JavaScript\",\n      \"time\": \"2017-07-14\"\n    },\n    {\n      \"rank\": 38,\n      \"name\": \"inquirer\",\n      \"description\": \"A collection of common interactive command line user interfaces.\",\n      \"time\": \"2017-07-09\"\n    },\n    {\n      \"rank\": 39,\n      \"name\": \"rxjs\",\n      \"description\": \"Reactive Extensions for modern JavaScript\",\n      \"time\": \"2017-07-05\"\n    },\n    {\n      \"rank\": 40,\n      \"name\": \"rimraf\",\n      \"description\": \"A deep deletion module for node (like `rm -rf`)\",\n      \"time\": \"2017-02-24\"\n    },\n    {\n      \"rank\": 41,\n      \"name\": \"node-uuid\",\n      \"description\": \"Rigorous implementation of RFC4122 (v1 and v4) UUIDs.\",\n      \"time\": \"2017-03-22\"\n    },\n    {\n      \"rank\": 42,\n      \"name\": \"yosay\",\n      \"description\": \"Tell Yeoman what to say\",\n      \"time\": \"2017-02-13\"\n    },\n    {\n      \"rank\": 43,\n      \"name\": \"prop-types\",\n      \"description\": \"Runtime type checking for React props and similar objects.\",\n      \"time\": \"2017-05-12\"\n    },\n    {\n      \"rank\": 44,\n      \"name\": \"mocha\",\n      \"description\": \"simple, flexible, fun test framework\",\n      \"time\": \"2017-05-24\"\n    },\n    {\n      \"rank\": 45,\n      \"name\": \"superagent\",\n      \"description\": \"elegant & feature rich browser / node HTTP with a fluent API\",\n      \"time\": \"2017-03-22\"\n    },\n    {\n      \"rank\": 46,\n      \"name\": \"socket.io\",\n      \"description\": \"node.js realtime framework server\",\n      \"time\": \"2017-06-12\"\n    },\n    {\n      \"rank\": 47,\n      \"name\": \"redis\",\n      \"description\": \"Redis client library\",\n      \"time\": \"2017-03-14\"\n    },\n    {\n      \"rank\": 48,\n      \"name\": \"co\",\n      \"description\": \"generator async control flow goodness\",\n      \"time\": \"2015-07-09\"\n    },\n    {\n      \"rank\": 49,\n      \"name\": \"ember-cli-babel\",\n      \"description\": \"Ember CLI addon for Babel\",\n      \"time\": \"2017-07-06\"\n    },\n    {\n      \"rank\": 50,\n      \"name\": \"optimist\",\n      \"description\": \"Light-weight option parsing with an argv hash. No optstrings attached.\",\n      \"time\": \"2014-02-06\"\n    },\n    {\n      \"rank\": 51,\n      \"name\": \"shelljs\",\n      \"description\": \"Portable Unix shell commands for Node.js\",\n      \"time\": \"2017-06-07\"\n    },\n    {\n      \"rank\": 52,\n      \"name\": \"mongoose\",\n      \"description\": \"Mongoose MongoDB ODM\",\n      \"time\": \"2017-07-14\"\n    },\n    {\n      \"rank\": 53,\n      \"name\": \"mongodb\",\n      \"description\": \"The official MongoDB driver for Node.js\",\n      \"time\": \"2017-07-07\"\n    },\n    {\n      \"rank\": 54,\n      \"name\": \"handlebars\",\n      \"description\": \"Handlebars provides the power necessary to let you build semantic templates effectively with no frustration\",\n      \"time\": \"2017-05-21\"\n    },\n    {\n      \"rank\": 55,\n      \"name\": \"js-yaml\",\n      \"description\": \"YAML 1.2 parser and serializer\",\n      \"time\": \"2017-07-08\"\n    },\n    {\n      \"rank\": 56,\n      \"name\": \"redux\",\n      \"description\": \"Predictable state container for JavaScript apps\",\n      \"time\": \"2017-07-13\"\n    },\n    {\n      \"rank\": 57,\n      \"name\": \"babel-polyfill\",\n      \"description\": \"Provides polyfills necessary for a full ES2015+ environment\",\n      \"time\": \"2017-02-13\"\n    },\n    {\n      \"rank\": 58,\n      \"name\": \"xml2js\",\n      \"description\": \"Simple XML to JavaScript object converter.\",\n      \"time\": \"2016-07-05\"\n    },\n    {\n      \"rank\": 59,\n      \"name\": \"ejs\",\n      \"description\": \"Embedded JavaScript templates\",\n      \"time\": \"2017-02-16\"\n    },\n    {\n      \"rank\": 60,\n      \"name\": \"babel-loader\",\n      \"description\": \"babel module loader for webpack\",\n      \"time\": \"2017-06-28\"\n    },\n    {\n      \"rank\": 61,\n      \"name\": \"chai\",\n      \"description\": \"BDD/TDD assertion library for node.js and the browser. Test framework agnostic.\",\n      \"time\": \"2017-07-12\"\n    },\n    {\n      \"rank\": 62,\n      \"name\": \"extend\",\n      \"description\": \"Port of jQuery.extend for node.js and the browser\",\n      \"time\": \"2017-04-28\"\n    },\n    {\n      \"rank\": 63,\n      \"name\": \"joi\",\n      \"description\": \"Object schema validation\",\n      \"time\": \"2017-06-15\"\n    },\n    {\n      \"rank\": 64,\n      \"name\": \"@angular/core\",\n      \"description\": \"Angular - the core framework\",\n      \"time\": \"2017-07-14\"\n    },\n    {\n      \"rank\": 65,\n      \"name\": \"ramda\",\n      \"description\": \"A practical functional library for JavaScript programmers.\",\n      \"time\": \"2017-06-02\"\n    },\n    {\n      \"rank\": 66,\n      \"name\": \"morgan\",\n      \"description\": \"HTTP request logger middleware for node.js\",\n      \"time\": \"2017-05-24\"\n    },\n    {\n      \"rank\": 67,\n      \"name\": \"eslint\",\n      \"description\": \"An AST-based pattern checker for JavaScript.\",\n      \"time\": \"2017-07-09\"\n    },\n    {\n      \"rank\": 68,\n      \"name\": \"jade\",\n      \"description\": \"A clean, whitespace-sensitive template language for writing HTML\",\n      \"time\": \"2015-06-12\"\n    },\n    {\n      \"rank\": 69,\n      \"name\": \"cookie-parser\",\n      \"description\": \"cookie parsing with signatures\",\n      \"time\": \"2016-05-27\"\n    },\n    {\n      \"rank\": 70,\n      \"name\": \"request-promise\",\n      \"description\": \"The simplified HTTP request client 'request' with Promise support. Powered by Bluebird.\",\n      \"time\": \"2017-05-08\"\n    },\n    {\n      \"rank\": 71,\n      \"name\": \"immutable\",\n      \"description\": \"Immutable Data Collections\",\n      \"time\": \"2016-04-19\"\n    },\n    {\n      \"rank\": 72,\n      \"name\": \"uglify-js\",\n      \"description\": \"JavaScript parser, mangler/compressor and beautifier toolkit\",\n      \"time\": \"2017-07-16\"\n    },\n    {\n      \"rank\": 73,\n      \"name\": \"mime\",\n      \"description\": \"A comprehensive library for mime-type mapping\",\n      \"time\": \"2017-05-12\"\n    },\n    {\n      \"rank\": 74,\n      \"name\": \"zone.js\",\n      \"description\": \"Zones for JavaScript\",\n      \"time\": \"2017-07-12\"\n    },\n    {\n      \"rank\": 75,\n      \"name\": \"react-redux\",\n      \"description\": \"Official React bindings for Redux\",\n      \"time\": \"2017-05-18\"\n    },\n    {\n      \"rank\": 76,\n      \"name\": \"css-loader\",\n      \"description\": \"css loader module for webpack\",\n      \"time\": \"2017-05-30\"\n    },\n    {\n      \"rank\": 77,\n      \"name\": \"core-js\",\n      \"description\": \"Standard library\",\n      \"time\": \"2016-07-17\"\n    },\n    {\n      \"rank\": 78,\n      \"name\": \"axios\",\n      \"description\": \"Promise based HTTP client for the browser and node.js\",\n      \"time\": \"2017-06-03\"\n    },\n    {\n      \"rank\": 79,\n      \"name\": \"@angular/common\",\n      \"description\": \"Angular - commonly needed directives and services\",\n      \"time\": \"2017-07-14\"\n    },\n    {\n      \"rank\": 80,\n      \"name\": \"marked\",\n      \"description\": \"A markdown parser built for speed\",\n      \"time\": \"2016-07-30\"\n    },\n    {\n      \"rank\": 81,\n      \"name\": \"angular\",\n      \"description\": \"HTML enhanced for web apps\",\n      \"time\": \"2017-07-03\"\n    },\n    {\n      \"rank\": 82,\n      \"name\": \"babel-preset-react\",\n      \"description\": \"Babel preset for all React plugins.\",\n      \"time\": \"2017-04-07\"\n    },\n    {\n      \"rank\": 83,\n      \"name\": \"es6-promise\",\n      \"description\": \"A lightweight library that provides tools for organizing asynchronous code\",\n      \"time\": \"2017-06-28\"\n    },\n    {\n      \"rank\": 84,\n      \"name\": \"promise\",\n      \"description\": \"Bare bones Promises/A+ implementation\",\n      \"time\": \"2017-07-12\"\n    },\n    {\n      \"rank\": 85,\n      \"name\": \"style-loader\",\n      \"description\": \"style loader module for webpack\",\n      \"time\": \"2017-06-05\"\n    },\n    {\n      \"rank\": 86,\n      \"name\": \"path\",\n      \"description\": \"Node.JS path module\",\n      \"time\": \"2015-09-13\"\n    },\n    {\n      \"rank\": 87,\n      \"name\": \"ws\",\n      \"description\": \"Simple to use, blazing fast and thoroughly tested websocket client and server for Node.js\",\n      \"time\": \"2017-05-17\"\n    },\n    {\n      \"rank\": 88,\n      \"name\": \"underscore.string\",\n      \"description\": \"String manipulation extensions for Underscore.js javascript library.\",\n      \"time\": \"2016-02-24\"\n    },\n    {\n      \"rank\": 89,\n      \"name\": \"mysql\",\n      \"description\": \"A node.js driver for mysql. It is written in JavaScript, does not require compiling, and is 100% MIT licensed.\",\n      \"time\": \"2017-01-24\"\n    },\n    {\n      \"rank\": 90,\n      \"name\": \"react-router\",\n      \"description\": \"Declarative routing for React\",\n      \"time\": \"2017-04-12\"\n    },\n    {\n      \"rank\": 91,\n      \"name\": \"@angular/platform-browser\",\n      \"description\": \"Angular - library for using Angular in a web browser\",\n      \"time\": \"2017-07-14\"\n    },\n    {\n      \"rank\": 92,\n      \"name\": \"dotenv\",\n      \"description\": \"Loads environment variables from .env file\",\n      \"time\": \"2017-01-07\"\n    },\n    {\n      \"rank\": 93,\n      \"name\": \"browserify\",\n      \"description\": \"browser-side require() the node way\",\n      \"time\": \"2017-05-27\"\n    },\n    {\n      \"rank\": 94,\n      \"name\": \"@angular/compiler\",\n      \"description\": \"Angular - the compiler library\",\n      \"time\": \"2017-07-14\"\n    },\n    {\n      \"rank\": 95,\n      \"name\": \"babel-eslint\",\n      \"description\": \"Custom parser for ESLint\",\n      \"time\": \"2017-04-21\"\n    },\n    {\n      \"rank\": 96,\n      \"name\": \"xtend\",\n      \"description\": \"extend like a boss\",\n      \"time\": \"2015-11-02\"\n    },\n    {\n      \"rank\": 97,\n      \"name\": \"file-loader\",\n      \"description\": \"file loader module for webpack\",\n      \"time\": \"2017-06-05\"\n    },\n    {\n      \"rank\": 98,\n      \"name\": \"bunyan\",\n      \"description\": \"a JSON logging library for node.js services\",\n      \"time\": \"2017-04-05\"\n    },\n    {\n      \"rank\": 99,\n      \"name\": \"@angular/http\",\n      \"description\": \"Angular - the http service\",\n      \"time\": \"2017-07-14\"\n    },\n    {\n      \"rank\": 100,\n      \"name\": \"postcss\",\n      \"description\": \"Tool for transforming styles with JS plugins\",\n      \"time\": \"2017-07-05\"\n    },\n    {\n      \"rank\": 101,\n      \"name\": \"node-sass\",\n      \"description\": \"Wrapper around libsass\",\n      \"time\": \"2017-05-16\"\n    },\n    {\n      \"rank\": 102,\n      \"name\": \"jsonwebtoken\",\n      \"description\": \"JSON Web Token implementation (symmetric and asymmetric)\",\n      \"time\": \"2017-05-17\"\n    },\n    {\n      \"rank\": 103,\n      \"name\": \"nan\",\n      \"description\": \"Native Abstractions for Node.js: C++ header for Node 0.8 -> 7 compatibility\",\n      \"time\": \"2017-04-12\"\n    },\n    {\n      \"rank\": 104,\n      \"name\": \"minimatch\",\n      \"description\": \"a glob matcher in javascript\",\n      \"time\": \"2017-05-07\"\n    },\n    {\n      \"rank\": 105,\n      \"name\": \"bootstrap\",\n      \"description\": \"The most popular front-end framework for developing responsive, mobile first projects on the web.\",\n      \"time\": \"2016-07-25\"\n    },\n    {\n      \"rank\": 106,\n      \"name\": \"grunt\",\n      \"description\": \"The JavaScript Task Runner\",\n      \"time\": \"2016-04-05\"\n    },\n    {\n      \"rank\": 107,\n      \"name\": \"meow\",\n      \"description\": \"CLI app helper\",\n      \"time\": \"2016-01-04\"\n    },\n    {\n      \"rank\": 108,\n      \"name\": \"chokidar\",\n      \"description\": \"A neat wrapper around node.js fs.watch / fs.watchFile / fsevents.\",\n      \"time\": \"2017-05-08\"\n    },\n    {\n      \"rank\": 109,\n      \"name\": \"qs\",\n      \"description\": \"A querystring parser that supports nesting and arrays, with a depth limit\",\n      \"time\": \"2017-06-28\"\n    },\n    {\n      \"rank\": 110,\n      \"name\": \"prompt\",\n      \"description\": \"A beautiful command-line prompt for node.js\",\n      \"time\": \"2016-02-10\"\n    },\n    {\n      \"rank\": 111,\n      \"name\": \"less\",\n      \"description\": \"Leaner CSS\",\n      \"time\": \"2017-01-05\"\n    },\n    {\n      \"rank\": 112,\n      \"name\": \"eslint-plugin-react\",\n      \"description\": \"React specific linting rules for ESLint\",\n      \"time\": \"2017-06-13\"\n    },\n    {\n      \"rank\": 113,\n      \"name\": \"@angular/platform-browser-dynamic\",\n      \"description\": \"Angular - library for using Angular in a web browser with JIT compilation\",\n      \"time\": \"2017-07-14\"\n    },\n    {\n      \"rank\": 114,\n      \"name\": \"autoprefixer\",\n      \"description\": \"Parse CSS and add vendor prefixes to CSS rules using values from the Can I Use website\",\n      \"time\": \"2017-07-06\"\n    },\n    {\n      \"rank\": 115,\n      \"name\": \"gulp-rename\",\n      \"description\": \"Rename files\",\n      \"time\": \"2015-04-02\"\n    },\n    {\n      \"rank\": 116,\n      \"name\": \"compression\",\n      \"description\": \"Node.js compression middleware\",\n      \"time\": \"2017-07-11\"\n    },\n    {\n      \"rank\": 117,\n      \"name\": \"vue\",\n      \"description\": \"Reactive, component-oriented view layer for modern web interfaces.\",\n      \"time\": \"2017-07-13\"\n    },\n    {\n      \"rank\": 118,\n      \"name\": \"typescript\",\n      \"description\": \"TypeScript is a language for application scale JavaScript development\",\n      \"time\": \"2017-06-27\"\n    },\n    {\n      \"rank\": 119,\n      \"name\": \"extract-text-webpack-plugin\",\n      \"description\": \"Extract text from bundle into a file.\",\n      \"time\": \"2017-07-10\"\n    },\n    {\n      \"rank\": 120,\n      \"name\": \"babel-cli\",\n      \"description\": \"Babel command line.\",\n      \"time\": \"2017-04-07\"\n    },\n    {\n      \"rank\": 121,\n      \"name\": \"@angular/forms\",\n      \"description\": \"Angular - directives and services for creating forms\",\n      \"time\": \"2017-07-14\"\n    },\n    {\n      \"rank\": 122,\n      \"name\": \"through\",\n      \"description\": \"simplified stream construction\",\n      \"time\": \"2015-07-03\"\n    },\n    {\n      \"rank\": 123,\n      \"name\": \"@types/node\",\n      \"description\": \"TypeScript definitions for Node.js\",\n      \"time\": \"2017-07-14\"\n    },\n    {\n      \"rank\": 124,\n      \"name\": \"isomorphic-fetch\",\n      \"description\": \"Isomorphic WHATWG Fetch API, for Node & Browserify\",\n      \"time\": \"2016-01-15\"\n    },\n    {\n      \"rank\": 125,\n      \"name\": \"del\",\n      \"description\": \"Delete files and folders\",\n      \"time\": \"2017-06-09\"\n    },\n    {\n      \"rank\": 126,\n      \"name\": \"url-loader\",\n      \"description\": \"url loader module for webpack\",\n      \"time\": \"2017-06-12\"\n    },\n    {\n      \"rank\": 127,\n      \"name\": \"passport\",\n      \"description\": \"Simple, unobtrusive authentication for Node.js.\",\n      \"time\": \"2015-11-09\"\n    },\n    {\n      \"rank\": 128,\n      \"name\": \"express-session\",\n      \"description\": \"Simple session middleware for Express\",\n      \"time\": \"2017-05-18\"\n    },\n    {\n      \"rank\": 129,\n      \"name\": \"@angular/router\",\n      \"description\": \"Angular - the routing library\",\n      \"time\": \"2017-07-14\"\n    },\n    {\n      \"rank\": 130,\n      \"name\": \"fs\",\n      \"description\": \"This package name is not currently in use, but was formerly occupied by another package. To avoid malicious use, npm is hanging on to the package name, but loosely, and we'll probably give it to you if you want it.\",\n      \"time\": \"2016-08-23\"\n    },\n    {\n      \"rank\": 131,\n      \"name\": \"loader-utils\",\n      \"description\": \"utils for webpack loaders\",\n      \"time\": \"2017-03-16\"\n    },\n    {\n      \"rank\": 132,\n      \"name\": \"socket.io-client\",\n      \"description\": \"[![Build Status](https://secure.travis-ci.org/socketio/socket.io-client.svg?branch=master)](http://travis-ci.org/socketio/socket.io-client) [![Dependency Status](https://david-dm.org/socketio/socket.io-client.svg)](https://david-dm.org/socketio/socket.io-\",\n      \"time\": \"2017-06-12\"\n    },\n    {\n      \"rank\": 133,\n      \"name\": \"pg\",\n      \"description\": \"PostgreSQL client - pure javascript & libpq with the same API\",\n      \"time\": \"2017-07-14\"\n    },\n    {\n      \"rank\": 134,\n      \"name\": \"webpack-dev-server\",\n      \"description\": \"Serves a webpack app. Updates the browser on changes.\",\n      \"time\": \"2017-07-07\"\n    },\n    {\n      \"rank\": 135,\n      \"name\": \"connect\",\n      \"description\": \"High performance middleware framework\",\n      \"time\": \"2017-05-17\"\n    },\n    {\n      \"rank\": 136,\n      \"name\": \"node-fetch\",\n      \"description\": \"A light-weight module that brings window.fetch to node.js and io.js\",\n      \"time\": \"2017-06-03\"\n    },\n    {\n      \"rank\": 137,\n      \"name\": \"cors\",\n      \"description\": \"Node.js CORS middleware\",\n      \"time\": \"2017-07-13\"\n    },\n    {\n      \"rank\": 138,\n      \"name\": \"validator\",\n      \"description\": \"String validation and sanitization\",\n      \"time\": \"2017-07-07\"\n    },\n    {\n      \"rank\": 139,\n      \"name\": \"eslint-plugin-import\",\n      \"description\": \"Import with sanity.\",\n      \"time\": \"2017-07-06\"\n    },\n    {\n      \"rank\": 140,\n      \"name\": \"serve-favicon\",\n      \"description\": \"favicon serving middleware with caching\",\n      \"time\": \"2017-05-16\"\n    },\n    {\n      \"rank\": 141,\n      \"name\": \"ember-cli-htmlbars\",\n      \"description\": \"A library for adding htmlbars to ember CLI\",\n      \"time\": \"2017-06-09\"\n    },\n    {\n      \"rank\": 142,\n      \"name\": \"nodemailer\",\n      \"description\": \"Easy as cake e-mail sending from your Node.js applications\",\n      \"time\": \"2017-04-13\"\n    },\n    {\n      \"rank\": 143,\n      \"name\": \"jsdom\",\n      \"description\": \"A JavaScript implementation of many web standards\",\n      \"time\": \"2017-07-03\"\n    },\n    {\n      \"rank\": 144,\n      \"name\": \"boom\",\n      \"description\": \"HTTP-friendly error objects\",\n      \"time\": \"2017-05-28\"\n    },\n    {\n      \"rank\": 145,\n      \"name\": \"babel-preset-stage-0\",\n      \"description\": \"Babel preset for stage 0 plugins\",\n      \"time\": \"2017-04-07\"\n    },\n    {\n      \"rank\": 146,\n      \"name\": \"whatwg-fetch\",\n      \"description\": \"A window.fetch polyfill.\",\n      \"time\": \"2017-03-02\"\n    },\n    {\n      \"rank\": 147,\n      \"name\": \"reflect-metadata\",\n      \"description\": \"Polyfill for Metadata Reflection API\",\n      \"time\": \"2017-02-21\"\n    },\n    {\n      \"rank\": 148,\n      \"name\": \"d3\",\n      \"description\": \"Data-Driven Documents\",\n      \"time\": \"2017-07-14\"\n    },\n    {\n      \"rank\": 149,\n      \"name\": \"redux-thunk\",\n      \"description\": \"Thunk middleware for Redux.\",\n      \"time\": \"2017-01-18\"\n    },\n    {\n      \"rank\": 150,\n      \"name\": \"update-notifier\",\n      \"description\": \"Update notifications for your CLI app\",\n      \"time\": \"2017-06-06\"\n    },\n    {\n      \"rank\": 151,\n      \"name\": \"json-loader\",\n      \"description\": \"json loader module for webpack\",\n      \"time\": \"2015-11-23\"\n    },\n    {\n      \"rank\": 152,\n      \"name\": \"moment-timezone\",\n      \"description\": \"Parse and display moments in any timezone.\",\n      \"time\": \"2017-04-05\"\n    },\n    {\n      \"rank\": 153,\n      \"name\": \"gulp-uglify\",\n      \"description\": \"Minify files with UglifyJS.\",\n      \"time\": \"2017-05-20\"\n    },\n    {\n      \"rank\": 154,\n      \"name\": \"postcss-loader\",\n      \"description\": \"PostCSS loader for webpack\",\n      \"time\": \"2017-06-14\"\n    },\n    {\n      \"rank\": 155,\n      \"name\": \"inherits\",\n      \"description\": \"Browser-friendly inheritance fully compatible with standard node.js inherits()\",\n      \"time\": \"2016-09-08\"\n    },\n    {\n      \"rank\": 156,\n      \"name\": \"readable-stream\",\n      \"description\": \"Streams3, a user-land copy of the stream library from Node.js\",\n      \"time\": \"2017-06-29\"\n    },\n    {\n      \"rank\": 157,\n      \"name\": \"config\",\n      \"description\": \"Configuration control for production node deployments\",\n      \"time\": \"2017-05-03\"\n    },\n    {\n      \"rank\": 158,\n      \"name\": \"html-webpack-plugin\",\n      \"description\": \"Simplifies creation of HTML files to serve your webpack bundles\",\n      \"time\": \"2017-06-24\"\n    },\n    {\n      \"rank\": 159,\n      \"name\": \"open\",\n      \"description\": \"open a file or url in the user's preferred application\",\n      \"time\": \"2014-04-10\"\n    },\n    {\n      \"rank\": 160,\n      \"name\": \"babel-plugin-transform-runtime\",\n      \"description\": \"Externalise references to helpers and builtins, automatically polyfilling your code without polluting globals\",\n      \"time\": \"2017-02-13\"\n    },\n    {\n      \"rank\": 161,\n      \"name\": \"babel-register\",\n      \"description\": \"babel require hook\",\n      \"time\": \"2017-04-07\"\n    },\n    {\n      \"rank\": 162,\n      \"name\": \"npm\",\n      \"description\": \"a package manager for JavaScript\",\n      \"time\": \"2017-07-14\"\n    },\n    {\n      \"rank\": 163,\n      \"name\": \"cross-spawn\",\n      \"description\": \"Cross platform child_process#spawn and child_process#spawnSync\",\n      \"time\": \"2017-02-26\"\n    },\n    {\n      \"rank\": 164,\n      \"name\": \"koa\",\n      \"description\": \"Koa web app framework\",\n      \"time\": \"2017-06-20\"\n    },\n    {\n      \"rank\": 165,\n      \"name\": \"babelify\",\n      \"description\": \"Babel browserify transform\",\n      \"time\": \"2016-04-26\"\n    },\n    {\n      \"rank\": 166,\n      \"name\": \"mustache\",\n      \"description\": \"Logic-less {{mustache}} templates with JavaScript\",\n      \"time\": \"2016-11-08\"\n    },\n    {\n      \"rank\": 167,\n      \"name\": \"event-stream\",\n      \"description\": \"construct pipes of streams of events\",\n      \"time\": \"2016-07-17\"\n    },\n    {\n      \"rank\": 168,\n      \"name\": \"concat-stream\",\n      \"description\": \"writable stream that concatenates strings or binary data and calls a callback with the result\",\n      \"time\": \"2016-12-19\"\n    },\n    {\n      \"rank\": 169,\n      \"name\": \"invariant\",\n      \"description\": \"invariant\",\n      \"time\": \"2016-11-15\"\n    },\n    {\n      \"rank\": 170,\n      \"name\": \"clone\",\n      \"description\": \"deep cloning of objects and arrays\",\n      \"time\": \"2017-03-09\"\n    },\n    {\n      \"rank\": 171,\n      \"name\": \"hoek\",\n      \"description\": \"General purpose node utilities\",\n      \"time\": \"2017-03-31\"\n    },\n    {\n      \"rank\": 172,\n      \"name\": \"source-map-support\",\n      \"description\": \"Fixes stack traces for files with source maps\",\n      \"time\": \"2017-04-28\"\n    },\n    {\n      \"rank\": 173,\n      \"name\": \"resolve\",\n      \"description\": \"resolve like require.resolve() on behalf of files asynchronously and synchronously\",\n      \"time\": \"2017-04-20\"\n    },\n    {\n      \"rank\": 174,\n      \"name\": \"gulp-concat\",\n      \"description\": \"Concatenates files\",\n      \"time\": \"2016-11-13\"\n    },\n    {\n      \"rank\": 175,\n      \"name\": \"babel\",\n      \"description\": \"Turn ES6 code into readable vanilla ES5 with source maps\",\n      \"time\": \"2017-02-13\"\n    },\n    {\n      \"rank\": 176,\n      \"name\": \"iconv-lite\",\n      \"description\": \"Convert character encodings in pure javascript.\",\n      \"time\": \"2017-06-13\"\n    },\n    {\n      \"rank\": 177,\n      \"name\": \"crypto\",\n      \"description\": \"JavaScript implementations of standard and secure cryptographic algorithms.\",\n      \"time\": \"2011-11-08\"\n    },\n    {\n      \"rank\": 178,\n      \"name\": \"esprima\",\n      \"description\": \"ECMAScript parsing infrastructure for multipurpose analysis\",\n      \"time\": \"2017-06-10\"\n    },\n    {\n      \"rank\": 179,\n      \"name\": \"log4js\",\n      \"description\": \"Port of Log4js to work with node.\",\n      \"time\": \"2017-07-13\"\n    },\n    {\n      \"rank\": 180,\n      \"name\": \"ncp\",\n      \"description\": \"Asynchronous recursive file copy utility.\",\n      \"time\": \"2015-02-22\"\n    },\n    {\n      \"rank\": 181,\n      \"name\": \"nconf\",\n      \"description\": \"Hierarchical node.js configuration with files, environment variables, command-line arguments, and atomic object merging.\",\n      \"time\": \"2016-02-03\"\n    },\n    {\n      \"rank\": 182,\n      \"name\": \"when\",\n      \"description\": \"A lightweight Promises/A+ and when() implementation, plus other async goodies.\",\n      \"time\": \"2017-02-20\"\n    },\n    {\n      \"rank\": 183,\n      \"name\": \"babel-plugin-transform-class-properties\",\n      \"description\": \"This plugin transforms static class properties as well as properties declared with the property initializer syntax\",\n      \"time\": \"2017-04-07\"\n    },\n    {\n      \"rank\": 184,\n      \"name\": \"progress\",\n      \"description\": \"Flexible ascii progress bar\",\n      \"time\": \"2017-04-04\"\n    },\n    {\n      \"rank\": 185,\n      \"name\": \"merge\",\n      \"description\": \"Merge multiple objects into one, optionally creating a new cloned object. Similar to the jQuery.extend but more flexible. Works in Node.js and the browser.\",\n      \"time\": \"2014-09-07\"\n    },\n    {\n      \"rank\": 186,\n      \"name\": \"stylus\",\n      \"description\": \"Robust, expressive, and feature-rich CSS superset\",\n      \"time\": \"2016-04-27\"\n    },\n    {\n      \"rank\": 187,\n      \"name\": \"gulp-sourcemaps\",\n      \"description\": \"Source map support for Gulp.js\",\n      \"time\": \"2017-04-10\"\n    },\n    {\n      \"rank\": 188,\n      \"name\": \"eslint-plugin-jsx-a11y\",\n      \"description\": \"Static AST checker for accessibility rules on JSX elements.\",\n      \"time\": \"2017-06-29\"\n    },\n    {\n      \"rank\": 189,\n      \"name\": \"graceful-fs\",\n      \"description\": \"A drop-in replacement for fs, making various improvements.\",\n      \"time\": \"2016-11-22\"\n    },\n    {\n      \"rank\": 190,\n      \"name\": \"highlight.js\",\n      \"description\": \"Syntax highlighting with language autodetection.\",\n      \"time\": \"2017-05-31\"\n    },\n    {\n      \"rank\": 191,\n      \"name\": \"cli-table\",\n      \"description\": \"Pretty unicode tables for the CLI\",\n      \"time\": \"2014-10-22\"\n    },\n    {\n      \"rank\": 192,\n      \"name\": \"cli-color\",\n      \"description\": \"Colors, formatting and other tools for the console\",\n      \"time\": \"2017-02-22\"\n    },\n    {\n      \"rank\": 193,\n      \"name\": \"jsonfile\",\n      \"description\": \"Easily read/write JSON files.\",\n      \"time\": \"2017-07-05\"\n    },\n    {\n      \"rank\": 194,\n      \"name\": \"serve-static\",\n      \"description\": \"Serve static files\",\n      \"time\": \"2017-05-17\"\n    },\n    {\n      \"rank\": 195,\n      \"name\": \"sequelize\",\n      \"description\": \"Multi dialect ORM for Node.JS\",\n      \"time\": \"2017-07-13\"\n    },\n    {\n      \"rank\": 196,\n      \"name\": \"sinon\",\n      \"description\": \"JavaScript test spies, stubs and mocks.\",\n      \"time\": \"2017-07-13\"\n    },\n    {\n      \"rank\": 197,\n      \"name\": \"tmp\",\n      \"description\": \"Temporary file and directory creator\",\n      \"time\": \"2016-11-21\"\n    },\n    {\n      \"rank\": 198,\n      \"name\": \"backbone\",\n      \"description\": \"Give your JS App some Backbone with Models, Views, Collections, and Events.\",\n      \"time\": \"2016-04-05\"\n    },\n    {\n      \"rank\": 199,\n      \"name\": \"sass-loader\",\n      \"description\": \"Sass loader for webpack\",\n      \"time\": \"2017-06-14\"\n    },\n    {\n      \"rank\": 200,\n      \"name\": \"http-proxy\",\n      \"description\": \"HTTP proxying for the masses\",\n      \"time\": \"2016-12-06\"\n    }\n  ]\n}\n```\n"
  },
  "tool/Markdown": {
    "title": "Markdown",
    "content": "# 格式\n\n## 斜体\n\n```md\n_italic_\n```\n\n_italic_\n\n## 加粗\n\n```md\n**bold**\n```\n\n**bold**\n\n## 加粗+斜体\n\n```md\n**_bold+italic_**\n```\n\n**_bold+italic_**\n\n## 删除线\n\n```md\n~~strikethrough~~\n```\n\n~~strikethrough~~\n\n## html 标签\n\n```html\n<sup>sup</sup>\n<sub>sub</sub>\n<mark>mark</mark>\n<u>underline</u>\n```\n\n- m<sup>3</sup>\n- a<sub>i + 1</sub>\n- Log<sup>n</sup><sub>e</sub>\n- <mark>mark</mark>\n- <u>underline</u>\n\n## 链接\n\n```md\n[github](https://github.com)\n```\n\n[github](https://github.com)\n\n## 图片\n\n```md\n![](图片地址)\n\n![alt 文本](图片地址)\n```\n\n![](https://github.githubassets.com/favicons/favicon.png)\n\n![github icon](https://github.githubassets.com/favicons/favicon.jpg)\n\n## 内联代码\n\n```md\n`inline code`\n```\n\n我是内联 `inline code` 标签\n\n# 标题\n\n```md\n# 一级标题\n\n## 二级标题\n\n### 三级标题\n\n#### 四级标题\n```\n\n# 分隔线\n\n```md\n---\n```\n\n---\n\n# 引用\n\n```md\n> quote\n```\n\n> quote\n\n# 代码\n\n<pre><code>```language\nwrite your code here\n```</code></pre>\n\n```js\nconsole.log('markdown')\n```\n\n# 列表\n\n## 无序列表\n\n```md\n- item1\n- item2\n- item3\n\n* item1\n* item2\n* item3\n\n- item1\n- item2\n- item3\n```\n\n- item1\n- item2\n- item3\n\n* item1\n* item2\n* item3\n\n- item1\n- item2\n- item3\n\n## 有序列表\n\n```md\n1. item1\n2. item2\n3. item3\n```\n\n1. item1\n2. item2\n3. item3\n\n# 任务列表\n\n```md\n[x] task 1\n[] task 2\n```\n\n- [x] task 1\n- [ ] task 2\n\n# 表格\n\n```md\n| Tables        |      Are      |   Cool |\n| ------------- | :-----------: | -----: |\n| col 3 is      | right-aligned | \\$1600 |\n| col 2 is      |   centered    |   \\$12 |\n| zebra stripes |   are neat    |    \\$1 |\n```\n\n| Tables        |      Are      |   Cool |\n| ------------- | :-----------: | -----: |\n| col 3 is      | right-aligned | \\$1600 |\n| col 2 is      |   centered    |   \\$12 |\n| zebra stripes |   are neat    |    \\$1 |\n\n# Mermaid\n\n[About Mermaid](https://mermaid.js.org/intro)\n\n## Flowcharts\n\n<pre><code>```mermaid\nflowchart TD\n  Start --> Stop\n```</code></pre>\n\n```mermaid\nflowchart TD\n  Start --> Stop\n```\n\n<pre><code>```mermaid\nflowchart LR\n  Start --> Stop\n```</code></pre>\n\n```mermaid\nflowchart LR\n  Start --> Stop\n```\n\n<pre><code>```mermaid\nflowchart LR\n  id1(This is the text in the box)\n```</code></pre>\n\n```mermaid\nflowchart LR\n  id1(This is the text in the box)\n```\n\n<pre><code>```mermaid\nflowchart LR\n  id1[(Database)]\n```</code></pre>\n\n```mermaid\nflowchart LR\n  id1[(Database)]\n```\n\n## Sequence Diagrams\n\n<pre><code>```mermaid\nsequenceDiagram\n  Alice->>John: Hello John, how are you?\n  John-->>Alice: Great!\n  Alice-)John: See you later!\n```</code></pre>\n\n```mermaid\nsequenceDiagram\n  Alice->>John: Hello John, how are you?\n  John-->>Alice: Great!\n  Alice-)John: See you later!\n```\n\n## State Diagrams\n\n<pre><code>```mermaid\nstateDiagram-v2\n  [*] --> Still\n  Still --> [*]\n\n  Still --> Moving\n  Moving --> Still\n  Moving --> Crash\n  Crash --> [*]\n```</code></pre>\n\n```mermaid\nstateDiagram-v2\n  [*] --> Still\n  Still --> [*]\n\n  Still --> Moving\n  Moving --> Still\n  Moving --> Crash\n  Crash --> [*]\n```\n\n# Math\n\n- [KaTeX](https://katex.org)\n- [LaTeX](https://www.latex-project.org)\n- [MathJax](https://www.mathjax.org)\n\n```\n$E = mc^2$\n```\n\n质能方程 $E = mc^2$ ，E 表示能量，m 代表质量，而 c 则表示光速（常量，c=299792458m/s）。 由阿尔伯特·爱因斯坦提出。 该方程主要用来解释核变反应中的质量亏损和计算高能物理中粒子的能量。\n\n```\n$$ a^2 + b^2 = c^2 $$\n```\n\n$$ a^2 + b^2 = c^2 $$\n\n```\n$$ {f(x)=a_nx^n+a_{n-1}x^{n-1}+a_{n-2}x^{n-2}}+\\cdots $$\n```\n\n$$ {f(x) = a_nx^n + a_{n-1}x^{n-1} + a_{n-2}x^{n-2}} + \\cdots $$\n\n```\n$$ {f(x) = a_nx^n + a_{n-1}x^{n-1} + a_{n-2}x^{n-2}} + \\cdots $$\n```\n\n$$ x = {-b \\pm \\sqrt{b^2 - 4ac} \\over 2a + 1} $$\n\n# Packages\n\n- markdown-it\n- commonmark\n- marked\n- github-markdown-css\n- markdown-table\n- remark-parse\n- remark-gfm\n- remark-mdx\n- [@mdx-js/mdx](https://mdxjs.com)\n- gray-matter\n- front-matter\n- micromark\n\n# Referrence\n\n- [GFM: GitHub Flavored Markdown](https://github.github.com/gfm)\n- [Markdown Guide](https://www.markdownguide.org)\n- [commonmark](https://commonmark.org)\n- [working with advanced formatting](https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting)\n- [basic writing and formatting syntax](https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax)\n- [math support in markdown](https://github.blog/2022-05-19-math-support-in-markdown)\n"
  },
  "tool/Yarn": {
    "title": "Yarn",
    "content": "# Yarn\n\n## Starting a new project\n\n> yarn init\n\n## Installing all the dependencies of project\n\n> yarn\n>\n> yarn install\n\n## Adding a dependency\n\n> yarn add [package]\n>\n> yarn add [package]@[version]\n>\n> yarn add [package]@[tag]\n\n## Updating a dependency\n\n> yarn upgrade [package]\n>\n> yarn upgrade [package]@[version]\n>\n> yarn upgrade [package]@[tag]\n\n# Removing a dependency\n\n> yarn remove [package]\n"
  },
  "tool/Sublime": {
    "title": "Sublime",
    "content": "# 最佳配置\n\n```json\n{\n  \"caret_style\": \"smooth\",\n  \"detect_indentation\": false,\n  \"draw_white_space\": \"all\",\n  \"file_exclude_patterns\": [\n    \"*.pyc\",\n    \"*.pyo\",\n    \"*.exe\",\n    \"*.dll\",\n    \"*.obj\",\n    \"*.o\",\n    \"*.a\",\n    \"*.lib\",\n    \"*.so\",\n    \"*.dylib\",\n    \"*.ncb\",\n    \"*.sdf\",\n    \"*.suo\",\n    \"*.pdb\",\n    \"*.idb\",\n    \".DS_Store\",\n    \"*.class\",\n    \"*.psd\",\n    \"*.db\",\n    \"*.sublime-workspace\",\n    \"._*\"\n  ],\n  \"find_selected_text\": true,\n  \"folder_exclude_patterns\": [\".svn\", \".git\", \".hg\", \"CVS\", \"node_modules\"],\n  \"font_size\": 18,\n  \"highlight_line\": true,\n  \"ignored_packages\": [\"Vintage\"],\n  \"indent_to_bracket\": true,\n  \"match_brackets_angle\": false,\n  \"match_brackets_braces\": false,\n  \"tab_size\": 4,\n  \"translate_tabs_to_spaces\": true,\n  \"trim_trailing_white_space_on_save\": true,\n  \"ensure_newline_at_eof_on_save\": true,\n  \"word_wrap\": false\n}\n```\n\n# [Package Control](https://packagecontrol.io/installation)\n\n```py\nimport urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)\n```\n\n# 插件\n\n- Emmet\n- A File Icon\n- CSS3\n- jQuery\n- LESS\n- SCSS\n- CSScomb\n- JsPrettier\n- JsFormat\n- Quote HTML\n- HTML-CSS-JS Prettify\n- All Autocomplete\n- AutoFileName\n- DocBlockr\n- DeleteBlankLines\n- Console API Snippets\n- SFTP\n- Nodejs\n\n# 快捷键\n\n## 文件\n\n- cmd+o 打开文件\n- cmd+n 新建标签页\n- cmd+shift+n 新建窗口\n- cmd+w 关闭标签页\n- cmd+shift+w 关闭窗口\n- cmd+shift+p 打开命令面板\n- cmd+p 搜索项目中的文件\n- ctrl+g 跳到指定行\n- ctrl+\\` 打开控制台\n- cmd+k,b 显示/隐藏文件目录\n\n## 编辑\n\n- cmd+c 复制（选中部分/当前行）\n- cmd+x 剪切（选中部分/当前行）\n- cmd+v 粘贴\n- cmd+shift+v 粘贴+缩进\n- cmd+alt+v 打开粘贴板\n- cmd+z 撤销\n- cmd+y 重复上次操作\n\n## 选择\n\n- cmd+a 全选\n- cmd+d 选择单词\n- cmd+l 选择一行\n- shift+alt+up 添加上一行\n- shift+alt+down 添加下一行\n- esc 只留第一个选择\n- cmd+shift+空格 扩展到 scope\n- cmd+shift+a 光标所在标签的全部内容\n- cmd+shift+j 光标所在标签的父标签的全部内容（最近的{}）\n- ctrl+shift+m 选中光标所在括号（小括号，中括号，大括号）里面的全部内容\n\n### 行\n\n- cmd+ctrl+up 上移一行\n- cmd+ctrl+down 下移一行\n- cmd+shift+d 复制并粘贴行\n- ctrl+shift+k 删除行\n- cmd+j 合并行\n\n### 注释\n\n- cmd+/\n- cmd+shift+/\n\n### 缩进\n\n- cmd+[\n- cmd+]\n\n## 大小写\n\n- cmd+k,u 大写\n- cmd+k,l 小写\n\n### 文本\n\n- cmd+enter 往下插入行\n- cmd+shift+enter 往上插入行\n- cmd+delete 删除光标至行首\n- ctrl+k 删除光标至行尾\n- ctrl+t 交换光标左右字符\n\n### 标签\n\n- cmd+alt+. 补全标签\n- alt+shift+w 为选中域包裹一对闭合标签\n- ctrl+alt+enter 为选中域包裹一对闭合标签（比楼上的命令更高级）\n- ctrl+e 将选中的单词补全为一对闭合标签\n\n### 折叠\n\n- cmd+alt+[ 折叠\n- cmd+alt+] 展开\n- cmd+k,j 展开所有\n- cmd+k,t 折叠标签属性\n- cmd+k,数字 折叠 n 层\n\n### 排序\n\n- f9 行按升序排\n- ctrl+f9 行按升序排，区分大小写\n\n# 命令行[打开文件或者目录]\n\n## subs\n\n```\nSublime Text 提供命令行的工具: subs\n路径: /Applications/Sublime\\ Text.app/Contents/SharedSupport/bin/subl\n```\n\n## ln\n\n```\nln  /Applications/Sublime\\ Text.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl\n或者\nln  /Applications/Sublime\\ Text.app/Contents/SharedSupport/bin/subl /usr/local/bin/st\n```\n\n## file or folder\n\n```\nst index.js\n或者\nst img\n```\n"
  },
  "tool/Emmet": {
    "title": "Emmet",
    "content": "# HTML\n\n- \\! 文档\n- \\# id\n- \\. class\n- \\[\\] 属性\n- \\{\\} 文本\n- \\> 子元素\n- \\+ 兄弟元素\n- ^ 后退(类似 jq 的 end)\n- \\(\\) 分组\n- \\$ 自增\n- @ 起点(跟在\\$之后,后跟'-'表示降序)\n- \\* 批量\n\n### 隐式标签 (Implicit TagNames)\n\n- 块元素 → div\n- 行间元素 → span\n- ul, ol → li\n- select, optgroup → option\n- table, thead ,tbody, tfoot → tr\n- tr → td\n\n# CSS\n\n- 单值/负值/多值/多命令\n\n```text\nm100 → margin: 100px;\nm-100 → margin: -100px;\nm0-a → margin: 0 auto;\nm1-2-3 → margin: 1px 2px 3px;\nm1-2-3-4 → margin: 1px 2px 3px 4px;\nw100+c#3 → width: 100px; color: #333;\n```\n\n- 缺省单位\n\n```text\nm10 → margin: 10px;\nm10em → margin: 10em;\n```\n\n- 单位别名\n\n```text\np → %\ne → em\nx → ex\n```\n\n```text\nw100p → width: 100%\nm10p30e5x → margin: 10% 30em 5ex\n```\n\n- 色值\n\n```text\nc → color: #000;\nc# → color: #000;\nc#1 → color: #111;\nc#12 → color: #121212;\nc#123 → color: #123;\nc#1234 → color: #123412;\nc#12345 → color: #123451;\nc#123456 → color: #123456;\n```\n\n- 没有单位的属性\n\n```text\n* z-index\n* line-height\n* opacity\n* font-weight\n```\n\n- !important\n\n```text\n! → !important\n```\n\n- 厂商前缀\n\n```text\nw: webkit\nm: moz\ns: ms\no: o\n```\n\n```text\n-wm-bx-s\n-webkit-box-shadow: inset hoff voff blur color;\n-moz-box-shadow: inset hoff voff blur color;\nbox-shadow: inset hoff voff blur color;\n```\n\n- 渐变\n\n```text\nlg()\nbackground-image: -webkit-linear-gradient();\nbackground-image: -o-linear-gradient();\nbackground-image: linear-gradient();\n\nlg(left, #123 30%, #456)\nbackground-image: -webkit-linear-gradient(left, #123 30%, #456);\nbackground-image: -o-linear-gradient(left, #123 30%, #456);\nbackground-image: linear-gradient(to right, #123 30%, #456);\n```\n\n# Referrence\n\n1. [http://emmet.io/](http://emmet.io)\n2. [http://docs.emmet.io/](http://docs.emmet.io)\n3. [https://github.com/emmetio/emmet/blob/master/lib/snippets.json](https://github.com/emmetio/emmet/blob/master/lib/snippets.json)\n"
  },
  "tool/English": {
    "title": "English",
    "content": "| 英语           | 释义         |\n| -------------- | ------------ |\n| identifier     | 标识符       |\n| declaring      | 声明         |\n| parse          | 解析         |\n| available      | 有效的       |\n| expression     | 表达式       |\n| parameter      | 参数         |\n| scope          | 范围         |\n| invoke         | 调用         |\n| reference      | 参考         |\n| refer          | 参考         |\n| syntax         | 语法         |\n| description    | 描述         |\n| correspond     | 对应         |\n| suffix         | 后缀         |\n| standard       | 标准         |\n| force          | 强制         |\n| modify         | 修改         |\n| anonymous      | 匿名的       |\n| specification  | 规范         |\n| statement      | 声明         |\n| correspond     | 对应         |\n| deprecate      | 过时         |\n| execute        | 执行         |\n| generator      | 生成器       |\n| shortcut       | 快捷方式     |\n| browser        | 浏览器       |\n| compatibility  | 兼容性       |\n| feature        | 功能, 特征   |\n| literal        | 字面量       |\n| class          | 类           |\n| object         | 对象         |\n| prototype      | 原型         |\n| instance       | 实例         |\n| method         | 方法         |\n| propertie      | 属性         |\n| oriented       | 面向的       |\n| constructor    | 构造函数     |\n| inherit        | 继承         |\n| recurse        | 递归         |\n| specify        | 指定         |\n| generally      | 一般         |\n| release        | 发布         |\n| candidate      | 候选人       |\n| tutorial       | 教程         |\n| redirect       | 重定向       |\n| profile        | 简介         |\n| explore        | 探索         |\n| involve        | 涉及         |\n| typical        | 典型的       |\n| plugin         | 插件         |\n| via            | 通过         |\n| require        | 需要         |\n| stable         | 稳定的       |\n| ensure         | 确保         |\n| certain        | 某些         |\n| reference      | 参考         |\n| Synopsis       | 简介         |\n| checkout       | 校验         |\n| config         | 配置         |\n| command        | 命令         |\n| directory      | 目录         |\n| multiple       | 多个         |\n| simultaneously | 同时         |\n| locally        | 本地的       |\n| execute        | 执行         |\n| request        | 请求         |\n| assume         | 假设         |\n| recursive      | 递归         |\n| sophisticated  | 复杂的       |\n| manually       | 手动         |\n| polling        | 轮询         |\n| deploy         | 部署         |\n| proxy          | 代理         |\n| interface      | 接口，关键字 |\n| interactive    | 交互式的     |\n| caution        | 警告         |\n| integration    | 集成         |\n| grant          | 允许         |\n| define stack   | 定义栈       |\n| call stack     | 调用栈       |\n| bundler        | 打包         |\n| boilerplate    | 模板         |\n| intent         | 目的         |\n| nullified      | 无效的       |\n| term           | 术语         |\n| terminology    | 术语         |\n| dispatch       | 分发         |\n| avatar         | 头像         |\n| deactivate     | 停用         |\n| mount          | 安装         |\n| omit           | 忽略         |\n"
  },
  "tool/Gem": {
    "title": "Gem",
    "content": "# 卸载之前下载安装的 Ruby\n\n> gem sources --remove https://rubygems.org/\n\n# 安装淘宝提供的 Ruby\n\n> gem sources -a https://ruby.taobao.org/\n\n# 查看已经安装的 Ruby 列表\n\n> gem sources -l\n\n# 安装插件\n\n> gem install jekyll\n"
  },
  "tool/Gitbook": {
    "title": "Gitbook",
    "content": "# 安装\n\n```sh\nnpm i -g gitbook-cli\n```\n\n# 初始化\n\n```sh\ngitbook init\n```\n\n# 服务\n\n```sh\ngitbook serve\n```\n\n# 构建\n\n```sh\ngitbook build\n```\n\n# book.json 书的信息\n\n```json\n{\n  \"gitbook\": \"2.x.x\",\n  \"title\": \"ES6入门指南\",\n  \"description\": \"This is such a great book!\",\n  \"isbn\": \"978-3-16-148410-0\",\n  \"language\": \"en, ar, bn, ca, cs, de, en, es, fa, fi, fr, he, it, ja, ko, no, pl, pt, ro, ru, sv, tr, uk, vi, zh-hans, zh-tw\",\n  \"direction\": \"ltr\",\n  \"structure\": {\n    \"readme\": \"README.md\"\n  },\n  \"variables\": {\n    \"myTest\": \"Hello World\"\n  },\n  \"styles\": {\n    \"website\": \"styles/website.css\",\n    \"ebook\": \"styles/ebook.css\",\n    \"pdf\": \"styles/pdf.css\",\n    \"mobi\": \"sty  les/mobi.css\",\n    \"epub\": \"styles/epub.css\"\n  },\n  \"plugins\": [\"myplugin\"],\n  \"pluginsConfig\": {\n    \"myPlugin\": {\n      \"message\": \"Hello World\"\n    }\n  },\n  \"pdf\": {\n    \"headerTemplate\": \"Header of the PDF with _TITLE_\",\n    \"footerTemplate\": \"Footer HTML template. Available variables: _PAGENUM_, _TITLE_, _AUTHOR_ and _SECTION_.\"\n  }\n}\n```\n\n# SUMMARY.md 目录\n\n```md\nSummary\n\n[Chapter 1](chapter1.md)\n[Chapter 2](chapter2.md)\n[Chapter 3](chapter3.md)\n```\n\n# Cover 封面\n\n```text\nbig     cover.jpg           1800x2360\nsmall   cover_small.jpg     200x262\n```\n\n# GLOSSARY.md 词汇表\n\n```text\nterm\nDefinition for this term\n\nAnother term\nWith it's definition, this can contain bold text and all other kinds of inline markup ...\n```\n\n# Templating 模板\n\n```text\n// 模板语言 Nunjucks + Jinja2\n{% raw %}\n  this will {{ not be processed }}\n{% endraw %}\n\n// 定义变量 book.json\n{\n  \"variables\": {\n    \"myVariable\": \"Hello World\"\n  }\n}\n// 调用变量\n{{ book.myVariable }}\n{{ book.foo.bar }}\n{{ book[\"bar\"] }}\n// Context variables 上下文变量\nfile.path\nfile.mtime\n// Tags 标签\nif\nfor\ninclude\n```\n\n# ignoring 忽略的文件和文件夹\n\n```text\n.gitignore, .bookignore .ignore\n```\n\n# github\n\n```text\n// webhook\nhttps://www.gitbook.com/book/shuoshubao/es6/settings/github\nUsername/Repo\n```\n"
  },
  "tool/Jekyll": {
    "title": "Jekyll",
    "content": "# 安装\n\n- gem install jekyll\n\n# 初始化\n\n- jekyll new siteName\n\n# 开启服务\n\n- cd siteName\n- jekyll serve\n\n> http://localhost:4000\n\n# 用法\n\n## jekyll build\n\n- jekyll build\n\n> 当前文件夹中的内容将会生成到 ./site 文件夹中\n\n- jekyll build --destination <destination>\n\n> 当前文件夹中的内容将会生成到目标文件夹<destination>中\n\n- jekyll build --source <source> --destination <destination>\n\n> 指定源文件夹<source>中的内容将会生成到目标文件夹<destination>中\n\n- jekyll build --watch\n\n> 当前文件夹中的内容将会生成到 ./site 文件夹中\n\n## jekyll serve\n\n- jekyll serve\n- jekyll serve --detach\n- jekyll serve --watch\n\n# Github\n\n1. git clone https://github.com/shuoshubao/blog.git\n2. 将 git 里面的 `.git` 文件夹和 `README.md` 文件拷贝到 jekyll 目录下\n3. 提交到 github\n"
  },
  "tool/Mac": {
    "title": "Mac",
    "content": "# 终端自动补全忽略大小写\n\n### 输入\n\n```sh\nnano .inputrc\n```\n\n### 粘贴\n\n```text\nset completion-ignore-case on\nset show-all-if-ambiguous on\nTAB: menu-complete\n```\n\n### 保存\n\n- Control+O，回车保存\n\n### 重启\n\n- 重启终端生效\n\n# 关闭/开启 Spotlight\n\n### 关闭\n\n> sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.metadata.mds.plist\n\n### 开启\n\n> sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.metadata.mds.plist\n\n# 快捷键\n\n- cmd+, 打开当前 app 的设置\n- cmd+w 关闭当前标签页\n- cmd+q 退出当前程序\n- cmd+h 隐藏除了当前窗口\n- cmd+alt+h 隐藏除了当前窗口以外的所有窗口\n- cmd+shift+delete 清空垃圾桶\n- cmd+alt+shift+delete 清空垃圾桶（无提示）\n- cmd+左右 行首/末\n- cmd+上下 顶/底部\n- fn+上下 翻页\n\n# 关闭/开启 自动生成 .DS_Store 文件\n\n### 关闭\n\n> defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool TRUE\n\n### 开启\n\n> defaults delete com.apple.desktopservices DSDontWriteNetworkStores\n\n# 显示/隐藏 隐藏文件(夹)\n\n### 显示\n\n> defaults write com.apple.Finder AppleShowAllFiles YES\n\n### 隐藏\n\n> defaults write com.apple.Finder AppleShowAllFiles NO\n\n# 删除所有的 .DS_Store 文件\n\n> sudo find / -name \".DS_Store\" -depth -exec rm {} \\;\n\n# Alias\n\n> vim \\~/.bash_profile\n\n```sh\nalias dev = ssh root@172.34.56\nalias gst = git status\nalias gpl = git pull\nalias gps = git push\n```\n"
  },
  "tool/Git": {
    "title": "Git使用介绍",
    "content": "# Git 使用介绍\n\n## 简介\n\n- Git 是一个分布式版本控制软件, 2005 年发布\n- 之前的版本管理工具: CVS、Subversion、SVN\n- 通过 Git 进行版本控制的软件源代码托管服务的主流网站有: Github、Gitlab、Bitbucket\n- 国产代码托管平台: [码云](https://git.oschina.net)、[Coding](https://coding.net)\n- Git 工具: 命令行、编辑器集成、Github 客户端、Bitbucket 客户端(SourceTree)\n\n> Git 很强大，也很简单。全部命令非常多，但完成日常工作只需要掌握 **极其少数** 的命令即可。其他的可以在工作中遇到调整再去学习。\n>\n> 建议初学者使用命令行操作, 使用客户端仅查看变化以便理解 git 的作用\n\n## 安装\n\n- [Git 客户端](https://git-scm.com/download)\n- Mac 用户安装 XCode 之后执行 git 命令会提示安装\n\n## 作用\n\ngit 的核心作用有两个：文件管理，多人协作。\n\n> 文件管理：git 在不断的备份文件(git 内部是使用 diff 存储每次的更改而非真的备份全部)。\n>\n> 多人协作：git 通过代码合并、分支管理等功能让多名参与者能同时开发项目。\n\n贴个图感受下~\n\n![Git-Demo](http://oloqdvms7.bkt.clouddn.com/git-demo.png)\n\n## 核心概念\n\n- Workspace 工作区\n- Stage 暂存区\n- Repository 本地仓库\n- Remote 远程仓库\n\n![关系图](http://oloqdvms7.bkt.clouddn.com/git.png)\n\n> 总的来说，可以分为远程和本地。远程用于存储项目的最新状态，而本地用于个人开发。个人可以从远程拉取最新代码，也可以将自己的修改提交到远程。\n\n## 术语\n\n以下是一些学习 git 中会经常遇到的术语\n\n| 单词       | 释义   | 单词   | 释义 |\n| ---------- | ------ | ------ | ---- |\n| repository | 版本库 | branch | 分支 |\n| checkout   | 撤销   | reset  | 重置 |\n| log        | 日志   | merge  | 合并 |\n| stash      | 隐藏   | drop   | 放弃 |\n| push       | 推送   | pull   | 拉取 |\n\n## Git 常用命令\n\n### 安装和配置\n\n- git help：git 子命令和核心概念一览表\n  - git help [subcommand]：查看指定 git 子命令的简介\n- git config\n\n  - git config --list 查看 git 配置列表\n  - git config -e [--global] 查看编辑 git 配置文件\n  - git config user.name 'YOUR_NAME' 查看/设置用户名(当前项目)\n  - git config user.email 'YOUR_EMAIL' 查看/设置用户邮箱(当前项目)\n  - git config --global user.name 'YOUR_NAME' 查看/设置用户名(全局)\n  - git config --global user.email 'YOUR_EMAIL' 查看/设置用户邮箱(全局)\n\n- vim ~/.gitconfig：git 配置文件\n\n### 拉取项目\n\n- git clone [url]\n\n> 作为初学者，可以选择去 Github 去注册账号，然后自己新建一个项目随意折腾。\n\n### 文件操作\n\n- git add：添加文件或文件夹\n  - git add .\n  - git add [file1][file2]\n  - git add [dir1][dir2]\n- git rm：删除文件或文件夹\n  - git rm .\n  - git rm [file1][file2]\n  - git rm --cached [file1][file2] 从版本控制中移除但保留文件\n- git mv：重命名\n  - git mv [file1][file2]\n\n> 有一个很普遍的误解是以为 git add `.` 中的 `.` 是指所有的意思。其实 `.` 是指相对路径，即当前目录。\n\n### 提交代码\n\n- git commit：提交指定文件或目录到本地仓库\n  - git commit -m '注释'\n  - git commit [file][folder] -m '注释'\n  - git commit -am '注释'：提交工作区自上次 commit 之后的变化，直接到仓库区\n  - git commit --amend -m [message]：使用一次新的 commit，替代上一次提交\n\n## 撤销\n\n- git checkout\n  - git checkout .\n  - git checkout [file1][file2]\n  - git checkout [commit_id][file]\n- git reset\n  - git reset [file1][file2]\n  - git reset --hard\n  - git reset [commit_id]\n  - git reset --hard [commit_id]\n\n## 隐藏\n\n- git stash\n  - git stash\n  - git stash list\n  - git stash pop\n  - git stash drop\n\n> tip: 很容易忘记你曾经隐藏了修改，慎用~\n\n## 查看信息\n\n- git status\n- git diff\n  - git diff：显示工作区和工作区的差异\n  - git diff [file]：查看指定文件改动的地方(工作区与本地仓库文件内容的对比)\n- git log\n  - git log：显示 commit 历史\n  - git log --stat：显示 commit 历史，以及每次 commit 发生变更的文件\n  - git log -p [files]：显示指定文件的每次 commit 的 diff\n  - git log -[number] --pretty --oneline：显示最近 number 次的 log\n- git show\n  - git show [commit_id]：显示指定 commit_id 的 diff\n  - git show [commit_id][file]：显示指定 commit_id 下指定文件的 diff\n\n### 分支\n\n- git branch\n  - git branch：显示本地分支列表\n  - git branch -r：显示远程分支列表\n  - git branch -a：显示本地分支列表+远程分支列表\n  - git branch [branch_name]：新建分支，不切换分支\n  - git branch [branch_name][commit_id]：新建分支，并指向指定 commit_id\n  - git branch -d [branch_name]：删除分支\n- git checkout\n  - git checkout [branch_name]：切换分支\n  - git checkout -b [branch_name]：新建分支，并切换到该分支\n  - git checkout -：切换到上一次所在分支\n- git cherry-pick\n  - git cherry-pick [commit_id]：将其他分支的 commit 提交到当前分支\n- git merge\n  - git merge [branch_name]：合并指定分支到当前分支\n\n### 远程同步\n\n- git pull\n  - git pull [remote][branch_name]：拉取远程仓库的指定分支的代码与当前分支合并\n- git push\n  - git push origin [branch_name]：提交当前分支与远程指定分支合并\n  - git push origin :[branch_name]：删除远程分支\n\n> 远程仓库（即`remote`）名一般就是 `origin`\n>\n> 文件(图片除外)操作请尽量使用 linux 命令\n\n### merge_requests\n\n- 当项目参与者比较多，或者有安全性或者别的不想让参与者直接提交代码的时候，可以采用 `merge_requests` 模式。\n- 可以进行 `code review`\n- 这是一种比较推荐的 git 使用方式，具体使用方式请自行百度，然后找个人一起练习一下就能轻松掌握~\n\n## 参考资料\n\n- [Git 维基百科](https://zh.wikipedia.org/wiki/Git)\n- [Git 百度百科](http://baike.baidu.com/item/GIT/12647237)\n- [Git Pro](https://git-scm.com/book/zh/v2)\n- [Git 常用命令清单 阮一峰](http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html)\n"
  },
  "tool/CodeGuide": {
    "title": "代码规范",
    "content": "# HTML\n\n## 语法\n\n- 使用 4 个空格代替缩进\n- 嵌套的节点应该缩进\n- 属性值用双引号\n- 标签名全部小写\n- 属性名全小写，分隔符为-\n- 自定义属性全部 data-\\*\n- boolean 属性指不要声明属性值\n\n## 基本结构\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <title>Document</title>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\" />\n  </head>\n  <body></body>\n</html>\n```\n\n## 标签嵌套规范\n\n- 内联元素不能嵌套块元素\n- p, dt, h1 不能嵌套块元素\n- 块元素与块元素平级、内联元素与内联元素平级\n\n## 属性顺序(荐)\n\n- id、class、name、data-\\*\n- src、for、type、href、value、max-length、pattern\n- placeholder、title、alt\n- required、readonly、disabled\n\n## 推荐\n\n- 自闭合标签结尾不加/\n\n# CSS\n\n## 语法\n\n- 使用 4 个空格代替缩进\n- 每个属性声明独占一行\n- 选择器嵌套不要超过 3 层\n- 注释独占一行\n- 分组选择器需换行\n- 嵌套需换行\n- 每个属性声明末尾都要加分号\n- 全部双引号\n- 复合属性尽量简写\n\n> 常用复合属性: margin padding font background transition animation\n\n## 空格\n\n- 属性值前\n- 选择器'>', '+', '~'前后\n- '{'前\n- !important '!'前\n- 属性值中的','后\n- 注释分隔符前后\n\n## 命名\n\n- 类名使用小写字母，以中划线分隔（参考 Bootstrap）\n- id 采用驼峰式命名\n\n## 顺序(荐)\n\n- 可见性(display, visibilty, overflow)\n- 浮动(float, clear)\n- 定位(position, z-index, t-r-b-l)\n- 盒模型(width, min-width, max-width, margin, padding, border, content)\n- 字体(font, line-height)\n- 颜色、背景色(color, background)\n- 其他(transition, transform, outline, box-shadow)\n\n## 推荐\n\n- 不建议使用类选择器\n- 样式里面不要出现 id\n- 尽量不用 important\n- 尽量少用'\\*'选择器\n- zIndex 规范: 100, 101, ...\n- 不要有空的规则\n- 元素选择器小写\n- 去掉小数点前面的 0\n- 属性值'0'后面不要加单位\n- 标准属性写在厂商前缀属性后面\n- 用 border: 0; 代替 border: none;\n\n# JS\n\n## 语法\n\n- 使用 4 个空格代替缩进\n- 一行一条语句\n- 语句末尾加分号\n- 函数参数之间的逗号后加空格\n- 用'===', '!=='代替'==', '!='\n- 同步模块的 require import 都放在最前面\n- 尽量改变 className 而不是操作 style\n- 将要用于 js 操作的元素加 className act 驼峰(eg: actSubmit)\n- 注释独占一行\n- 注释采用 DocBlockr 风格\n\n> Reference [usejsdoc](http://usejsdoc.org) [JSDoc Guide](http://yuri4ever.github.io/jsdoc)\n\n```js\n// 单行注释\n\n/**\n * 多行注释\n * 多行注释\n */\n```\n\n## 换行 空格\n\n- 运算符与操作值之间加空格\n\n```js\n// []\nvar a = [1, 2, 3]\n// {}\nvar a = {\n  a: 1,\n  b: 2\n}\n// ()\nvar a = (1 + 2) * 3\n// function\nfunction a() {}\n// 二元运算符\nx++\n++x\n// 三目运算符\nvar x = a > b ? c : d\n// if else while catch finally switch case try catch\nif (a > b) {\n} else if (c > d) {\n} else {\n}\n// for while\nfor (var i = 0; i < 1; i++) {}\n```\n\n## 引号\n\n> 最外层使用单引号, 内层使用双引号\n\n## 变量命名\n\n- 标准变量采用驼峰式命名\n- 常量全大写, 用下划线连接\n- 构造函数, 首字母大写\n- jquery 对象以'\\$'开头命名\n\n## 变量声明\n\n- 一个函数作用域中所有的变量声明尽量提到函数首部\n- 一个 var, 一个变量\n\n## 数组、对象\n\n- 对象的属性名不要加引号\n- 对象多个属性需换行\n- 对象不要尾逗号\n- 数组不要写空位\n\n## 推荐\n\n- 每个 js 文件头部都应该有个注释(README)\n- 每个 js 模块应该分配一个 id(命名空间)\n- 编辑器开启 word wrap\n- css 状态名统一化: active, current, disabled, selected, checked (反义加 un)\n- 不要用关键字作为对象的属性名\n- 不要给内置对象的原型添加属性或方法\n- 使用 window.xxx 显式定义全局变量\n- 变量声明和函数声明手动提升\n- for-in 里一定要有 hasOwnProperty 的判断\n- 不要重复声明变量\n- 不要使用 with\n- 不要使用 eval\n- 行尾不要有空白字符(编辑器设置)\n"
  },
  "tool/Terminal": {
    "title": "Terminal",
    "content": "# 快捷键\n\n- ctrl+a 行首\n- ctrl+e 行尾\n- ctrl+c 终止\n- ctrl+l 清屏\n- ctrl+b 向前移一位\n- ctrl+f 向后移一位\n- ctrl+d 向后删除一位\n- ctrl+h 向前删除一位\n- ctrl+k 删除至行尾\n- ctrl+u 删除至行首\n- ctrl+w 删除至词首\n- ctrl+p 上一条命令\n- ctrl+n 下一条命令\n"
  },
  "tool/SQL": {
    "title": "SQL",
    "content": "# DDL\n\n- CREATE DATABASE - 创建新数据库\n- ALTER DATABASE - 修改数据库\n- CREATE TABLE - 创建新表\n- ALTER TABLE - 变更（改变）数据库表\n- DROP TABLE - 删除表\n- CREATE INDEX - 创建索引（搜索键）\n- DROP INDEX - 删除索引\n\n# DML\n\n- SELECT - 从数据库表中获取数据\n- UPDATE - 更新数据库表中的数据\n- DELETE - 从数据库表中删除数据\n- INSERT INTO - 向数据库表中插入数据\n\n---\n\n# SELECT\n\n- SELECT 列名 FROM 表名\n- SELECT 列 1,列 2 FROM 表名\n- SELECT \\* FROM 表名\n\n# WHERE\n\n- SELECT 列名 FROM 表名 WHERE 列 运算符 值\n\n# 运算符\n\n> =、<>、>、<、>=、<=、BETWEEN、LIKE、AND、OR\n\n# ORDER BY\n\n> ORDER BY 列名 [ASC、DESC]\n\n# INSERT INTO\n\n- INSERT INTO 表名 VALUES (值 1, 值 2,....)\n- INSERT INTO 表名 (列 1, 列 2,...) VALUES (值 1, 值 2,....)\n\n# UPDATE\n\n- UPDATE 表名 SET 列名=新值\n- UPDATE 表名 SET 列名=新值 WHERE 列名=值\n- UPDATE 表名 SET 列名 1=值 1,列名=值 2 WHERE 列名=值\n\n# DELETE\n\n- DELETE FROM 表名 WHERE 列名=值\n- DELETE FROM 表名\n- DELETE \\* FROM 表名\n"
  },
  "tool/Mongodb": {
    "title": "Mongodb",
    "content": "# Introduce\n\n- [官网](https://www.mongodb.com)\n- [下载](https://www.mongodb.com/download-center)\n- [GUI - robomongo](https://robomongo.org)\n\n# Install\n\n- brew update\n- brew install mongodb\n- export PATH=`<mongodb-install-directory>`/bin:\\$PATH\n  > export PATH=/usr/local/mongodb/bin:\\$PATH\n- mkdir -p /data/db\n- mongod --dbpath `<path to data directory>`\n- [Referrence](https://docs.mongodb.com/getting-started/shell/tutorial/install-mongodb-on-os-x)\n\n# Concept\n\n| SQL         | MongoDB     | explain                                |\n| ----------- | ----------- | -------------------------------------- |\n| database    | database    | 数据库                                 |\n| table       | collection  | 数据库表/集合                          |\n| row         | document    | 数据记录行/文档                        |\n| column      | field       | 数据字段/域                            |\n| index       | index       | 索引                                   |\n| table joins |             | 表连接,MongoDB 不支持                  |\n| primary key | primary key | 主键,MongoDB 自动将\\_id 字段设置为主键 |\n\n| RDBMS  | MongoDB                            |\n| ------ | ---------------------------------- |\n| 数据库 | 数据库                             |\n| 表格   | 集合                               |\n| 行     | 文档                               |\n| 列     | 字段                               |\n| 表联合 | 嵌入文档                           |\n| 主键   | 主键 (MongoDB 提供了 key 为 \\_id ) |\n\n# Shell\n\n```sh\nif 设置了环境变量\n  mongo\nelse\n  cd `<mongodb-install-directory>`/bin\n  ./mongo\n```\n\n```text\n# 显示当前数据库名\ndb\n\n# 显示所有数据库列表\nshow dbs\n\n# 创建/切换数据库\nuse db_name\n\n# 文档\ndb.collection_name\ndb.collection_name.find()\ndb.collection_name.findOne()\ndb.collection_name.insert(document)\ndb.collection_name.save(<document>, {writeConcern: <document>})\ndb.collection_name.update(<query>, <update>, {upsert: <boolean>, multi: <boolean>, writeConcern: <document>})\ndb.collection_name.remove(<query>, <justOne>)\n\n# 删除当前数据库\ndb.dropDatabase()\n\n# 删除集合\ndb.collection_name.drop()\n```\n\n# MongoDB Package Components\n\n## mongod\n\n```sh\n--help, -h\n--version\n--verbose, -v\n--config <filename>, -f <filename>\n--quiet\n--port <port> Default: 27017\n--bind_ip <ip address>\n--logpath <path>\n--logappend\n--logRotate <string> Default: rename\n--timeStampFormat <string> Default: iso8601-local   ctime | iso8601-utc | iso8601-local\n--syslog\n--syslogFacility <string> Default: user\n--traceExceptions\n--pidfilepath <path>\n--keyFile <file>\n--setParameter <options>\n--nounixsocket\n--unixSocketPrefix <path> Default: /tmp\n--filePermissions <path> Default: 0700\n--fork\n--auth\n--noauth\n--transitionToAuth\n--jsonp\n--profile <level> Default: 0 0 | 1 | 2\n--cpu\n```\n\n## mongoimport\n\n> mongoexport --db `db_name` --collection `collection_name` --out `data.json`\n\n## mongoexport\n\n### json\n\n> mongoexport --db `db_name` --collection `collection_name` --out `data.json`\n\n### csv\n\n> mongoexport --db `db_name` --collection `collection_name` --type=csv --fields `field1,field2` --out `data.csv`\n"
  },
  "tool/Smarty": {
    "title": "Smarty",
    "content": "# 注释\n\n```php\n{*comment*}\n```\n\n# 变量\n\n```php\n{$name='shuoshubao'}\n{assign var=\"name\" value=\"shuoshubao\"}\n```\n\n# 遍历\n\n```php\n{foreach $arr as $val}\n{foreach $arr as $key => $val}\n{foreach from=$arr item=v}\n{foreach from=$arr item=v key=k}\n```\n\n# 重复\n\n```php\n{for $i=1 to 5}\n```\n"
  },
  "awesome/React": {
    "title": "React 生态",
    "content": "# 资源\n\n- [中文社区](http://react-china.org)\n\n## 书籍\n\n- [React 技术揭秘](https://github.com/BetaSu/just-react) - [@卡颂] 一本自顶向下的 React 源码分析书。 ![](https://img.shields.io/github/stars/BetaSu/just-react.svg?style=social&label=Star)\n\n## 小册\n\n- [React 进阶实践指南](https://juejin.cn/book/6945998773818490884) - [@我不是外星人](https://juejin.cn/book/6945998773818490884) 彻底弄懂 React 基础和高阶用法，结合实践 Demo，告别技术瓶颈期，实现进阶~\n- [React 实战：设计模式和最佳实践](https://juejin.cn/book/6844733754326401038) - [@程墨](https://juejin.cn/user/2400989094090894) 深入了解 React 应用中的设计模式，总结业界验证的最佳实践，更进一步，了解 React 未来新功能 Suspense 和 Hooks。\n- [React Hooks 与 Immutable 数据流实战](https://juejin.cn/book/6844733816460804104) - [@神三元](https://juejin.cn/user/430664257382462) 以实战为线索，逐步深入 React 开发各个环节，掌握前端常用性能体验优化思路，打造完整前端工作流，提升工程化编码能力和思维能力。\n\n# 工具\n\n## 路由\n\n- [react-router](https://github.com/ReactTraining/react-router) - React 的声明式路由。 ![](https://img.shields.io/github/stars/ReactTraining/react-router.svg?style=social&label=Star)\n\n## Hooks\n\n- [react-use](https://github.com/streamich/react-use) - React Hooks. ![](https://img.shields.io/github/stars/streamich/react-use.svg?style=social&label=Star)\n- [ahooks](https://github.com/alibaba/hooks) - 专门针对企业应用程序的 React Hook 集合。 ![](https://img.shields.io/github/stars/alibaba/hooks.svg?style=social&label=Star)\n- [beautiful-react-hooks](https://github.com/antonioru/beautiful-react-hooks) - 用于加速组件和开发自定义 Hooks 的 Hooks 集合。 ![](https://img.shields.io/github/stars/antonioru/beautiful-react-hooks.svg?style=social&label=Star)\n\n## 状态管理\n\n- [redux](https://github.com/reduxjs/redux) - 用于 JavaScript 应用程序的可预测状态容器。 ![](https://img.shields.io/github/stars/reduxjs/redux.svg?style=social&label=Star)\n- [mobx](https://github.com/mobxjs/mobx) - 简单、可扩展的状态管理。 ![](https://img.shields.io/github/stars/mobxjs/mobx.svg?style=social&label=Star)\n\n## i18n\n\n- [react-intl](https://github.com/yahoo/react-intl) - React 应用国际化。 ![](https://img.shields.io/github/stars/yahoo/react-intl.svg?style=social&label=Star)\n- [react-i18next](https://github.com/i18next/react-i18next) - 使用 i18next 的 React 国际化。 ![](https://img.shields.io/github/stars/i18next/react-i18next.svg?style=social&label=Star)\n\n# UI 框架\n\n- [ant-design](https://github.com/ant-design/ant-design) - 一套企业级 UI 设计语言和 React 组件库。 ![](https://img.shields.io/github/stars/ant-design/ant-design.svg?style=social&label=Star)\n- [material-ui](https://github.com/mui-org/material-ui) - 一套 React 组件，以实现更快、更轻松的 Web 开发。 ![](https://img.shields.io/github/stars/mui-org/material-ui.svg?style=social&label=Star)\n- [chakra-ui](https://github.com/chakra-ui/chakra-ui) - 用于 React 应用程序的简单、模块化和可访问性的 UI 组件。 ![](https://img.shields.io/github/stars/chakra-ui/chakra-ui.svg?style=social&label=Star)\n- [semi-design](https://github.com/DouyinFE/semi-design) - 抖音前端团队出品现代、全面、灵活的设计系统和 UI 库。 快速搭建美观的 React 应用。 ![](https://img.shields.io/github/stars/DouyinFE/semi-design.svg?style=social&label=Star)\n\n## 解决方案\n\n- [ant-design-pro](https://github.com/ant-design/ant-design-pro) - 一个开箱即用企业应用程序 UI 解决方案。An out-of-box UI solution for enterprise applications as a React boilerplate. ![](https://img.shields.io/github/stars/ant-design/ant-design-pro.svg?style=social&label=Star)\n- [react-admin](https://github.com/marmelab/react-admin) - 一个前端框架，用于在 REST/GraphQL API 之上构建在浏览器中运行的 B2B 应用程序，使用 ES6、React 和 Material Design。 ![](https://img.shields.io/github/stars/marmelab/react-admin.svg?style=social&label=Star)\n\n# 脚手架\n\n- [create-react-app](https://github.com/facebook/create-react-app) - 无需构建配置即可创建 React 应用程序。 ![](https://img.shields.io/github/stars/facebook/create-react-app.svg?style=social&label=Star)\n- [Vite](https://vitejs.dev/) - 下一代的前端工具链。 ![](https://img.shields.io/github/stars/vitejs/vite.svg?style=social&label=Star)\n\n# UI 组件\n\n## 拾色器\n\n- [react-color](https://www.npmjs.com/package/react-color)\n- [@uiw/react-color](https://www.npmjs.com/package/@uiw/react-color)\n- [react-colorful](https://github.com/omgovich/react-colorful) - 极小的(2,5 KB)、零依赖、快速和可访问的颜色选择器组件。 ![](https://img.shields.io/github/stars/omgovich/react-colorful.svg?style=social&label=Star)\n\n## 拖放\n\n- [react-beautiful-dnd](https://github.com/atlassian/react-beautiful-dnd) - 漂亮且易于使用的 React 列表拖拽。 ![](https://img.shields.io/github/stars/atlassian/react-beautiful-dnd.svg?style=social&label=Star)\n- [react-dnd](https://github.com/gaearon/react-dnd) - 拖拽库 ![](https://img.shields.io/github/stars/gaearon/react-dnd.svg?style=social&label=Star)\n- [react-dropzone](https://github.com/okonet/react-dropzone) - 简单 HTML5 拖放区。 ![](https://img.shields.io/github/stars/okonet/react-dropzone.svg?style=social&label=Star)\n- [react-draggable](https://github.com/mzabriskie/react-draggable) - React 可拖动组件。 ![](https://img.shields.io/github/stars/mzabriskie/react-draggable.svg?style=social&label=Star)\n\n## 缩放\n\n- [react-resizable-and-movable](https://github.com/bokuweb/react-resizable-and-movable) - 可缩放和可拖动组件。 ![](https://img.shields.io/github/stars/bokuweb/react-resizable-and-movable.svg?style=social&label=Star)\n- [react-resizable](https://github.com/strml/react-resizable) -一个简单可缩放的组件。 ![](https://img.shields.io/github/stars/strml/react-resizable.svg?style=social&label=Star)\n\n## 排序\n\n#### 可排序列表\n\n- [sortablejs](https://github.com/SortableJS/Sortable) - 可通过拖放排序的列表。. ![](https://img.shields.io/github/stars/SortableJS/Sortable.svg?style=social&label=Star)\n- [react-sortable](https://github.com/danielstocks/react-sortable) - 可排序列表组件。 ![](https://img.shields.io/github/stars/danielstocks/react-sortable.svg?style=social&label=Star)\n\n# Reference\n\n- [https://github.com/huaize2020/awesome-react](https://github.com/huaize2020/awesome-react)\n- [https://github.com/enaqx/awesome-react](https://github.com/enaqx/awesome-react)\n- [https://awesomejs.dev/for/react](https://awesomejs.dev/for/react)\n- [https://asmcn.icopy.site/awesome/awesome-react](https://asmcn.icopy.site/awesome/awesome-react)\n"
  },
  "awesome/Docs": {
    "title": "文档",
    "content": "- [dumi](https://d.umijs.org)\n- [vuepress](https://vuepress.vuejs.org)\n- [storybook](https://storybook.js.org)\n- [gitbook](https://gitbook.com)\n- [docz](https://www.docz.site)\n- [mdxjs](https://www.mdxjs.cn)\n- [docsify](https://docsify.js.org)\n- [tsdoc](https://tsdoc.org)\n- [react-styleguidist](https://react-styleguidist.js.org)\n- [jsdoc](https://jsdoc.app)\n- [dox](https://github.com/tj/dox)\n- [hexo](https://hexo.io)\n- [jekyll](https://jekyllrb.com)\n- [gatsby](https://www.gatsbyjs.com)\n- [ydoc](https://hellosean1025.github.io/ydoc)\n"
  },
  "awesome/Playground": {
    "title": "Playground",
    "content": "- [runkit](https://runkit.com)\n- [codesandbox](https://codesandbox.io)\n- [codepen](https://codepen.io)\n- [jsfiddle](https://jsfiddle.net)\n- [stackblitz](https://stackblitz.com)\n"
  },
  "awesome/Editor": {
    "title": "编辑器",
    "content": "- [monaco-editor](https://microsoft.github.io/monaco-editor/)\n- [slate.js](https://www.slatejs.org/)\n- [Draft.js](https://draftjs.org/)\n- [codemirror](https://codemirror.net/)\n- [quill](https://quilljs.com/)\n- [ProseMirror](https://prosemirror.net/)\n- [Editor.js](https://editorjs.io/)\n"
  },
  "awesome/Github": {
    "title": "Github",
    "content": "# GitHub Pages\n\n[GitHub Pages](https://pages.github.com)\n\n> Websites for you and your projects.\n\n# GFM\n\n> GitHub Flavored Markdown\n\n- [GFM: GitHub Flavored Markdown](https://github.github.com/gfm)\n- [basic writing and formatting syntax](https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax)\n- [working with advanced formatting](https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting)\n- [math support in markdown](https://github.blog/2022-05-19-math-support-in-markdown)\n\n# GitHub Desktop\n\n[GitHub Desktop](https://desktop.github.com)\n\n> Simplicity and power in a beautiful Git GUI. A free Git client for Windows and Mac. 类似 Sourcetree.\n\n> With GitHub Desktop, you can interact with GitHub using a GUI instead of the command line or a web browser. You can use GitHub Desktop to complete most Git commands from your desktop, such as pushing to, pulling from, and cloning remote repositories, attributing commits, and creating pull requests, with visual confirmation of changes.\n\n# Github Gist\n\n[Github Gist](https://gist.github.com)\n\n> Instantly share code, notes, and snippets.\n\n# GitHub Docs\n\n[GitHub Docs](https://docs.github.com)\n\n> Help for wherever you are on your GitHub journey.\n\n# 按钮\n\n## badges\n\n[https://naereen.github.io/badges](https://naereen.github.io/badges)\n\n[https://img.shields.io](https://img.shields.io)\n\n> List of Badges, in Markdown\n\n示例:\n\n- [![GitHub stars](https://img.shields.io/github/stars/shuoshubao/nbfe.svg?style=social&label=Star&maxAge=2592000)](https://GitHub.com/shuoshubao/nbfe/stargazers)\n\n支持的清单:\n\n- Generic\n- Useful\n  - Maintained?\n  - Website up/down\n  - Operating system\n- Feedback\n  - _\"Ask me anything\"_ in English\n  - _\"Demandez moi n'importe quoi\"_ in French\n- Python related\n  - Jupyter Notebook\n  - Google Collab\n  - Binder\n- Go related\n- Rust related\n- Markdown related\n- LaTeX related\n  - PyPI downloads\n  - PyPI version\n  - PyPI license\n  - PyPI format\n  - PyPI python versions\n  - PyPI implementation\n  - PyPI status\n- JavaScript related\n  - JSDelivr downloads\n- GNU Bash related\n- Microsoft Visual Studio Code related\n- Read the Docs status\n- GitHub related\n  - GitHub license\n  - GitHub versions/tags/commits\n  - GitHub downloads\n  - GitHub forks\n  - GitHub stars\n  - GitHub Stargazers over time\n  - GitHub watchers\n  - GitHub followers\n  - GitHub contributors\n  - GitHub issues\n  - GitHub Pull Requests\n  - GitHub Make a Pull Requests\n  - GitHub file size\n  - GitHub version\n  - GitHub hits\n  - GitHub Profile\n  - GitHub Stars Sparklines\n- Bitbucket related\n  - Bitbucket issues\n  - Bitbucket Watchers\n  - Bitbucket Fork\n  - Bitbucket Follow\n- PackageControl related\n- Google Analytics\n- Licenses\n  - MIT License\n  - GPLv3 License\n  - Unlicense\n  - Creative Commons Licenses\n- Simple Icons\n- Open-Source\n- Meta badges ?!\n- DOI and Zenodo\n- DOI Citations\n- Discord\n- Jetbrains\n- Say thanks\n\n## ghbtns\n\n[GitHub buttons](https://ghbtns.com)\n\nGitHub 仓库的 star、fork、sponsor 和 follow 按钮展示, 也可展示数量, 还可跳转到对应的 Github 页面.\n\n**通过 iframe 嵌入**\n\n示例\n\n```html\n<iframe\n  src=\"https://ghbtns.com/github-btn.html?user=shuoshubao&repo=shuoshubao.github.io&type=star&count=true&size=large&v=2\"\n  frameborder=\"0\"\n  scrolling=\"0\"\n  width=\"170\"\n  height=\"30\"\n  title=\"GitHub\"\n></iframe>\n```\n\n- <iframe src=\"https://ghbtns.com/github-btn.html?user=shuoshubao&repo=shuoshubao.github.io&type=star&count=true&size=large&v=2\" frameborder=\"0\" scrolling=\"0\" width=\"170\" height=\"30\" title=\"GitHub\"></iframe>\n\n## GitHub buttons\n\n[GitHub buttons](https://buttons.github.io)\n\n提供配置化界面, 生产按钮的嵌入式代码\n\n**通过 iframe 嵌入**\n\n```html\n<!-- Place this tag where you want the button to render. -->\n<a\n  class=\"github-button\"\n  href=\"https://github.com/shuoshubao/shuoshubao.github.io\"\n  data-show-count=\"true\"\n  aria-label=\"Star shuoshubao/shuoshubao.github.io on GitHub\"\n  >Star</a\n>\n\n<!-- Place this tag in your head or just before your close body tag. -->\n<script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n```\n"
  },
  "awesome/Test": {
    "title": "单元测试",
    "content": "# Ava\n\n[Ava](https://github.com/avajs/ava)\n\n# Cypress\n\n[Cypress](https://www.cypress.io)\n\n# Mocha\n\n[Mocha](https://mochajs.org)\n\n# Jest\n\n[Jest](https://jestjs.io)\n\n# Karma\n\n[Karma](http://karma-runner.github.io)\n\n# Tape\n\n[Tape](https://github.com/ljharb/tape)\n\n# Jasmine\n\n[Jasmine](https://jasmine.github.io)\n\n# Playwright\n\n[Playwright](https://playwright.dev)\n\n# Nightwatch\n\n[Nightwatch](https://nightwatchjs.org)\n\n# Istanbul\n\n[Istanbul](https://istanbul.js.org)\n\n# Codecov\n\n[Codecov](https://about.codecov.io)\n\n# UVU\n\n[UVU](https://github.com/lukeed/uvu)\n"
  },
  "awesome/Npm": {
    "title": "Npm",
    "content": "# npm init\n\n> touch \\~/.npm-init.js\n\n```js\nmodule.exports = {\n  name: 'demo',\n  version: '1.0.0'\n}\n```\n\n> npm init -y\n\n# npm-stat.com\n\n[https://npm-stat.com](https://npm-stat.com)\n\n以图表的形式为 作者 或者 某个 npm 包, 展示其下载统计数据\n\n## stat 示例\n\n- [author=shuoshubao](https://npm-stat.com/charts.html?author=shuoshubao)\n- [@nbfe/tools](https://npm-stat.com/charts.html?package=%40nbfe%2Ftools&from=2022-01-15&to=2023-01-15)\n\n# npm.anvaka.com\n\n[https://npm.anvaka.com](https://npm.anvaka.com)\n\n可视化的展示 npm 包的依赖关系图\n\n# npmtrends.com\n\n[https://npmtrends.com](https://npmtrends.com)\n\n比较一段时间内的 npm 包下载数量, 也可查询单个 npm 包\n\n# npm badges\n\n[https://nodei.co](https://nodei.co)\n"
  },
  "awesome/Table": {
    "title": "表格",
    "content": "- [react-data-grid](https://github.com/adazzle/react-data-grid)\n- [AG Grid](https://github.com/ag-grid/ag-grid)\n"
  },
  "awesome/Form": {
    "title": "表单",
    "content": "- [formik](https://github.com/jaredpalmer/formik) - React 中开发表单，从此没有眼泪。 ![](https://img.shields.io/github/stars/jaredpalmer/formik.svg?style=social&label=Star)\n- [formily](https://github.com/alibaba/formily) - 高性能、高扩展、TypeScript 友好的表单解决方案。 ![](https://img.shields.io/github/stars/alibaba/formily.svg?style=social&label=Star)\n- [react-hook-form](https://github.com/react-hook-form/react-hook-form) - 用于表单校验的不麻烦的 React hooks。 ![](https://img.shields.io/github/stars/react-hook-form/react-hook-form.svg?style=social&label=Star)\n"
  },
  "awesome/MarkdownIt": {
    "title": "markdown-it",
    "content": "# markdown-it-custom-block\n\n```js\nimport MarkdownIt from 'markdown-it/dist/markdown-it'\nimport MarkdownItCustomBlock from 'markdown-it-custom-block'\n\nconst md = MarkdownIt()\n\nmd.use(MarkdownItCustomBlock, {\n  img(raw) {\n    const [index, alt, width, url] = raw.split('#')\n    return `<figure>\n      <img width='${width}' src=\"${url}\" />\n      <figcaption>${alt}</figcaption>\n    </figure>`\n  },\n  example(arg) {\n    return `<example-${arg} />`\n  },\n  video(url) {\n    return `<video controls>\n      <source src=\"${url}\" type=\"video/mp4\" />\n    </video>`\n  }\n})\n```\n\n# markdown-it-container\n\n```md\n:::success 提示文案\n\nSuccess Text\n\n:::\n\n:::info 提示文案\n\nInfo Text\n\n:::\n\n:::warning 提示文案\n\nWarning Text\n\n:::\n\n:::error 提示文案\n\nError Text\n\n:::\n\n:::error\n\n没有标题, 默认使用 type\n\n:::\n```\n\n:::success 提示文案\n\nSuccess Text\n\n:::\n\n:::info 提示文案\n\nInfo Text\n\n:::\n\n:::warning 提示文案\n\nWarning Text\n\n:::\n\n:::error 提示文案\n\nError Text\n\n:::\n\n:::error\n\n没有标题, 默认使用 type\n\n:::\n\n# markdown-it-emoji\n\n- :tada:\n- :100:\n\n# Packages\n\n- markdown-it-container\n- markdown-it-task-lists\n- markdown-it-anchor\n- markdown-it-attrs\n- markdown-it-link-attributes\n- markdown-it-custom-block\n- markdown-it-emoji\n- linkify-it\n- markdown-it-footnote\n- markdown-it-cjk-breaks\n- markdown-it-for-inline\n- markdown-it-sup\n- markdown-it-sub\n- markdown-it-ins\n- markdown-it-mark\n- markdown-it-deflist\n\n# Referrence\n\n- https://github.com/markdown-it/markdown-it\n- https://markdown-it.github.io/markdown-it\n- https://markdown-it.github.io\n"
  },
  "assemble/code-review-share": {
    "title": "前端code-review经验总结",
    "content": "# 背景\n\n最近一段时间，一直在跟进团队里同学发起的 code-review，针对每个 review 都提了不少可以优化的建议。在这个过程中发现一些在每次 review 基本都会出现的通用问题，现整理成文档的形式供大家阅读，希望大家能从中有所收获，从而在各自的业务项目中能提高代码的**可读性**和可维护性。\n\n可读性差的代码虽然很多，但是究其原因，还是可以进行以下简单的分类：\n\n- js-api 的使用\n- js 语法相关\n- jsx 相关的问题\n- 工具库的使用\n- js 设计的糟粕\n\n# js-api 的使用\n\n## indexOf 与 includes\n\n**bad-code**\n\n```js\ncolums.indexOf(item) === -1 ? colums.concat(item) : colums;\n\nif (piLiangChuLiDaiBanDict.indexOf(taskKey) !== -1) {}\n\nconst isNewListPage = newListPageCitys.indexOf(window._GLOBAL_DATA_.CITY) > -1;\n\nif (`${address[3]}`.indexOf('层') < 0) {}\n\nif (inComplexRole.indexOf(item.name) > 0) {}\n\n<div disabled={[2, 3].indexOf(contractStatus) >= 0} />\n\nif (/税/.test(qiItem.NAME) {}\n```\n\n**good-code**\n\n```js\n;<div disabled={[2, 3].includes(contractStatus)} />\n\nif (qiItem.NAME.includes('税')) {\n}\n```\n\n> 在同一个项目中, indexOf 的所有用法基本齐全了~ 其实做的事情就是判断数组或字符串是否包含子项。而这个功能早就在 es6 和 es7 中有标准的 api 来实现，即 **String.prototype.includes** 和 **Array.prototype.includes**\n\nindexOf 的本意是返回子项在数组或字符串中第一次出现的索引值, 而 -1 只是一个特殊值，表示不存在。而 includes 则直接返回一个布尔值，表示是否包含子项。\n\n## find 和 filter\n\n**bad-code**\n\n```js\nconst { label } = (reallyOptions || []).filter(item => item.value == val)[0]\n```\n\n**good-code**\n\n```js\nconst { label } = (reallyOptions || []).find(item => item.value == val)\n```\n\n当你需要的是过滤的所有项时，应使用 filter, 而 find 就是 filter[0] 的快捷方式。当然两者还有其他区别，这里不展开讲。\n\n## map 和 forEach\n\n**bad-code**\n\n```js\nconst options = []\ndaiban.map(item => {\n  options.push({ value: item, label: item.taskDescription })\n})\n```\n\n**good-code**\n\n```js\nconst options = []\ndaiban.forEach(item => {\n  options.push({ value: item, label: item.taskDescription })\n})\n\n// 当然，这样写才是最好的\nconst options = daiban.map(item => {\n  return { value: item, label: item.taskDescription }\n})\n```\n\nmap 和 forEach 的作用非常相似, 但区别也很明显。当迭代器里的代码有返回值时, 应使用 map, 否则应使用 forEach。\n\nmap 可以理解为 初始值 + forEach + push 的结合体。\n\n# js 语法相关\n\n## 条件语句里写非常长的代码\n\n**bad-code**\n\n```js\nif (\n  this.state.buyer &&\n  this.state.buyer.length &&\n  this.state.seller &&\n  this.state.seller.length &&\n  this.state.participants &&\n  this.state.participants.length\n) {\n  // code\n}\n```\n\n**good-code**\n\n```js\nconst { buyer, seller, participants } = this.state\nconst isValidate = [buyer, seller, participants].every(v => v && v.length)\nif (isValidate) {\n  // code\n}\n```\n\n> 问题: 没有利用解构；大量的重复逻辑，条件语句过长可读性差\n\n> 这种写法其实随处可见，源自于万恶的复制粘贴的习惯。一般来说，使用解构和数组的 some 或者 every 就可以解决问题。\n\n**bad-code**\n\n```js\n!op.noTips && Toast.offline(data.msg || '数据请求异常', 2)\nop.noTips && Toast.hide()\n```\n\n**good-code**\n\n```js\nif (op.noTips) {\n  Toast.hide()\n} else {\n  Toast.offline(data.msg || '数据请求异常', 2)\n}\n```\n\n> 上述代码要表达的意思其实就是 **if** 做的事情，如果都这么写，是否就不需要 **if** 语句了？**&&**、 **||**、 **? :** 是完全可以取代 **if** 的。压缩代码量这种事就交给 webpack terser 这些工具处理吧, 我们要写的是可读性高的代码！\n\n## 三目嵌套三目\n\n**bad-code**\n\n```js\nconst backgroundImageUrl = item.avatar || (item.sex ? (item.sex == 'F' ? Female : Male) : Male)\n```\n\n**good-code**\n\n```js\nconst { avatar, sex } = item\nlet backgroundImageUrl = avatar\nif (!avatar) {\n  if (sex) {\n    backgroundImageUrl = sex == 'F' ? Female : Male\n  } else {\n    backgroundImageUrl = Male\n  }\n}\n```\n\n> 这里明显可以看出, 优化后的代码在体积上显著增加了，请感受下两段代码之间可读性的差异。\n\n# jsx 相关的问题\n\n## 三目与 jsx 语法结合使用\n\n**bad-code**\n\n```js\nconst AllInfo =\n  hasInfo && allMessahe ? (\n    <div className=\"all-info\">\n      <img src={Sigh} alt=\"icon\" />\n      <span>{allMessahe}</span>\n    </div>\n  ) : null\n```\n\n**good-code**\n\n```js\nlet allInfo = null\nif (hasInfo && allMessahe) {\n  allInfo = (\n    <div className=\"all-info\">\n      <img src={Sigh} alt=\"icon\" />\n      <span>{allMessahe}</span>\n    </div>\n  )\n}\n```\n\n**bad-code**\n\n```js\n{\n  appAuditStatus == 1 && message ? (\n    <div styleName=\"messageContainer\">\n      <div styleName=\"iconContainer\">\n        <span>!</span>\n      </div>\n      <div styleName=\"reasonContainer\">\n        <span>不通过：{message}</span>\n      </div>\n    </div>\n  ) : null\n}\n```\n\n**bad-code**\n\n```js\n{\n  appAuditStatus == 1 && message && (\n    <div styleName=\"messageContainer\">\n      <div styleName=\"iconContainer\">\n        <span>!</span>\n      </div>\n      <div styleName=\"reasonContainer\">\n        <span>不通过：{message}</span>\n      </div>\n    </div>\n  )\n}\n```\n\n> 当三目与 jsx 结合使用时，代码整体看起来非常臃肿。建议三目只用于非常简单的逻辑运算，具体来说最好是只有一行代码。\n\n## map 与 jsx 的结合使用\n\n**bad-code**\n\n```js\n{\n  data && data.length\n    ? data.map((item, index) => {\n        return <div>{item}</div>\n      })\n    : null\n}\n\n// 或者这么写\n{\n  data &&\n    data.length &&\n    data.map((item, index) => {\n      return <div>{item}</div>\n    })\n}\n```\n\n**good-code**\n\n```js\n{\n  ;(data || []).map((item, index) => {\n    return <div>{item}</div>\n  })\n}\n```\n\n> 这个 case 在 react 中非常常见，简单的优化即可让代码更简洁，嵌套少一层，在 jsx 结构复杂时效果更明显。\n\n# 工具库的使用\n\n**bad-code**\n\n```js\nthis.props.history.push(\n  `/tradeschedule?businessId=${getUrlParam('businessId')}` +\n    `&eBusinessId=${getUrlParam('eBusinessId')}` +\n    `&ucid=${getUrlParam('ucid')}` +\n    `&roleName=${getUrlParam('roleName')}` +\n    `&docKey=${getUrlParam('docKey')}`,\n  { nodeInfo }\n)\n```\n\n**good-code**\n\n```js\nimport { pick } from 'lodash'\nimport { Util } from '@jiaoyi/tangram'\n\nconst { getAllUrlParam, stringifyUrl } = Util\n\nconst params = pick(getAllUrlParam(), ['businessId', 'eBusinessId', 'ucid', 'roleName', 'docKey'])\n\nthis.props.history.push(stringifyUrl('/tradeschedule', params))\n```\n\n> 字符串拼接参数这种明显属于高频操作，如果团队中没有封装对应的工具函数，写的次数多了也应该想着去封装下，或者给负责工具库的人提需求。\n\n**bad-code**\n\n```js\n<div styleName={['second', second.disabled ? 'disabled' : '', second.using ? 'isUsing' : ''].join(' ')} />\n```\n\n**good-code**\n\n```js\nimport classnames form 'classnames';\n\n<div styleName={classnames('second', { disabled: second.disabled, isUsing: second.using })} />\n```\n\n> 这种 case 在项目中也是非常常见的，做的事情很简单，但需要些冗余的代码。classnames 就是为了解决这个场景的。\n\nlodash, classnames, query-string 等等这些都是非常好用的工具库，在 npm 上都是下载量极高的包，如果还没有用上，是否该反思下自己为什么没有用上。\n\n另外，负责工具库的同学，也应加深对流行度极高的工具包的推广工作，以及团队工具库提供的能力是否足够丰富，工具库的使用情况和覆盖度等问题。\n\n# js 语言设计的糟粕\n\nJavaScript 作为一门在 7 天内设计成的语言，存在许多糟糕的设计。下面列举的是一些代码风格相关的设计，（其实很多语言在设计之初，为了让更多的程序员使用自己的语言，就兼容各种各样的语法习惯，这或许是作者的无奈之举），比如：\n\n- 一条语句，分号是可选的\n- if 后面的花括号可缺省\n- es6 里的箭头函数\n  - 参数的括号\n  - 返回值的简写\n\n这一类型的就不举例具体代码了，相信大家都能从文字上理解。\n\n# 总结\n\n感谢阅读到这里~ 看完后，可以想下自己是否也正在写着这样的代码，项目中是否也有大量的`bad-code`。\n\n以上仅是浓缩版的代码片段，更多内容请移步 wiki 上的总结(仅公司内网可见): [http://wiki.lianjia.com/pages/viewpage.action?pageId=679921171](http://wiki.lianjia.com/pages/viewpage.action?pageId=679921171)\n\n针对此次大幅度的代码优化，我整理了下 bad-code 中反应的一些认知误区：\n\n1. 代码越少，代码就越优雅，代码水平越高\n2. 代码能写在一行就是不能再优化的代码\n3. 代码的写法越生僻，越能体现开发水平高超\n\n写代码，其实说白了就是在做翻译，先将需求用人类的语音描述清楚，再通过 JavaScript 语言将人类语言翻译成浏览器编译器能识别的代码。在实际工作中，是需要和别的翻译一起协同工作，因此我们翻译的语言，不止要机器能识别，自己能看懂，还要其他同事也能看懂。代码的**可维护性**高于一切。\n\n另外，我们要相信开源的力量，相信业界标准的力量。**prettier** 和 **eslint** (以及 airbnb 的各种 eslint 规范)、**sonar** 都是非常成熟的工具，能在代码层面分析出我们的代码存在的各种问题，并给出推荐的写法。\n"
  },
  "assemble/Talk": {
    "title": "深夜杂谈",
    "content": "# 前言\n\n长夜漫漫无心睡眠，来扯会蛋吧。\n\n毕业以来一直做着前端相关的工作，从 2014 年的小菜鸟，到现在 2018 年的老菜鸟，听说一直干一件事五年能做到专家级别，加油吧！一路走了不少弯路，现在也仍在弯路上，分享下一些前端方面的心得体会吧。\n\n# 一些奇怪的观点\n\n## 多\n\n搞技术的大多喜欢看别人写的博客，捡现成的，事半功倍。而写博客的大多喜欢各种参考借鉴学习同行的博客，以讹传讹。一些观点会发现在各种博客中以各自不同的口吻文风传递给广大同行，然后伸手党吃瓜群众多看几篇博客就基本能把这些观点作为一个自己的常识了。\n\n**比如这些观点：**\n\n- '前端技术日新月异'\n- '前端框架层出不穷'\n- '又出了一个框架，学不过来，跟不上'\n- '一入前端深似海'\n- '前端技术学习成本真大'\n\n**注解**\n\n前端也许并没有你想象的那么多技术。前几天写过一篇博客 `JavaScript的历史`，从时间轴可以看到，前端技术一直在更新，每个历史阶段会有对应的主流框架，比如现在年轻点的前端，或许用不上 ExtJs 了，甚至 JQ 都不怎么用了；而这些框架在当时的背景下也是红遍半边天。在 MVC 时代，BackboneJS EmberJS Knockout.js 这些也是顶级巨头般的存在。在模块化时代，RequireJs Seajs 也是火得不要不要的。 UI 框架时代 Bootstrap Semantic-UI 这些同样是神一般的存在。工程化方面历经 bower yeoman grunt gulp fis rollup browserify webpack ..., 应该会的也不多吧然鹅，这些历史框架又会几个？如果就会 jq 和 bootstrap 的话又哪来的勇气去附和上面的观点？框架多？学习成本？\n\n说近的吧，现在各大公司眼花缭乱的 job description 虽然看着五彩缤纷色彩斑斓，但其实仔细看会发现大同小异，共同点炒鸡多，甚至我都怀疑文案都是互相学习抄袭借鉴模仿的。\n\n无非就是时下三大流行框架 A、V、R。（又没有发现和 BAT 很类似，说三大框架大部分时候不包括 V、R，就好像说 BAT 一般就是指的 B，三人行必有一人掉队）。当然还有各自的衍生框架，一般指的是各自对应的技术栈。而对于语言要求无非就是 NODEJS JAVA PHP 至少得会一个。说代码管理基本上已经不提 SVN 了。\n\n说是三大框架，其实有人掉队了，只剩俩了，而这俩又很像（抄不抄袭对我等只管使用的人来说并没啥影响）。学会了一个，另一个很快就能掌握。那还哪那么多框架？学习成本？\n\n## 新\n\n其实这个命题相关的论调和上面的比较像。就说点上面没提到的吧。\n\n**很多博客会这么写道：**\n\n- `xxx` 是 CSS3 中的 **新** 特性\n- `yyy` 是 HTML5 中的 **新** 特性\n- `zzz` 是 ES6 中的 **新** 特性\n\n都 2018 年了，你还觉得这些真的是新东西嘛？你要不看看这些博客的发布时间？如果发布时间比较早，没啥说的，如果这些博客是 2016 2017 年发布的，基本上可以把作者列入菜鸟名单了。说出来你可能不信，CSS3 中很多特性发布时间都超过十年了，惊喜意外不？ HTML5 标准的发布时间是 2014 年 ES6 就是 ES2015 而另一个可怕的事实是：标准落后于现实。意思就是在某个标准正式发布之前，这门技术已经很成熟了，也可以简单理解为标准是根据市场来确定的。然后标准和市场相互影响相辅相成同流合污。我有钱跟你打个 10 块钱的赌，一般觉得 ES6 是新东西的人，ES5 会的也不太多。而 ES5 是 2009 年的事了，那撇开 ES5 ES6 就剩下 ES3 了，而 ES3 是 1999 年的东西了(跨世纪)。\n\n## 为啥\n\n那么为啥会觉得技术又多又新呢？`万事开头难，后面更难`\n\n- maybe 你盲目的听网上说这个技术还不成熟或者吃枣药丸\n- maybe 不知道是不是梁静茹给你的勇气让你觉得这个技术存在兼容性然后就直接不学了\n- maybe 这个技术只有英文网 而对于翻译的中文网你可能还没认真看就觉得翻译水平烂然后心安理得的不学了\n- maybe 你看了下官网的 demo 发现跑不通或者耗时较长 然后就放弃了\n- maybe 你看了下官网的 demo 然后就觉得自己掌握了这门技术\n- maybe 你会告诉自己项目中用不上 团队中没用使用过\n\n## 因果\n\n有一个很微妙但是貌似普遍存在的逻辑： '项目中用不上这个东西，所以我没机会掌握这个东西'。\n\n其实这里存在一个因果错误：不是因为用不上而导致不会，而是因为你不会所以才导致用不上，然后恶性循环了。\n\n你的 leader 不会让你冒风险直接拿真实项目做你练手的项目的，因为这样做的风险是公司的价值损失，而公司随便一个项目的损失(项目延期, 你的延期导致别人的延期或排期重调)都有可能是一个员工一年的血汗钱。相反，只有在你对这门技术足够熟练，能承担不可预期的风险时，才会让你在公司项目中运用这门技术。技能和项目同样也是相辅相成的关系，好的技能会让项目变得可维护，高复用；同时项目会让你遇到更多挑战从而反哺技术成长。\n\n## 项目\n\n你确定技术成长真的强依赖于公司真实项目？\n\n其实作为一个老菜鸟可以告诉(或者说提醒)你，项目做多了没发现都差不多么？切图就不说了，没啥技术含量（别喷，真没啥含量）。\n\n而另一大方向就是后台系统，但细想来无非就是 导航 + 首页 + 面包屑 + 列表 + 详情(三合一：新增, 编辑, 详情)\n\n其中，列表，无非就是 filter + table + paging; filter 无非就是 input select datepicker sug + export + reset\n\ntable 无非是加个详情链接, 或者加个 checkbox 再来个弹窗展示信息\n\n详情中无非就是请求数据, 数据校验数据格式化, 字段映射, 上传下载文件来一发, 再来个多接口顺序处理, 再复杂(或者说麻烦, 繁杂)点就是表单校验了, 还有漏掉的么?\n\n那么项目都是相似的, 那写项目不会无聊么? 并不, 有句话在代码中同样适用: 量变引起质变。\n\n当做的多了，你可以学会项目结构管理，代码拆分，组件抽取，代码优化，代码规范的意义等等。而这些，没做足够多的项目之前，也不大可能真正掌握。其实就是所谓的应用场景。\n\n别急，这个模块还没掰扯完。\n\n既然当你做过一定数量的项目之后，然后又有人告诉你，你今后的职业生涯里要做的项目基本(并不是绝对, 可能换个坑会迎来第二春啥的)都是这些，那你是不是不再需要实际项目来作为新技术的练手项目了？\n\n你完全可以拿之前做过的项目来当做你学一项技能的 Example，从而避免发现看完官网文档，跑了几个 demo，过几天忘得一干二净的尴尬局面。\n\n你可能会说，自己模拟的项目没有真实数据。数据，数据对我们来说其实就是一个 json, 至于后端怎么处理的业务逻辑，其实不必太关心，因为你学技术的时候，数据只是给你打辅助，而你并不需要真实的数据对么？你忘了你的目的是学一项技能而不是做项目么？\n\n不会 mock 数据么？先找老司机帮忙啊，以后你也会的，你眼下是要学会另一项技能的。\n\n我猜一些人(好像说我自己呢)开始觉得 React 难学的原因是因为 Webpack 难配置呢，还是那句话，找老司机先帮你解决下构建工具的问题，而你只需要专注 React 本身，至于 webpack，你有兴趣你以后迟早会的。\n\n举一反三，当你学 webpack 的时候，就不要太关注跟 UI 框架相关的了。再送一个例子吧，你学一项 js 技能的时候，就不要太关注 UI 了，你学习的项目肯定不是给别人看的吧？再说了就咱这审美也做不出多好看的 UI 吧，那还不如不关注 UI 呢对么？\n\n## 标准\n\n写简历的时候，有个大家都会遇到的问题：这项技能我该写了解呢，还是熟练呢，还是精通呢(因为 JD 上要求是这么写的)？\n\n先不说简历了，说下这个衡量标准吧。\n\n虽然我的网站有 80 篇左右的博客量了，也经常发到群里装 B。有一次我发现竟然有人其实只看过我网站的首屏(不是首页)，就告诉我看过我的网站。\n\n这件事引发了我对 `标准` 这个词的小思考。\n\n其实, ReactNative Weex 小程序 这些我都玩过，都有过不止一个 demo, 其实 RN 还参与了实际项目。但我的简历上都没提过这些，因为我觉得我只是玩过，并没有深入了解，甚至我觉得还没入门。\n\n但是，会不会有些人觉得\n\n- 听说过就算了解\n- 看过文档就算入门\n- 跑过 demo 就算熟悉\n- 浅参与过项目就算项目经验, 算精通\n\n或许这就是我每次求职都拿低薪的原因? (我团 HR 不会看到吧？哈哈 🙄) 单从技术成长方面考虑，还是建议提高下标准吧。。\n\n## 书籍\n\n其实技术书籍比较好挑，首先一项技术相关的书籍就那么几本，都买了不就得了(别说没时间，过来人告诉你前端一点都不缺时间，主要看你能不能坚持，又没有兴趣)。\n\n实在想挑，直接去京东或亚马逊按销量排序就行，或者在你加入的微信群里找几个大神问问就知道啥是好书了，博文视点这个出版社的书就别考虑了哈。\n\n另外，建议多买书就别跟我说没钱了，买书花不了多少钱的，你的整个职业生涯能买多少本书以及你的月薪够你买多少本书你心里没点数么？\n\n## 本质\n\n为啥会不自信？会恐惧？会焦虑？会成长慢？ 原因除了你 **穷**，另一个原因就是：**懒**。\n\n因为懒，迟迟不肯开始学，进而导致恐惧，导致焦虑，导致效率低，导致穷。\n\n> 看到这是不是觉得我逻辑开始混乱了，其实我不困得时候逻辑也是乱的，可能我不太适合写汉字多的文章，这篇应该是我写汉字最多的文章了。看到这说明你对我是真爱啊，摸摸大 😘。\n>\n> 文中的第二人称，可以理解为这之前的我，也就是这文章是我的一点内心独白。\n>\n> BY: 硕鼠宝 于 2018-02-10 凌晨 天津海滨机场 KFC\n"
  },
  "assemble/Awesome": {
    "title": "前端资源导航",
    "content": "# JS 框架\n\n- [react](https://facebook.github.io/react)\n- [vuejs](http://vuejs.org.cn)\n- [angularjs](https://angularjs.org)\n- [jquery](http://jquery.com)\n- [zeptojs](http://zeptojs.com)\n- [requirejs](http://requirejs.org)\n- [seajs](http://seajs.org)\n- [knockoutjs](http://knockoutjs.com)\n- [emberjs](http://emberjs.com)\n- [backbonejs](http://backbonejs.org)\n\n# JS 工具库\n\n- [lodash.js](https://lodash.com)\n- [underscore.js](http://underscorejs.org)\n- [lazy.js](http://danieltao.com/lazy.js)\n\n# 自动化测试\n\n- [mocha](http://mochajs.org)\n- [chai](http://chaijs.com)\n- [jasmine](http://jasmine.github.io)\n- [qunit](https://qunitjs.com)\n\n# React\n\n- [react](http://facebook.github.io/react)\n- [react-native](https://facebook.github.io/react-native)\n- [flux](http://facebook.github.io/flux)\n- [redux](http://redux.js.org)\n- [react-cn](http://reactjs.cn)\n- [react-china](http://react-china.org)\n- [weex](http://alibaba.github.io/weex)\n- [immutable.js](https://facebook.github.io/immutable-js)\n- [react-router](https://github.com/ReactTraining/react-router)\n- [redux-thunk](https://github.com/gaearon/redux-thunk)\n\n# UI 框架\n\n- [bootstrap](http://v3.bootcss.com)\n- [material](http://material-ui.com)\n- [foundation](http://foundation.zurb.com)\n- [semantic](http://semantic-ui.com)\n- [uikit](http://getuikit.com)\n- [materialize](http://materializecss.com)\n- [pure](http://purecss.io)\n- [jq-ui](http://jqueryui.com)\n- [goratchet](http://goratchet.com)\n- [amaze-ui](http://amazeui.org)\n- [we-ui](http://weui.github.io/weui)\n- [frozen-ui](http://frozenui.github.io)\n- [ant-design](http://ant.design)\n- [iconfont](http://iconfont.cn)\n- [animate.css](http://daneden.github.io/animate.css)\n\n# 构建工具\n\n- [webpack](http://webpack.github.io)\n- [rollup](https://rollupjs.org)\n- [babel](http://babeljs.io)\n- [browserify](https://browserify.org)\n- [less](https://lesscss.org)\n- [sass](https://sass-lang.com)\n- [stylus](https://stylus-lang.com)\n- [postcss](https://postcss.org)\n- [gulp](https://gulpjs.com)\n- [grunt](https://gruntjs.com)\n- [fis](http://fis.baidu.com)\n\n## new\n\n- [vite](https://vitejs.dev)\n- [esbuild](https://esbuild.github.io)\n- [swc](https://swc.rs)\n- [wmr](https://wmr.dev)\n- [snowpack](https://www.snowpack.dev)\n\n# Grunt / Gulp 插件\n\n- [grunt-contrib-copy](https://www.npmjs.com/package/grunt-contrib-copy)\n- [grunt-contrib-clean](https://www.npmjs.com/package/grunt-contrib-clean)\n- [grunt-contrib-watch](https://www.npmjs.com/package/grunt-contrib-watch)\n- [grunt-contrib-concat](https://www.npmjs.com/package/grunt-contrib-concat)\n- [grunt-contrib-connect](https://www.npmjs.com/package/grunt-contrib-connect)\n- [grunt-contrib-imagemin](https://www.npmjs.com/package/grunt-contrib-imagemin)\n- [grunt-htmlhint](https://www.npmjs.com/package/grunt-htmlhint)\n- [grunt-markdown](https://www.npmjs.com/package/grunt-markdown)\n- [grunt-contrib-csslint](https://www.npmjs.com/package/grunt-contrib-csslint)\n- [grunt-autoprefixer](https://www.npmjs.com/package/grunt-autoprefixer)\n- [grunt-contrib-less](https://www.npmjs.com/package/grunt-contrib-less)\n- [grunt-contrib-sass](https://www.npmjs.com/package/grunt-contrib-sass)\n- [grunt-contrib-jshint](https://www.npmjs.com/package/grunt-contrib-jshint)\n- [grunt-contrib-uglify](https://www.npmjs.com/package/grunt-contrib-uglify)\n\n# 实用工具\n\n- [html](http://tool.lu/html)\n- [css](http://tool.lu/css)\n- [js](http://tool.lu/js)\n- [jshint](http://jshint.com)\n- [json](http://tool.lu/json)\n- [图片压缩](https://tinypng.com)\n- [图片 base64](http://tool.lu/base64image)\n- [图片占位符](http://tool.lu/imageholder)\n- [时间戳](http://tool.lu/timestamp)\n- [PrismJs](http://prismjs.com)\n- [HighlightJs](https://highlightjs.org)\n\n# 学习网站\n\n- [掘金](https://juejin.cn)\n- [阮一峰](http://javascript.ruanyifeng.com)\n- [MDN](https://developer.mozilla.org/zh-CN/docs/Web)\n- [w3cfuns](http://www.w3cfuns.com)\n- [w3cplus](http://www.w3cplus.com)\n- [思否](http://segmentfault.com)\n- [开源中国](http://www.oschina.net)\n- [司徒正美](http://www.cnblogs.com/rubylouvre)\n- [慕课网](http://www.imooc.com)\n\n# Company\n\n- [腾讯](http://www.alloyteam.com)\n- [淘宝](https://fed.taobao.org)\n- [京东](https://aotu.io)\n- [去哪儿](http://ued.qunar.com)\n- [蚂蚁体验科技](https://xtech.antfin.com)\n\n# 用户体验\n\n- [淘宝 UED](http://ued.taobao.org/blog)\n- [百度 MUX](http://mux.baidu.com)\n- [腾讯 isux](http://isux.tencent.com)\n\n# Related\n\n- [ECMA](http://naotu.baidu.com/file/c104990f09f25683b5e9959abea92741?token=3d5cb6dc13c8fb1d)\n- [DOM](http://naotu.baidu.com/file/ba2d1d4614374fc22bbcbccbd0d9def8?token=e0fab1102b584a7e)\n- [BOM](http://naotu.baidu.com/file/56445970f732df2593b8bcd56c05f744?token=44ac11c2809546cc)\n- [JavsScript](http://naotu.baidu.com/file/d852c8647372a1e00577134f94628e71?token=244754c6d4f44f96)\n- [HTML5](http://naotu.baidu.com/file/1d05eeb342c21b3f897d5d8d13904689?token=2c73dd872ca8c708)\n- [Lofter](http://shuoshubao.lofter.com)\n"
  },
  "assemble/About": {
    "title": "关于我",
    "content": "# 简介\n\n- Job: FE\n- Mobile: 16601107956\n- Company: 美团\n- Github: [https://github.com/shuoshubao](https://github.com/shuoshubao)\n- Npm: [https://www.npmjs.com/~shuoshubao](https://www.npmjs.com/~shuoshubao)\n\n# 作品\n\n- [个人博客](https://shuoshubao.github.io)\n- [Webpack 脚手架](https://github.com/shuoshubao/nbfe/tree/master/packages/react-cli)\n- [组件库](https://shuoshubao.github.io/components)\n- [工具库](https://shuoshubao.github.io/tools)\n- [前端工程化 @nbfe/standard](https://www.npmjs.com/package/stylelint-formatters-html)\n- [基于 Electron 的前端工作台](https://github.com/shuoshubao/magpie)\n- [eslint-formatter-html](https://github.com/shuoshubao/eslint-formatter-html)\n- [webpack-analyzer](https://github.com/shuoshubao/webpack-analyzer)\n- [esbuild-analyzer](https://github.com/shuoshubao/esbuild-analyzer)\n"
  },
  "html/HtmlElement": {
    "title": "HTML 标签",
    "content": "# Base\n\n- <\\!DOCTYPE>\n- html\n- head\n- title\n- meta\n- base\n- body\n- style\n- link\n- script\n\n# Div\n\n- div\n- article\n- section\n- aside\n- header\n- main\n- nav\n- menu\n- footer\n- dialog\n\n# Span\n\n- a\n- p\n- img\n- span\n- br,hr\n- h1,h2,h3,h4,h5,h6\n- b,i,em,var,del,strong\n- sub,sup,big,small\n\n# Form\n\n- form\n- button\n- input\n- label\n- textarea\n- select,optgroup,option\n- fieldset,legend（没啥用）\n\n# Table\n\n- table\n- caption\n- thead\n- tbody\n- tfoot\n- tr\n- th\n- td\n- colgroup\n- col\n\n# List\n\n- ul\n- ol\n- li\n- dl\n- dt\n- dd\n\n# Never Used\n\n- hgroup\n- summary\n- details\n- figcaption\n- figure\n"
  },
  "html/HtmlEntity": {
    "title": "HTML 字符实体",
    "content": "| 符号   | 实体名称   |\n| ------ | ---------- |\n|        | `&nbsp;`   |\n| <      | `&lt;`     |\n| >      | `&gt;`     |\n| &#124; | `&#124;`   |\n| &      | `&amp;`    |\n| \"      | `&quot;`   |\n| '      | `&apos;`   |\n| ×      | `&times;`  |\n| ÷      | `&divide;` |\n| §      | `&sect;`   |\n| ©      | `&copy;`   |\n| ®      | `&reg;`    |\n| ™      | `&trade;`  |\n"
  },
  "html/Html5": {
    "title": "HTML5",
    "content": "# 语义化标签\n\n- header\n- main\n- footer\n- article\n- section\n- aside\n- menu\n- nav\n- dialog\n- figure\n- figcaption\n\n# JS 加载\n\n- defer\n- async\n\n# 输入类型\n\n- number\n- tel\n- url\n- email\n- search\n- range\n\n# 表单属性\n\n- required\n- placeholder\n- autocomplete\n- pattern\n- formcation\n\n# 音频、视频\n\n- audio\n- vedio\n\n# querySelector\n\n- querySelector()\n- querySelectorAll()\n- getElementsByClassName()\n\n# classList\n\n- length\n- item\n- add()\n- remove()\n- toggle()\n- contains()\n\n# dataset\n\n# JSON\n\n- JSON.parse()\n- JSON.stringify()\n\n# 历史管理\n\n- window.onhashchange\n- window.onpopstate\n- history.pushState()\n- history.replaceState()\n\n# Storage\n\n- window.onstorage\n- window.sessionStorage\n- window.localStorage\n- getItem()\n- setItem()\n- removeItem()\n- clear()\n\n# Geolocation\n\n- navigator.geolocation.getCurrentPosition()\n- navigator.geolocation.watchPosition()\n- navigator.geolocation.clearWatch()\n\n# FormData\n\n# FileReader\n\n# Blob\n\n# WebSocket\n\n# Canvas\n\n# WebGL\n\n# SVG\n\n# Orientation\n\n# Fullscreen\n\n# Notification\n\n# 离线应用\n\n- AddType text/cache-manifest .manifest\n- manifest=\"xxxxx.manifest\"\n- CACHE MANIFEST\n"
  },
  "html/Event": {
    "title": "HTML 事件属性",
    "content": "# Window\n\n- onresize\n- onredo\n- onundo\n- onload\n- onunload\n- onbeforeunload\n- onerror\n- onhaschange\n- onpopstate\n- onstorage\n- onmessage\n- onpagehide\n- onpageshow\n- ononline\n- onoffline\n- onafterprint\n- onbeforeprint\n\n# Form\n\n- oninput\n- onselect\n- onchange\n- onfocus\n- onblur\n- onsubmit\n- onreset\n- onformchange\n- onforminput\n- oninvalid\n\n# Keyboard\n\n- onkeydown\n- onkeypress\n- onkeyup\n\n# Mouse\n\n- onclick\n- ondblclick\n- oncontextmenu\n- onscroll\n- onmousewheel\n- onmousedown\n- onmousemove\n- onmouseout\n- onmouseover\n- onmouseup\n\n# Drag\n\n- ondrag\n- ondragend\n- ondragenter\n- ondragleave\n- ondragover\n- ondragstart\n- ondrop\n\n# Media\n\n- onplay\n- onplaying\n- onpause\n- onprogress\n- onerror\n- onabort\n- onwaiting\n- oncanplay\n- oncanplaythrough\n- ondurationchange\n- onemptied\n- onended\n- onloadeddata\n- onloadedmetadata\n- onloadstart\n- onratechange\n- onreadystatechange\n- onseeked\n- onseeking\n- onstalled\n- onsuspend\n- ontimeupdate\n- onvolumechange\n"
  },
  "html/Meta": {
    "title": "Meta",
    "content": "# charset\n\n```html\n<meta charset=\"utf-8\" />\n```\n\n# tdk\n\n```html\n<meta name=\"description\" content=\"\" />\n<meta name=\"keywords\" content=\"\" />\n<meta name=\"author\" content=\"\" />\n```\n\n# favicon icon\n\n```html\n<link rel=\"shortcut icon\" type=\"image/ico\" href=\"/favicon.ico\" />\n```\n\n# RSS\n\n```html\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS\" href=\"/rss.xml\" />\n```\n\n# viewport\n\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n<meta name=\"viewport\" content=\"width=375\" />\n<meta name=\"viewport\" content=\"width=414\" />\n```\n\n# 360\n\n```html\n<meta name=\"renderer\" content=\"webkit\" /> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n```\n\n# 百度禁止转码\n\n```html\n<meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" />\n```\n\n# IOS\n\n## 设备\n\n```html\n<meta name=\"apple-mobile-web-app-title\" content=\"\" />\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\" />\n// default black black-translucent\n<meta name=\"format-detection\" content=\"telephone=no\" />\n```\n\n## 图标\n\n```html\n<link rel=\"apple-touch-icon-precomposed\" href=\"\" />\n<link rel=\"apple-touch-icon-precomposed\" sizes=\"57x57\" href=\"\" />\n<link rel=\"apple-touch-icon-precomposed\" sizes=\"72x72\" href=\"\" />\n<link rel=\"apple-touch-icon-precomposed\" sizes=\"114x114\" href=\"\" />\n<link rel=\"apple-touch-icon-precomposed\" sizes=\"120x120\" href=\"\" />\n<link rel=\"apple-touch-icon-precomposed\" sizes=\"180×180\" href=\"\" />\n```\n\n## 启动动画\n\n```html\n<link rel=\"apple-touch-startup-image\" sizes=\"768x1004\" href=\"/splash-screen-768x1004.png\" />\n<link rel=\"apple-touch-startup-image\" sizes=\"1536x2008\" href=\"/splash-screen-1536x2008.png\" />\n<link rel=\"apple-touch-startup-image\" sizes=\"1024x748\" href=\"/Default-Portrait-1024x748.png\" />\n<link rel=\"apple-touch-startup-image\" sizes=\"2048x1496\" href=\"/splash-screen-2048x1496.png\" />\n<link rel=\"apple-touch-startup-image\" href=\"/splash-screen-320x480.png\" />\n<link rel=\"apple-touch-startup-image\" sizes=\"640x960\" href=\"/splash-screen-640x960.png\" />\n<link rel=\"apple-touch-startup-image\" sizes=\"640x1136\" href=\"/splash-screen-640x1136.png\" />\n<link rel=\"apple-touch-startup-image\" href=\"launch6.png\" media=\"(device-width: 375px)\" />\n<link rel=\"apple-touch-startup-image\" href=\"launch6plus.png\" media=\"(device-width: 414px)\" />\n```\n\n# 移动端\n\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\" />\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\n<meta name=\"format-detection\" content=\"telephone=no, email=no\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\" />\n<!-- 删除苹果默认的工具栏和菜单栏 -->\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n<!-- 设置苹果工具栏颜色 -->\n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\n<!-- 忽略页面中的数字识别为电话，忽略email识别 -->\n<meta name=\"format-detection\" content=\"telphone=no, email=no\" />\n<!-- 启用360浏览器的极速模式(webkit) -->\n<meta name=\"renderer\" content=\"webkit\" />\n<!-- 避免IE使用兼容模式 -->\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n<!-- uc强制竖屏 -->\n<meta name=\"screen-orientation\" content=\"portrait\" />\n<!-- QQ强制竖屏 -->\n<meta name=\"x5-orientation\" content=\"portrait\" />\n<!-- UC强制全屏 -->\n<meta name=\"full-screen\" content=\"yes\" />\n<!-- QQ强制全屏 -->\n<meta name=\"x5-fullscreen\" content=\"true\" />\n<!-- UC应用模式 -->\n<meta name=\"browsermode\" content=\"application\" />\n<!-- QQ应用模式 -->\n<meta name=\"x5-page-mode\" content=\"app\" />\n```\n"
  },
  "css/Total": {
    "title": "CSS",
    "content": "# Box\n\n- width / height\n- margin / padding\n- border\n- box-sizing : content-box / border-box\n- display\n\n# Float\n\n- float: left / right\n- clear: none / left / right / both / inherit\n\n# Position\n\n- position : static / inhreit / relative / absolute / fixed\n- z-index\n- top / right / bottom / left\n\n# [Selector](#css/selector)\n\n# Typesetting\n\n- color\n- background\n- font\n- line-height\n- text-decoration\n- text-indent\n- text-shadow\n- opacity\n- visibility\n- list-style\n- outline\n- box-shadow\n- border-radius\n- overflow\n- overflow-x\n- overflow-y\n- min-width\n- min-height\n- max-width\n- max-height\n- content\n- vertical-align\n- text-align\n- border-collapse:collapse\n- border-spacing:none\n- white-space\n- word-spacing\n- word-break\n- word-wrap\n\n# Media Query\n\n- @media\n\n# Animation\n\n- animation\n\n# Transition\n\n- transition\n\n# 2D / 3D\n\n- transform\n\n# other\n\n- -webkit-user-select: none\n- -webkit-input-placeholder: color\n- -webkit-text-size-adjust: none\n- -webkit-touch-callout: none\n- -webkit-overflow-scrolling: touch\n- -webkit-tap-highlight-color: transparent\n- ::-webkit-scrollbar\n- ::-webkit-full-screen\n"
  },
  "css/Selector": {
    "title": "CSS选择器",
    "content": "# 基础\n\n- \\*\n- \\#\n- \\.\n- ele\n\n# 层级\n\n- ,\n- 空格\n- \\>\n- \\+\n- ~\n\n# 属性\n\n- [attr]\n- [attr=val]\n- [attr*=val]\n- [attr~=val]\n- [attr^=val]\n- [attr$=val]\n- [attr\\|=val]\n\n# 伪类\n\n- :link\n- :active\n- :hover\n- :visited\n\n# 伪元素\n\n- :before\n- :after\n- :first-letter\n- :first-line\n\n# 索引\n\n- :first-child\n- :last-child\n- :only-child\n- :nth-child(n)\n- :nth-last-child(n)\n- :first-of-type\n- :last-of-type\n- :only-of-type\n- :nth-of-type(n)\n- :nth-last-of-type(n)\n\n# 表单\n\n- :focus\n- :enabled\n- :disabled\n- :checked\n\n# 其他\n\n- :not()\n- :empty\n- :target\n- :selection\n\n# webkit\n\n- :-webkit-scrollbar\n- :-webkit-full-screen\n- :-webkit-touch-callout\n- -webkit-text-size-adjust\n- -webkit-input-placeholder\n- -webkit-overflow-scrolling\n- -webkit-tap-highlight-color\n- -webkit-filter\n\n# Never Use\n\n- :root\n- :lang()\n"
  },
  "css/Flex": {
    "title": "Flex",
    "content": "# Flex\n\n- display: flex | inline-flex\n\n# 容器\n\n- flex-direction: row | row-reverse | column | column-reverse\n- flex-wrap: nowrap | wrap | wrap-reverse\n- flex-flow: <flex-direction> | <flex-wrap>\n- justify-content: flex-start | flex-end | center | space-between | space-around\n- align-items: flex-start | flex-end | center | baseline | stretch\n- align-content: flex-start | flex-end | center | space-between | space-around | stretch\n\n# 项目\n\n- order: <integer> /_ default 0 _/\n- flex-grow: <number> /_ default 0 _/\n- flex-shrink: <number> /_ default 1 _/\n- flex-basis: <length> | auto /_ default auto _/\n- flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\n- align-self: auto | flex-start | flex-end | center | baseline | stretch\n\n# Referrence\n\n- [阮一峰 flex-grammar](http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html)\n"
  }
}
